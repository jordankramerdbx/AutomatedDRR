namespace drr.regulation.asic.rewrite.trade
version "6.0.0-dev.31"

import cdm.base.*
import cdm.event.common.*
import drr.regulation.asic.*
import drr.regulation.common.*
import cdm.base.staticdata.* as staticdata
import cdm.product.* as product
import drr.standards.iosco.cde.* as cde
import drr.standards.iso.*
import drr.regulation.common.trade.* as common

corpus Dissemination Trade

report ASIC Trade in T+1
  	from TransactionReportInstruction
  	when ReportableProduct
  	with type ASICTransactionReport
    with source ASICRules

eligibility rule ReportableProduct from TransactionReportInstruction: <"When eligible for ASIC">
    [regulatoryReference ASIC Trade
        provision "Demonstrative eligibility rule for display"]
    True

rule source ASICRules
{
    ASICTransactionReport:
        - reportingTimestamp
        + reportingTimestamp
            [ruleReference ReportingTimestamp]
        - counterparty1
        + counterparty1
             [ruleReference Counterparty1]
        - counterparty2
        + counterparty2
            [ruleReference Counterparty2]
        - counterparty2IdentifierTypeIndicator
        + counterparty2IdentifierTypeIndicator
            [ruleReference Counterparty2IdentifierTypeIndicator]
        - counterparty2Name
        + counterparty2Name
            [ruleReference Counterparty2Name]
        - centralCounterparty
        + centralCounterparty
            [ruleReference CentralCounterparty]
        - beneficiary1
        + beneficiary1
            [ruleReference Beneficiary1]
        - beneficiary1IdentifierTypeIndicator
        + beneficiary1IdentifierTypeIndicator
            [ruleReference Beneficiary1IdentifierTypeIndicator]
        - executionAgentCounterparty1
        + executionAgentCounterparty1
            [ruleReference ExecutionAgentCounterparty1]
        - executionAgentCounterparty2DTCC
        + executionAgentCounterparty2DTCC
            [ruleReference ExecutionAgentCounterparty2DTCC]
        - reportSubmittingEntityID
        + reportSubmittingEntityID
            [ruleReference ReportSubmittingEntity]
        - clearingMember
        + clearingMember
            [ruleReference ClearingMember]
        + uniqueTransactionIdentifier
            [ruleReference UniqueTransactionIdentifier]
        + uniqueTransactionIdentifierProprietary
            [ruleReference UtiProprietary]
        + priorUTI
            [ruleReference PriorUTI]
        + priorUTIProprietary
            [ruleReference PriorUTIProprietary]
        - cleared
        + cleared 
            [ruleReference Cleared]
        - assetClass
        + assetClass
            [ruleReference AssetClass]
        - contractType
        + contractType
            [ruleReference ContractType]
        - uniqueProductIdentifier
        + uniqueProductIdentifier
            [ruleReference UniqueProductIdentifier]
        - platformIdentifier
        + platformIdentifier
            [ruleReference PlatformIdentifier]
        - direction1
        + direction1
            [ruleReference Direction1]
        - direction2Leg1
        + direction2Leg1
            [ruleReference Direction2Leg1]
        - direction2Leg2
        + direction2Leg2
            [ruleReference Direction2Leg2]
        - exchangeRate
        + exchangeRate
            [ruleReference ExchangeRate]
        - exchangeRateBasis
        + exchangeRateBasis
            [ruleReference ExchangeRateBasis]
        - effectiveDate
        + effectiveDate
            [ruleReference EffectiveDate]
        - expirationDate
        + expirationDate
            [ruleReference ExpirationDate]
        - executionTimestamp
        + executionTimestamp
            [ruleReference ExecutionTimestamp]
        - clearingTimestamp
        + clearingTimestamp
            [ruleReference ClearingTimestamp]
        - eventTimestamp
        + eventTimestamp
            [ruleReference EventTimestamp]
        - eventType
        + eventType
            [ruleReference EventType]
        - actionType
        + actionType 
            [ruleReference ActionType]
        - floatingRateIndicatorLeg2
        + floatingRateIndicatorLeg2
            [ruleReference IndicatorOfTheFloatingRateLeg2]
        - fixedRateLeg1
        + fixedRateLeg1
            [ruleReference FixedRateLeg1]
        - fixedRateLeg2
        + fixedRateLeg2
            [ruleReference FixedRateLeg2]
        - notionalAmountLeg1
        + notionalAmountLeg1
            [ruleReference NotionalAmountLeg1]
        - notionalAmountLeg2
        + notionalAmountLeg2
            [ruleReference NotionalAmountLeg2]
        - notionalCurrencyLeg1
        + notionalCurrencyLeg1
            [ruleReference NotionalCurrencyLeg1]
        - notionalCurrencyLeg2
        + notionalCurrencyLeg2
            [ruleReference NotionalCurrencyLeg2]
        - totalNotionalQuantityLeg1
        + totalNotionalQuantityLeg1
            [ruleReference TotalNotionalQuantityLeg1]
        - totalNotionalQuantityLeg2
        + totalNotionalQuantityLeg2
            [ruleReference TotalNotionalQuantityLeg2]
        - notionalQuantityLeg1
        + notionalQuantityLeg1
            [ruleReference NotionalQuantityLeg1]
        - notionalQuantityLeg2
        + notionalQuantityLeg2
            [ruleReference NotionalQuantityLeg2]
        - floatingRateReferencePeriodOfLeg2TimePeriod
        + floatingRateReferencePeriodOfLeg2TimePeriod
            [ruleReference FloatingRateReferencePeriodLeg2]
        - floatingRateReferencePeriodOfLeg2Multiplier
        + floatingRateReferencePeriodOfLeg2Multiplier
            [ruleReference FloatingRateReferencePeriodMultiplierLeg2]
        - packageIdentifier
        + packageIdentifier
            [ruleReference PackageIdentifier]
        - callAmount
        + callAmount
            [ruleReference CallAmount]
        - callCurrency
        + callCurrency
            [ruleReference CallCurrency]
        - putAmount
        + putAmount
            [ruleReference PutAmount]
        - putCurrency
        + putCurrency
            [ruleReference PutCurrency]
        - settlementCurrencyLeg1
        + settlementCurrencyLeg1
            [ruleReference SettlementCurrencyLeg1]
        - settlementCurrencyLeg2
        + settlementCurrencyLeg2
            [ruleReference SettlementCurrencyLeg2]
        - optionPremiumAmount
        + optionPremiumAmount
            [ruleReference OptionPremiumAmount]
        - optionPremiumCurrency
        + optionPremiumCurrency
            [ruleReference OptionPremiumCurrency]
        - optionPremiumPaymentDate
        + optionPremiumPaymentDate
            [ruleReference OptionPremiumPaymentDate]
        - priceUnitOfMeasure
        + priceUnitOfMeasure
            [ruleReference PriceUnitOfMeasure]
        - cdSIndexAttachmentPoint
        + cdSIndexAttachmentPoint
            [ruleReference CDSIndexAttachmentPoint]
        - cdSIndexDetachmentPoint
        + cdSIndexDetachmentPoint
            [ruleReference CDSIndexDetachmentPoint]
        + quantityUnitOfMeasureLeg1
            [ruleReference QuantityUnitOfMeasureLeg1]
        + quantityUnitOfMeasureLeg2
            [ruleReference QuantityUnitOfMeasureLeg2]
        - confirmed
        - periodicPaymentLeg1
        + periodicPaymentLeg1
            [ruleReference PeriodicPaymentLeg1]
        - periodicPaymentLeg2
        + periodicPaymentLeg2
            [ruleReference PeriodicPaymentLeg2]
        - basketConstituents
        + basketConstituents
            [ruleReference BasketConstituents]
        - otherPayment
        + otherPayment
            [ruleReference OtherPayment]

    common.payment.PeriodicPayment1:
        + fixedRateDayCountConvention
            [ruleReference DayCountConventionLeg1]
        + floatingRateDayCountConvention
            [ruleReference DayCountConventionLeg1]
        + fixedRatePaymentFrequencyPeriod
            [ruleReference PaymentFrequencyPeriodLeg1]
        + floatingRatePaymentFrequencyPeriod
            [ruleReference PaymentFrequencyPeriodLeg1]
        + fixedRatePaymentFrequencyPeriodMultiplier
            [ruleReference PaymentFrequencyPeriodMultiplierLeg1]
        + floatingRatePaymentFrequencyPeriodMultiplier
            [ruleReference PaymentFrequencyPeriodMultiplierLeg1]

    common.payment.PeriodicPayment2:
        + fixedRateDayCountConvention
            [ruleReference DayCountConventionLeg2]
        + floatingRateDayCountConvention
            [ruleReference DayCountConventionLeg2]
        + fixedRatePaymentFrequencyPeriod
            [ruleReference PaymentFrequencyPeriodLeg2]
        + floatingRatePaymentFrequencyPeriod
            [ruleReference PaymentFrequencyPeriodLeg2]
        + fixedRatePaymentFrequencyPeriodMultiplier
            [ruleReference PaymentFrequencyPeriodMultiplierLeg2]
        + floatingRatePaymentFrequencyPeriodMultiplier
            [ruleReference PaymentFrequencyPeriodMultiplierLeg2]

    common.price.PriceAndNotation:
        - priceMonetary
        + priceMonetary
            [ruleReference PriceFormatMonetary]
        - priceDecimal
        + priceDecimal
            [ruleReference PriceFormatDecimal]
        - pricePercentage
        - priceCurrency
        + priceCurrency
            [ruleReference PriceCurrency]
        - priceNotation
        + priceNotation
            [ruleReference PriceNotation]

    common.price.PackageTransactionPrice:
        - packageTransactionPriceMonetary
        + packageTransactionPriceMonetary
            [ruleReference PackageTransactionPriceMonetary]
        - packageTransactionPriceDecimal
        + packageTransactionPriceDecimal
            [ruleReference PackageTransactionPriceDecimal]
        - packageTransactionPriceNotation
        + packageTransactionPriceNotation
            [ruleReference PackageTransactionPriceNotation]
        - packageTransactionPriceCurrency
        + packageTransactionPriceCurrency
            [ruleReference PackageTransactionPriceCurrency]

    common.price.PackageTransactionSpread:
        - packageTransactionSpreadMonetary
        + packageTransactionSpreadMonetary
            [ruleReference PackageTransactionSpreadMonetary]
        - packageTransactionSpreadDecimal
        + packageTransactionSpreadDecimal
            [ruleReference PackageTransactionSpreadDecimal]
        - packageTransactionSpreadBasis
        + packageTransactionSpreadBasis
            [ruleReference PackageTransactionSpreadBasis]
        - packageTransactionSpreadNotation
        + packageTransactionSpreadNotation
            [ruleReference PackageTransactionSpreadNotation]
        - packageTransactionSpreadCurrency
        + packageTransactionSpreadCurrency
            [ruleReference PackageTransactionSpreadCurrency]

    common.price.SpreadLeg1:
        - spreadLeg1Monetary
        + spreadLeg1Monetary
            [ruleReference SpreadLeg1Monetary]
        - spreadLeg1Decimal
        + spreadLeg1Decimal
            [ruleReference SpreadLeg1Decimal]
        - spreadLeg1Basis
        + spreadLeg1Basis
            [ruleReference SpreadLeg1Basis]
        - spreadCurrencyLeg1
        + spreadCurrencyLeg1
            [ruleReference SpreadCurrencyLeg1]
        - spreadNotationLeg1
        + spreadNotationLeg1
            [ruleReference SpreadLeg1Notation]

    common.price.SpreadLeg2:
        - spreadLeg2Monetary
        + spreadLeg2Monetary
            [ruleReference SpreadLeg2Monetary]
        - spreadLeg2Decimal
        + spreadLeg2Decimal
            [ruleReference SpreadLeg2Decimal]
        - spreadLeg2Basis
        + spreadLeg2Basis
            [ruleReference SpreadLeg2Basis]
        - spreadCurrencyLeg2
        + spreadCurrencyLeg2
            [ruleReference SpreadCurrencyLeg2]
        - spreadNotationLeg2
        + spreadNotationLeg2
            [ruleReference SpreadLeg2Notation]

    common.price.StrikePriceAndNotation:
        - strikePriceMonetary
        + strikePriceMonetary
            [ruleReference StrikePriceMonetary]
        - strikePriceDecimal
        + strikePriceDecimal
            [ruleReference StrikePriceDecimal]
        - strikePriceNotation
        + strikePriceNotation
            [ruleReference StrikePriceNotation]
        - strikePriceCurrency
        + strikePriceCurrency
            [ruleReference StrikePriceCurrencyCurrencyPair]

    common.price.BarrierAndNotation:
        - singleBarrierPriceMonetary
        + singleBarrierPriceMonetary
            [ruleReference SingleBarrierPriceMonetary]
        - singleBarrierPriceDecimal
        + singleBarrierPriceDecimal
            [ruleReference SingleBarrierPriceDecimal]
        - lowerBarrierPriceMonetary
        + lowerBarrierPriceMonetary
            [ruleReference LowerBarrierPriceMonetary]
        - lowerBarrierPriceDecimal
        + lowerBarrierPriceDecimal
            [ruleReference LowerBarrierPriceDecimal]
        - upperBarrierPriceMonetary
        + upperBarrierPriceMonetary
            [ruleReference UpperBarrierPriceMonetary]
        - upperBarrierPriceDecimal
        + upperBarrierPriceDecimal
            [ruleReference UpperBarrierPriceDecimal]
        - singleBarrierPriceNotation
        + singleBarrierPriceNotation
            [ruleReference SingleBarrierPriceNotation]
        - lowerBarrierPriceNotation
        + lowerBarrierPriceNotation
            [ruleReference LowerBarrierPriceNotation]
        - upperBarrierPriceNotation
        + upperBarrierPriceNotation
            [ruleReference UpperBarrierPriceNotation]
        - singleBarrierPriceCurrency
        + singleBarrierPriceCurrency
            [ruleReference SingleBarrierPriceCurrency]
        - lowerBarrierPriceCurrency
        + lowerBarrierPriceCurrency
            [ruleReference LowerBarrierPriceCurrency]
        - upperBarrierPriceCurrency
        + upperBarrierPriceCurrency
            [ruleReference UpperBarrierPriceCurrency]

    common.contract.UnderlyingIdentifier:
        + underlyingIdentification
        [ruleReference UnderlyingIdentification]
        + underlyingIdentificationType
        [ruleReference UnderlyingIdentificationType]
        + underlyingIdOther
        [ruleReference UnderlyingIdOther]
        + underlyingIdOtherSource
        [ruleReference UnderlyingIdOtherSource]

    common.basket.BasketConstituentsReport:
        - identifier
        + identifier
            [ruleReference BasketConstituentIdentifiers]
        - source
        + source
            [ruleReference BasketConstituentIdentifierSource]

    common.payment.OtherPaymentReport:
        + paymentType
            [ruleReference OtherPaymentType]
        + amount
            [ruleReference OtherPaymentAmount]
        + currency
            [ruleReference OtherPaymentCurrency]
        + date
            [ruleReference OtherPaymentDate]
        + payer
            [ruleReference OtherPaymentPayer]
        + payerFormat
            [ruleReference OtherPaymentPayerFormat]
        + receiver
            [ruleReference OtherPaymentReceiver]
        + receiverFormat
            [ruleReference OtherPaymentReceiverFormat]
}

//ASIC Definitions
reporting rule UniqueTransactionIdentifier from TransactionReportInstruction: <"Unique transaction identifier">
    [regulatoryReference ASIC Trade table "1" dataElement "1" field "Unique transaction identifier"
        provision "For a Reportable Transaction of the kind referred to in 1.2.5(1)(b)(i), (iii) or (iv), a UTI as referred to in Rule 2.2.9.
            For a report made under Rule 2.2.2 of the kind referred to in paragraph 2.2.2(2)(c) a UTI as referred to in Rule 2.2.9.
            For a Reportable Transaction of the kind referred to in subparagraph 1.2.5(1)(b)(ii) in relation to an OTC Derivative or for a report made under paragraph 2.2.2(2)(a) or (b) or Rule 2.4.1 in relation to an OTC Derivative:
                if a UTI was reported for the initial Reportable Transaction in relation to the OTC Derivativethat UTI; and
                if a UTI was not reported for the initial Reportable Transaction  a transaction identifier that was reported for the initial Reportable Transaction."]
    common.transaction.GetUniqueTransactionIdentifier(item, ASIC)
        then filter IsMax32UpperCaseAlphanumericText = True
        as "1.1 Unique transaction identifier"

reporting rule UtiProprietary from TransactionReportInstruction: <"Unique transaction identifier">
    [regulatoryReference ASIC Trade table "1" dataElement "1" field "Unique transaction identifier"
        provision "For a Reportable Transaction of the kind referred to in 1.2.5(1)(b)(i), (iii) or (iv), a UTI as referred to in Rule 2.2.9.
            For a report made under Rule 2.2.2 of the kind referred to in paragraph 2.2.2(2)(c) a UTI as referred to in Rule 2.2.9.
            For a Reportable Transaction of the kind referred to in subparagraph 1.2.5(1)(b)(ii) in relation to an OTC Derivative or for a report made under paragraph 2.2.2(2)(a) or (b) or Rule 2.4.1 in relation to an OTC Derivative:
                if a UTI was reported for the initial Reportable Transaction in relation to the OTC Derivativethat UTI; and
                if a UTI was not reported for the initial Reportable Transaction  a transaction identifier that was reported for the initial Reportable Transaction.  (Trade identifier expressed in a proprietary notation)"]
    common.transaction.GetUniqueTransactionIdentifier(item, ASIC)
        then filter IsMax32UpperCaseAlphanumericText = False
        as "1.1 Unique transaction identifier (ProprietaryID)"

reporting rule SecondaryTransactionIdentifier from TransactionReportInstruction: <"Secondary transaction identifier">
    [regulatoryReference ASIC Trade table "1" dataElement "1a" field "Secondary transaction identifier"
        provision "A secondary transaction identifier that may be, but is not required to be, reported at this item."]
    extract TradeForEvent
    then extract tradeIdentifier
    then filter
        identifierType <> staticdata.identifier.TradeIdentifierTypeEnum -> UniqueTransactionIdentifier
            and identifierType <> staticdata.identifier.TradeIdentifierTypeEnum -> UniqueSwapIdentifier
    then extract assignedIdentifier -> identifier
    then flatten
    then distinct
    then only-element
        as "1.1a Secondary transaction identifier"

reporting rule UniqueProductIdentifier from TransactionReportInstruction: <"Unique product identifier">
    [regulatoryReference ASIC Trade table "1" dataElement "2" field "Unique product identifier"
        provision "The product identifier for the kind of OTC Derivative the subject of the Reportable Transaction.
            This data element is not required in a report about
            the termination of an OTC Derivative."]
    filter
        IsAllowableActionForASIC or IsActionTypeTERM or IsActionTypePRTO or IsActionTypeEROR
    then extract common.contract.UniqueProductIdentifier
        as "1.2 Unique product identifier"

reporting rule AssetClass from TransactionReportInstruction: <"Asset class">
    [regulatoryReference ASIC Trade table "1" dataElement "3" field "Asset class"
        provision "An indicator of the asset class of the UPI reported under item 2."]
    common.contract.AssetClass
        as "1.3 Asset class"

reporting rule ContractType from TransactionReportInstruction: <"Contract type">
    [regulatoryReference ASIC Trade table "1" dataElement "4" field "Contract type"
        provision "An indicator of the instrument type or product name of the UPI reported under item 2."]
    common.contract.ContractType
        as "1.4 Contract type"

reporting rule ReportingEntity from TransactionReportInstruction: <"Reporting entity">
    [regulatoryReference ASIC Trade table "1" dataElement "5" field "Reporting entity"
        provision "The current LEI of the Reporting Entity"]
    extract ExtractPartyResponsibleForReportingIdentifier(reportingSide)
        as "1.5 Reporting entity"

reporting rule Counterparty1 from TransactionReportInstruction: <"Counterparty 1">
    [regulatoryReference ASIC Trade table "1" dataElement "6" field "Counterparty 1"
        provision "The current LEI of:
            If the Reporting Entity is an RE, Trustee or corporate director of the managed investment scheme, trust or CCIV that holds the OTC Derivative the subject of the Reportable Transaction, the managed investment scheme, trust or CCIV.
            Otherwise, the Reporting Entity."]
    extract cde.party.Counterparty1
        as "1.6 Counterparty 1"

reporting rule Counterparty2 from TransactionReportInstruction: <"Counterparty 2">
    [regulatoryReference ASIC Trade table "1" dataElement "7" field "Counterparty 2"
        provision "The LEI or another identifier, determined in accordance with subrule S1.3.1(2), of the entity that is:
        if the counterparty of the OTC Derivative the subject of the Reportable Transaction whose identifier is not reported at item 6 is an RE or Trustee of the managed investment scheme or trust that holds the OTC Derivative the subject of the Reportable Transaction, the managed investment scheme or trust; 
        otherwise, the counterparty of the OTC Derivative the subject of the Reportable Transaction whose identifier is not reported for Counterparty 1 (item 6 above).
    If the OTC Derivative the subject of the Reportable Transaction was entered into on or through a facility and cleared by a CCP, and the identities of the counterparties were not disclosed to each other, an anonymity identifier."]
    extract common.party.Counterparty2
        as "1.7 Counterparty 2"

reporting rule Counterparty2Name from TransactionReportInstruction: <"Counterparty 2 name">
    [regulatoryReference ASIC Trade table "1" dataElement "7" field "Counterparty 2 name"
        provision "If the identifier reported for Counterparty 2 (item 7 above) is not an LEI, a Designated Business Identifier or the value ANON, the legal name of Counterparty 2."]
    extract common.party.Counterparty2Name
        as "1.7a Counterparty 2 name"

reporting rule Counterparty2IdentifierTypeIndicator from TransactionReportInstruction: <"Counterparty identifier type indicator">
    [regulatoryReference ASIC Trade table "1" dataElement "8" field "Counterparty identifier type indicator"
        provision "For the identifier reported for Counterparty 2 (item 7 above), the applicable True or False value specified in column 5 of this item."]
    extract common.party.Counterparty2IdentifierTypeIndicator
        as "1.8 Counterparty 2 identifier type indicator"

reporting rule CountryOfCounterparty2 from TransactionReportInstruction: <"Country of Counterparty 2">
    [regulatoryReference ASIC Trade table "1" dataElement "9" field "Country of Counterparty 2"
        provision "For an identifier type reported as False under item 8 above, the code of the country of residence or registered business address of Counterparty 2 (item 7 above)."]
    filter IsAllowableActionForASIC
    then extract reportInstruction [
        extract reportableInformation -> partyInformation
        then filter
            partyReference = reportInstruction -> reportingSide -> reportingCounterparty
        then only-element
        then extract
            partyReference -> person -> contactInformation -> address -> country only-element
        then extract to-enum staticdata.asset.common.ISOCountryCodeEnum
    ]
        as "1.9 Country of Counterparty 2"

reporting rule Beneficiary1 from TransactionReportInstruction: <"Beneficiary 1">
    [regulatoryReference ASIC Trade table "1" dataElement "10" field "Beneficiary 1"
        provision "Where a person other than the Reporting Entity or the beneficiaries of a managed investment scheme, trust or CCIV is a beneficiary of the rights and obligations of the Reportable Transaction, the LEI or other identifier of the beneficiary determined in accordance with subrule S1.3.1(2)."]
    filter IsAllowableActionForASIC
    then extract cde.party.Beneficiary1
        as "1.10 Beneficiary 1"

reporting rule Beneficiary1IdentifierTypeIndicator from TransactionReportInstruction: <"Beneficiary 1 identifier type indicator">
    [regulatoryReference ASIC Trade table "1" dataElement "11" field "Beneficiary 1 identifier type indicator"
        provision "For the identifier reported for Beneficiary 1 (item 10 above), the applicable True or False indicator specified in column 5 of this item."]
    filter IsAllowableActionForASIC
    then extract cde.party.Beneficiary1IdentifierTypeIndicator
        as "1.11 Beneficiary 1 identifier type indicator"

reporting rule Broker from TransactionReportInstruction: <"Broker">
    [regulatoryReference ASIC Trade table "1" dataElement "12" field "Broker"
        provision "If a broker acted as intermediary for the Reporting Entity in relation to the Reportable Transaction, without becoming a counterparty to the OTC Derivative the subject of the Reportable Transaction, the LEI of the broker"]
    filter IsAllowableActionForASIC
    then extract
        ExtractPartyFromRelatedPartyByRole(
                reportableInformation -> partyInformation -> relatedParty,
                staticdata.party.PartyRoleEnum -> ArrangingBroker
            )
    then extract PartyLei(partyId)
        as "1.12 Broker"

reporting rule ExecutionAgentCounterparty1 from TransactionReportInstruction: <"Execution agent of the Counterparty 1">
    [regulatoryReference ASIC Trade table "1" dataElement "13" field "Execution agent of Counterparty 1"
        provision "If applicable, the LEI of the entity that entered into the Reportable Transaction as agent for the Reporting Entity without becoming a counterparty themselves."]
    filter
        IsAllowableActionForASIC or IsActionTypeTERM or IsActionTypeEROR or IsActionTypePRTO or IsActionTypeVALU
    then extract common.party.ExecutionAgentCounterparty1
        as "1.13 Execution agent of Counterparty 1"

reporting rule Direction1 from TransactionReportInstruction: <"Direction 1">
    [regulatoryReference ASIC Trade table "1" dataElement "14" field "Direction 1"
        provision "An indicator of whether the Reporting Entity is the buyer or the seller at the time the Reportable Transaction is entered into.
        This data element is required for OTC Derivatives:
            where, other than for foreign exchange derivatives, the UPI that is reported is for an instrument type that is a forward;
            that are options, contracts for difference (other than foreign exchange contracts for difference) or credit default swaps;
            where the underlier to the OTC Derivative is a measure of variance, volatility, correlation, dividend or other attribute of an underlier (other than its price) which may vary in value; or
            a value is not reported for Direction 2Leg 1 (item 15 below) or Direction 2Leg 2 (item 16 below).
        This data element is not applicable to Reportable Transactions for which a value for Direction 2Leg 1 (item 15 below) is required to be reported."]
    filter IsAllowableActionForASIC
    then extract common.party.Direction1
        as "1.14 Direction 1"

reporting rule Direction2Leg1 from TransactionReportInstruction: <"Direction 2 - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "15" field "Direction 2 - Leg 1"
        provision "An indicator of whether the Reporting Entity is the payer or the receiver of leg 1 at the time the Reportable Transaction is entered into.
        This data element is required for Reportable Transactions where an allowable value is not reported for Direction 1 (item 14 above).
        This data element is not applicable to Reportable Transactions for which an allowable value for Direction 1 (item 14 above) is required to be reported."]
    /*
     * 4 alphabetic characters:
     * 	MAKE = payer
     * 	TAKE = receiver
     * Populated in accordance with Article 3a
     */
    filter IsAllowableActionForASIC
    then extract common.party.Direction2Leg1
        as "1.15 Direction 2 - Leg 1"

reporting rule Direction2Leg2 from TransactionReportInstruction: <"Direction 2 - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "16" field "Direction 2 - Leg 2"
        provision "An indicator of whether the Reporting Entity is the payer or the receiver of leg 2 at the time the Reportable Transaction is entered into.
        This data element is required for Reportable Transactions for which an allowable value is reported for Direction 2 Leg 1 (item 15 above)."]
    /*
     * 4 alphabetic characters:
     * 	MAKE = payer
     * 	TAKE = receiver
     * Populated in accordance with Article 3a
     */
    filter IsAllowableActionForASIC
    then extract common.party.Direction2Leg2
        as "1.16 Direction 2 - Leg 2"

reporting rule EffectiveDate from TransactionReportInstruction: <"Effective date">
    [regulatoryReference ASIC Trade table "1" dataElement "17" field "Effective date"
        provision "The unadjusted date at which obligations under the OTC Derivative the subject of the Reportable Transaction come into effect, taken from the trade confirmation."]
    filter IsAllowableActionForASIC
    then extract common.datetime.EffectiveDate
        as "1.17 Effective date"

reporting rule ExpirationDate from TransactionReportInstruction: <"Expiration date">
    [regulatoryReference ASIC Trade table "1" dataElement "18" field "Expiration date"
        provision "The unadjusted date at which obligations under the OTC Derivative the subject of the Reportable Transaction cease, taken from the trade confirmation."]
    filter IsAllowableActionForASIC
    then extract common.datetime.ExpirationDate
        as "1.18 Expiration date"

reporting rule ExecutionTimestamp from TransactionReportInstruction: <"Execution timestamp">
    [regulatoryReference ASIC Trade table "1" dataElement "19" field "Execution timestamp"
        provision "The date and time the OTC Derivative the subject of the Reportable Transaction was entered into. 
    This data element remains constant during the life of the OTC Derivative and must be included in all reports including a report about the termination of the OTC Derivative."]
    filter IsAllowableActionForASIC or IsActionTypeTERM
    then cde.datetime.ExecutionTimestamp
        as "1.19 Execution timestamp"

reporting rule EventTimestamp from TransactionReportInstruction: <"Event timestamp">
    [regulatoryReference ASIC Trade table "1" dataElement "20" field "Event timestamp"
        provision "The date and time of the occurrence of the event of the Event type (item 102 below) where the Action type (item 101 below) is reported as MODI or TERM."]
    filter
        IsAllowableActionForASIC or IsActionTypeTERM or IsActionTypeEROR or IsActionTypePRTO
    then extract cde.event.EventTimestamp
        as "1.20 Event timestamp"

reporting rule ClearingTimestamp from TransactionReportInstruction: <"Clearing timestamp">
    [regulatoryReference ASIC Trade table "1" dataElement "21" field "Clearing timestamp"
        provision "If the Reportable Transaction was cleared at a CCP,
        the date and time, notified to the Reporting Entity by a CCP, that the OTC Derivative the subject of the Reportable Transaction was cleared by the CCP."]
    filter IsAllowableActionForASIC
    then extract common.datetime.ClearingTimestamp
        as "1.21 Clearing timestamp"

reporting rule Cleared from TransactionReportInstruction: <"Cleared ">
    [regulatoryReference ASIC Trade table "1" dataElement "22" field "Cleared"
        provision "An indicator of whether the OTC Derivative the subject of the Reportable Transaction has been cleared, or the Reporting Entity intends it to be cleared, by a CCP."]
    filter IsAllowableActionForASIC
    then extract
        if IsCleared(originatingWorkflowStep)
        then ClearedEnum -> Y
        else ClearedEnum -> N
        as "1.22 Cleared"

reporting rule CentralCounterparty from TransactionReportInstruction: <"Central counterparty">
    [regulatoryReference ASIC Trade table "1" dataElement "23" field "Central counterparty"
        provision "Where Cleared (item 22 above) is reported as Y, the current LEI of the CCP that cleared the OTC Derivative the subject of the Reportable Transaction."]
    filter IsAllowableActionForASIC
    then cde.settlement.CentralCounterparty
        as "1.23 Central counterparty"

reporting rule ClearingMember from TransactionReportInstruction: <"Clearing member">
    [regulatoryReference ASIC Trade table "1" dataElement "24" field "Clearing member"
        provision "If the Reportable Transaction was cleared at a CCP, the LEI of the clearing member through which the Reportable Transaction was cleared at the CCP reported as Central counterparty (item 23 above)."]
    filter IsAllowableActionForASIC
    then extract cde.settlement.ClearingMember
        as "1.24 Clearing member"

reporting rule PlatformIdentifier from TransactionReportInstruction: <"Platform identifier">
    [regulatoryReference ASIC Trade table "1" dataElement "25" field "Platform identifier"
        provision "If the OTC Derivative the subject of the Reportable Transaction was entered into on or through financial market, the MIC of the facility.
    If the OTC Derivative the subject of the Reportable Transaction was not entered into on or through financial market, an indicator of whether:
    	the OTC Derivative the subject of the Reportable Transaction is able to be traded on or through financial market
    	the OTC Derivative the subject of the Reportable Transaction is not able to be traded on or through financial market
    	if the Reporting Entity is not able to determine whether the OTC Derivative the subject of the Reportable Transaction is, or is not, able to be traded on or through a facility financial market"]
    filter IsAllowableActionForASIC
    then extract common.settlement.PlatformIdentifier
        as "1.25 Platform identifier"

reporting rule NotionalAmountLeg1 from TransactionReportInstruction: <"Notional amount - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "26" field "Notional amount - Leg 1"
        provision "The notional amount taken from the trade confirmation of the Reportable Transaction.
    The notional amount, or payout where a single fixed payment is made based on certain conditions being met during the term of the OTC Derivative the subject of the Reportable Transaction, taken from, or determined in accordance with, the trade confirmation of the Reportable Transaction.
        If no notional amount is specified in the trade confirmation of the Reportable Transaction, or determinable in accordance with, the amount calculated by multiplying the amount reported as Total notional quantityLeg 1 (item 28 below) by:
        if the Reportable Transaction is an option, the value reported for Strike price (item 59 below);
        if the Reportable Transaction is not an option, the value reported for Price (item 47 below); or
        if Strike price (item 59 below) and Price (item 47 below) are not applicable to the Reportable Transaction, the market price for the underlier at the time of the transaction."]
    filter IsAllowableActionForASIC
    then extract common.quantity.NotionalAmountLeg1
        as "1.26 Notional amount - Leg 1"

reporting rule NotionalAmountLeg2 from TransactionReportInstruction: <"Notional amount - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "27" field "Notional amount - Leg 2"
        provision "If applicable, the notional amount taken from the trade confirmation of the Reportable Transaction and attributed by the Reporting Entity to Leg 2."]
    filter IsAllowableActionForASIC
    then extract common.quantity.NotionalAmountLeg2
        as "1.27 Notional amount - Leg 2"

reporting rule TotalNotionalQuantityLeg1 from TransactionReportInstruction: <"Total notional quantity - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "28" field "Total notional quantity - Leg 1"
        provision "If applicable, the aggregate notional quantity of the underlier attributed by the Reporting Entity to Leg 1 for the entire term of the OTC Derivative the subject of the Reportable Transaction."]
    filter IsAllowableActionForASIC
    then common.quantity.TotalNotionalQuantityLeg1
        as "1.28 Total notional quantity - Leg 1"

reporting rule TotalNotionalQuantityLeg2 from TransactionReportInstruction: <"Total notional quantity - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "29" field "Total notional quantity - Leg 2"
        provision "If applicable, the aggregate notional quantity of the underlier attributed by the Reporting Entity to Leg 2 for the entire term of the OTC Derivative the subject of the Reportable Transaction."]
    filter IsAllowableActionForASIC
    then common.quantity.TotalNotionalQuantityLeg2
        as "1.29 Total notional quantity - Leg 2"

reporting rule NotionalQuantityLeg1 from TransactionReportInstruction: <"Notional quantity - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "30" field "Notional quantity - Leg 1"
        provision "If applicable:
            the amount of the constant notional quantity of the underlier attributed by the Reporting Entity to Leg 1 for each period of the OTC Derivative the subject of the Reportable Transaction; or
            where the notional quantity of Leg 1 is not constant in each period of the OTC Derivative the subject of the Reportable Transaction, the notional quantity of the current period of the OTC Derivative the
        subject of the Reportable Transaction."]
    // EMIR repeatable, ASIC is cardinallity 1
    filter IsAllowableActionForASIC
    then common.quantity.NotionalQuantityLeg1
        as "1.30 Notional quantity - Leg 1"

reporting rule NotionalQuantityLeg2 from TransactionReportInstruction: <"Notional quantity - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "31" field "Notional quantity - Leg 2"
        provision "If applicable:
            the amount of the constant notional quantity of the underlier attributed by the Reporting Entity to Leg 2 for each period of the OTC Derivative the subject of the Reportable Transaction; or
            where the notional quantity of Leg 2 is not constant in each period of the OTC Derivative the subject of the Reportable Transaction, the notional quantity of the current period of the OTC Derivative the
        subject of the Reportable Transaction."]
    filter IsAllowableActionForASIC
    then common.quantity.NotionalQuantityLeg2
        as "1.31 Notional quantity - Leg 2"

reporting rule CallAmount from TransactionReportInstruction: <"Call amount">
    [regulatoryReference ASIC Trade table "1" dataElement "32" field "Call amount"
        provision "If the Reportable Transaction is a foreign exchange option and the UPI that is reported for Unique product identifier (item 2 above) is not a UPI for a digital option, the monetary amount that the option gives the right to buy."]
    filter IsAllowableActionForASIC
    then cde.quantity.CallAmount
        as "1.32 Call amount"

reporting rule PutAmount from TransactionReportInstruction: <"Put amount">
    [regulatoryReference ASIC Trade table "1" dataElement "33" field "Put amount"
        provision "If the Reportable Transaction is a foreign exchange option, the monetary amount that the option gives the right to sell."]
    filter IsAllowableActionForASIC
    then cde.quantity.PutAmount
        as "1.33 Put amount"

reporting rule NotionalCurrencyLeg1 from TransactionReportInstruction: <"Notional currency - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "34" field "Notional currency - Leg 1"
        provision "The currency code for the currency in which the Notional amountLeg 1 (item 26 above) is denominated."]
    filter IsAllowableActionForASIC
    then extract common.quantity.NotionalCurrencyLeg1
        as "1.34 Notional currency - Leg 1"

reporting rule NotionalCurrencyLeg2 from TransactionReportInstruction: <"Notional currency - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "35" field "Notional currency - Leg 2"
        provision "The currency code for the currency in which the Notional amountLeg 2 (item 27 above) is denominated."]
    filter IsAllowableActionForASIC
    then extract common.quantity.NotionalCurrencyLeg2
        as "1.35 Notional currency - Leg 2"

reporting rule QuantityUnitOfMeasureLeg1 from TransactionReportInstruction: <"Quantity unit of measure - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "36" field "Quantity unit of measure - Leg 1"
        provision "The unit of measure in which  the Total notional quantityLeg 1 (item 28 above) is expressed."]
    filter IsAllowableActionForASIC
    then extract TradeForEvent
    then extract
        if product.qualification.Qualify_Commodity_Swap_Basis(
                    ProductForTrade -> contractualProduct -> economicTerms
                ) = True
        then CommodityObservablePriceQuantity(
                    tradableProduct -> tradeLot only-element,
                    CommodityLeg1(ProductForTrade)
                ) -> quantity
        else if product.qualification.Qualify_Commodity_Swap_FixedFloat(
                    ProductForTrade -> contractualProduct -> economicTerms
                ) = True
        then CommodityFixedPriceQuantity(tradableProduct -> tradeLot only-element) -> quantity
        else if product.qualification.Qualify_Commodity_Swaption(
                        tradableProduct -> product -> contractualProduct -> economicTerms
                    ) = True
                and product.qualification.Qualify_Commodity_Swap_Basis(
                        UnderlierForProduct(ProductForTrade) -> contractualProduct -> economicTerms
                    )
        then CommodityObservablePriceQuantity(
                    tradableProduct -> tradeLot only-element,
                    CommodityLeg1(UnderlierForProduct(ProductForTrade))
                ) -> quantity
        else if product.qualification.Qualify_Commodity_Swaption(
                        tradableProduct -> product -> contractualProduct -> economicTerms
                    ) = True
                and product.qualification.Qualify_Commodity_Swap_FixedFloat(
                        UnderlierForProduct(ProductForTrade) -> contractualProduct -> economicTerms
                    )
        then CommodityFixedPriceQuantity(tradableProduct -> tradeLot only-element) -> quantity
        else if IsCommodityOption(tradableProduct -> product)
        then tradableProduct -> tradeLot -> priceQuantity -> quantity
        else if IsEquityOption(ProductForTrade)
                and tradableProduct -> tradeLot -> priceQuantity -> quantity -> unit -> financialUnit exists
        then tradableProduct -> tradeLot -> priceQuantity -> quantity
        else if IsEquityForward(ProductForTrade)
                and EconomicTermsForProduct(ProductForTrade) -> payout -> forwardPayout only-element -> priceQuantity -> quantitySchedule -> unit -> financialUnit exists
        then EconomicTermsForProduct(ProductForTrade) -> payout -> forwardPayout only-element -> priceQuantity -> quantitySchedule
        else if EconomicTermsForProduct(ProductForTrade) -> payout -> performancePayout only-element -> priceQuantity -> quantitySchedule -> unit -> financialUnit exists
        then EconomicTermsForProduct(ProductForTrade) -> payout -> performancePayout only-element -> priceQuantity -> quantitySchedule
        else if IsEquity(ProductForTrade)
                and tradableProduct -> tradeLot -> priceQuantity -> quantity -> unit -> financialUnit exists
        then (tradableProduct -> tradeLot only-element -> priceQuantity -> quantity
            then filter unit -> financialUnit exists
            then only-element)
    then extract cde.quantity.QuantityUnitOfMeasure
    then last // cardinality mismatch - see DRR ISSUE-624
    then if item = '----' then empty else item
        as "1.36 Quantity unit of measure - Leg 1"

reporting rule QuantityUnitOfMeasureLeg2 from TransactionReportInstruction: <"Quantity unit of measure - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "37" field "Quantity unit of measure - Leg 2"
        provision "The unit of measure in which  the Total notional quantityLeg 2 (item 29 above) is expressed."]
    filter IsAllowableActionForASIC
    then extract TradeForEvent
    then extract
        if IsCommoditySwap(tradableProduct -> product)
        then CommodityObservablePriceQuantity(
                    tradableProduct -> tradeLot only-element,
                    CommodityLeg2(ProductForTrade)
                ) -> quantity
        else if IsEquity(ProductForTrade)
                and InterestRateLeg2(ProductForTrade) -> priceQuantity -> quantitySchedule -> unit -> financialUnit exists
        then InterestRateLeg2(ProductForTrade) -> priceQuantity -> quantitySchedule
    then extract cde.quantity.QuantityUnitOfMeasure
    then last // cardinality mismatch - see DRR ISSUE-624
        as "1.37 Quantity unit of measure - Leg 2"

reporting rule CallCurrency from TransactionReportInstruction: <"Call currency">
    [regulatoryReference ASIC Trade table "1" dataElement "38" field "Call currency"
        provision "The currency code for the currency  in which the Call amount (item 32 above) is denominated."]
    filter IsAllowableActionForASIC
    then cde.quantity.CallCurrency
        as "1.38 Call currency"

reporting rule PutCurrency from TransactionReportInstruction: <"Put currency">
    [regulatoryReference ASIC Trade table "1" dataElement "39" field "Put currency"
        provision "The currency code for the currency in which the Put amount (item 33 above) is denominated."]
    filter IsAllowableActionForASIC
    then cde.quantity.PutCurrency
        as "1.39 Put currency"

reporting rule NotionalAmountScheduleLeg1 from TransactionReportInstruction: <"Notional Amount Schedule">
    [regulatoryReference ASIC Trade table "1" dataElement "40-42" field "Notional Amount Schedule"
        provision "Fields 40-42 are repeatable and shall be populated in the case of derivatives involving notional amount schedules"]
    filter IsAllowableActionForASIC
    then extract TradeForEvent
    then extract GetLeg1ResolvablePriceQuantity -> quantitySchedule
    then filter unit -> currency exists
    then extract datedValue
    then extract notionalAmountPeriod [
        // use value and dates from quantity period
        QuantityReportablePeriod {
            periodValue: notionalAmountPeriod -> value,
            periodEffectiveDate: notionalAmountPeriod -> date,
            periodEndDate: empty
        }
    ]
    then extract
        NotionalAmountScheduleLeg1Report {
            amount: NotionalAmountScheduleAmountLeg1,
            effectiveDate: NotionalAmountScheduleEffectiveDateLeg1
        // endDate: CDENotionalAmountScheduleEndDate - Unmodelled. Pls see the rationale below
        }

reporting rule NotionalAmountScheduleEffectiveDateLeg1 from QuantityReportablePeriod: <"Notional amount schedule effective date - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "40" field "Notional amount schedule effective date - Leg 1"
        provision "If applicable, each unadjusted date on which the associated Notional amount schedule amountLeg 1 becomes effective.
        This data element is only required for OTC Derivatives where Notional amount Leg 1 is not a constant value over the entire term of the OTC Derivative."]
    cde.quantity.NotionalAmountScheduleEffectiveDate
        as "1.40 Notional amount schedule effective date - Leg 1"

reporting rule NotionalAmountScheduleEndDateLeg1 from QuantityReportablePeriod: <"Notional amount schedule end date - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "41" field "Notional amount schedule end date - Leg 1"
        provision "If applicable, each unadjusted end date on which the associated Notional amount schedule amountLeg 1 ceases to be effective.
        This data element is only required for OTC Derivatives where Notional amount Leg 1 is not a constant value over the entire term of the OTC Derivative and a notional amount schedule is specified in the terms of the OTC Derivative.
        An end date is not required to be reported if it is the same date as the effective date of the next period of the schedule."]
    cde.quantity.NotionalAmountScheduleEndDate
        as "1.41 Notional amount schedule end date - Leg 1"

reporting rule NotionalAmountScheduleAmountLeg1 from QuantityReportablePeriod: <"Notional amount schedule amount - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "42" field "Notional amount schedule amount - Leg 1"
        provision "Each notional amount which becomes effective on the associated Notional amount schedule effective dateLeg 1.
        This data element is only required for OTC Derivatives where Notional amount Leg 1 is not a constant value over the entire term of the OTC Derivative."]
    cde.quantity.NotionalAmountScheduleAmount
        as "1.42 Notional amount schedule amount - Leg 1"

reporting rule NotionalAmountScheduleLeg2 from TransactionReportInstruction: <"Notional Amount Schedule">
    [regulatoryReference ASIC Trade table "1" dataElement "43-45" field "Notional Amount Schedule"
        provision "Fields 43-45 are repeatable and shall be populated in the case of derivatives involving notional amount schedules"]
    filter IsAllowableActionForASIC
    then extract TradeForEvent
    then extract GetLeg2ResolvablePriceQuantity -> quantitySchedule
    then filter unit -> currency exists
    then extract datedValue
    then extract notionalAmountPeriod [
        // use value and dates from quantity period
        QuantityReportablePeriod {
            periodValue: notionalAmountPeriod -> value,
            periodEffectiveDate: notionalAmountPeriod -> date,
            periodEndDate: empty
        }
    ]
    then extract
        NotionalAmountScheduleLeg2Report {
            amount: NotionalAmountScheduleAmountLeg2,
            effectiveDate: NotionalAmountScheduleEffectiveDateLeg2
        // endDate: CDENotionalAmountScheduleEndDate - Unmodelled. Pls see the rationale below
        }

reporting rule NotionalAmountScheduleEffectiveDateLeg2 from QuantityReportablePeriod: <"Notional amount schedule effective date - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "43" field "Notional amount schedule effective date - Leg 2"
        provision "If applicable, each unadjusted date on which the associated Notional amount schedule amountLeg 1 becomes effective.
    This data element is only required for OTC Derivatives where Notional amount Leg 1 is not a constant value over the entire term of the OTC Derivative."]
    cde.quantity.NotionalAmountScheduleEffectiveDate
        as "1.43 Notional amount schedule effective date - Leg 2"

reporting rule NotionalAmountScheduleEndDateLeg2 from QuantityReportablePeriod: <"Notional amount schedule end date - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "44" field "Notional amount schedule end date - Leg 2"
        provision "If applicable, each unadjusted end date on which the associated Notional amount schedule amountLeg 1 ceases to be effective.
        This data element is only required for OTC Derivatives where Notional amount Leg 1 is not a constant value over the entire term of the OTC Derivative and a notional amount schedule is specified in the terms of the OTC Derivative.
        An end date is not required to be reported if it is the same date as the effective date of the next period of the schedule."]
    cde.quantity.NotionalAmountScheduleEndDate
        as "1.44 Notional amount schedule end date - Leg 2"

reporting rule NotionalAmountScheduleAmountLeg2 from QuantityReportablePeriod: <"Notional amount schedule amount - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "45" field "Notional amount schedule amount - Leg 2"
        provision "Each notional amount which becomes effective on the associated Notional amount schedule effective dateLeg 1.
        This data element is only required for OTC Derivatives where Notional amount Leg 1 is not a constant value over the entire term of the OTC Derivative."]
    cde.quantity.NotionalAmountScheduleAmount
        as "1.45 Notional amount schedule amount - Leg 2"

reporting rule PriceNotation from TransactionReportInstruction: <"Price notation">
    [regulatoryReference ASIC Trade table "1" dataElement "46" field "Price notation"
        provision "An indicator of the type of units in which Price (item 47 below) is reported."]
    filter IsAllowableActionForASIC
    then extract common.price.PriceNotation
        as "1.46 Price notation"

reporting rule PriceFormatMonetary from TransactionReportInstruction: <"Price">
    [regulatoryReference ASIC Trade table "1" dataElement "47" field "Price"
        provision "The price taken from the trade confirmation of the Reportable Transaction, not including fees, taxes or commissions.
    This data element is required for OTC Derivatives:
        (a) that are contracts for difference (other than foreign exchange derivatives);
        (b) that are commodity derivatives or equity derivatives where:
            i) the UPI that is reported is for an instrument type that is a forward; or
            ii) the UPI that is reported is for an instrument type that is a swap and the OTC Derivative includes a term that is, or is equivalent to, a fixed price or initial price; or
        where a value is not reported for all of the following: Fixed rateLeg 1 (item 50 below), Fixed rateLeg 2 (item 51 below), SpreadLeg 1 (item 53 below), SpreadLeg 2 (item 55 below), Strike price (item 59 below), Option premium amount (item 61 below) and Exchange rate (item 64 below), and, for OTC Derivatives that are credit derivatives, a value of UFRO is not reported for Other payment type (item 75 below)."]
    filter IsAllowableActionForASIC
    then extract common.price.PriceFormatMonetary
        as "1.47 Price (Monetary)"

reporting rule PriceFormatDecimal from TransactionReportInstruction: <"Price">
    [regulatoryReference ASIC Trade table "1" dataElement "47" field "Price"
        provision "The price taken from the trade confirmation of the Reportable Transaction, not including fees, taxes or commissions.
    This data element is required for OTC Derivatives:
        (a) that are contracts for difference (other than foreign exchange derivatives);
        (b) that are commodity derivatives or equity derivatives where:
            i) the UPI that is reported is for an instrument type that is a forward; or
            ii) the UPI that is reported is for an instrument type that is a swap and the OTC Derivative includes a term that is, or is equivalent to, a fixed price or initial price; or
        where a value is not reported for all of the following: Fixed rateLeg 1 (item 50 below), Fixed rateLeg 2 (item 51 below), SpreadLeg 1 (item 53 below), SpreadLeg 2 (item 55 below), Strike price (item 59 below), Option premium amount (item 61 below) and Exchange rate (item 64 below), and, for OTC Derivatives that are credit derivatives, a value of UFRO is not reported for Other payment type (item 75 below)."]
    filter IsAllowableActionForASIC
    then extract common.price.PriceFormatDecimal
        as "1.47 Price (Decimal)"

reporting rule PriceCurrency from TransactionReportInstruction: <"Price currency">
    [regulatoryReference ASIC Trade table "1" dataElement "48" field "Price currency"
        provision "The currency code for the currency in which Price (item 47 above) is denominated."]
    filter IsAllowableActionForASIC
    then extract common.price.PriceCurrency
        as "1.48 Price currency"

reporting rule PriceUnitOfMeasure from TransactionReportInstruction: <"Price unit of measure">
    [regulatoryReference ASIC Trade table "1" dataElement "49" field "Price unit of measure"
        provision "The unit of measure in which Price (item 47 above) is reported."]
    filter IsAllowableActionForASIC
    then cde.price.PriceUnitOfMeasure
        as "1.49 Price unit of measure"

reporting rule FixedRateLeg1 from TransactionReportInstruction: <"Fixed rate - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "50" field "Fixed rate - Leg 1"
        provision "If applicable, the value of the per annum rate of the fixed rate of Leg 1."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Equity products are implicitly filtered out by calling the function InterestRateLeg1, so no explicit filtering is needed."]
    filter IsAllowableActionForASIC
    then extract common.price.FixedRateLeg1
        as "1.50 Fixed rate - Leg 1"

reporting rule FixedRateLeg2 from TransactionReportInstruction: <"Fixed rate - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "51" field "Fixed rate - Leg 2"
        provision "If applicable, the value of the per annum rate of the fixed rate of Leg 2, reported as a decimal."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Credit products are implicitly filtered out by calling the function InterestRateLeg2, so no explicit filtering is needed."]
    filter IsAllowableActionForASIC
    then extract common.price.FixedRateLeg2
        as "1.51 Fixed rate - Leg 2"

reporting rule SpreadLeg1Monetary from TransactionReportInstruction: <"Spread - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "53" field "Spread - Leg 1"
        provision "If applicable, the value of the spread that is added to the reference rate or reference price of the underlier of Leg 1."]
    filter IsAllowableActionForASIC
    then extract common.price.SpreadLeg1Monetary
        as "1.53 Spread - Leg 1 (Monetary)"

reporting rule SpreadLeg1Decimal from TransactionReportInstruction: <"Spread - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "53" field "Spread - Leg 1"
        provision "If applicable, the value of the spread that is added to the reference rate or reference price of the underlier of Leg 1."]
    filter IsAllowableActionForASIC
    then extract common.price.SpreadLeg1Decimal
        as "1.53 Spread - Leg 1 (Decimal)"

reporting rule SpreadLeg1Basis from TransactionReportInstruction: <"Spread - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "53" field "Spread - Leg 1"
        provision "If applicable, the value of the spread that is added to the reference rate or reference price of the underlier of Leg 1."]
    filter IsAllowableActionForASIC
    then extract common.price.SpreadLeg1Basis
        as "1.53 Spread - Leg 1 (Basis)"

reporting rule SpreadLeg1Notation from TransactionReportInstruction: <"Spread - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "53" field "Spread - Leg 1"
        provision "If applicable, the value of the spread that is added to the reference rate or reference price of the underlier of Leg 1."]
    filter IsAllowableActionForASIC
    then extract common.price.SpreadLeg1Notation
        as "1.53 Spread of Leg 1 Notation (Non Reportable)"

reporting rule SpreadLeg2Monetary from TransactionReportInstruction: <"Spread - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "55" field "Spread - Leg 2"
        provision "If applicable, the value of the spread that is added to the reference rate or reference price of the underlier of Leg 2."]
    filter IsAllowableActionForASIC
    then extract common.price.SpreadLeg2Monetary
        as "1.55 Spread - Leg 1 (Monetary)"

reporting rule SpreadLeg2Decimal from TransactionReportInstruction: <"Spread - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "55" field "Spread - Leg 2"
        provision "If applicable, the value of the spread that is added to the reference rate or reference price of the underlier of Leg 2."]
    filter IsAllowableActionForASIC
    then extract common.price.SpreadLeg2Decimal
        as "1.55 Spread - Leg 2 (Decimal)"

reporting rule SpreadLeg2Basis from TransactionReportInstruction: <"Spread - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "55" field "Spread - Leg 2"
        provision "If applicable, the value of the spread that is added to the reference rate or reference price of the underlier of Leg 2."]
    filter IsAllowableActionForASIC
    then extract common.price.SpreadLeg2Basis
        as "1.55 Spread - Leg 2 (Basis)"

reporting rule SpreadLeg2Notation from TransactionReportInstruction: <"Spread - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "53" field "Spread - Leg 2"
        provision "If applicable, the value of the spread that is added to the reference rate or reference price of the underlier of Leg 2."]
    filter IsAllowableActionForASIC
    then extract common.price.SpreadLeg2Notation
        as "1.55 Spread of Leg 21 Notation (Non Reportable)"

reporting rule SpreadCurrencyLeg1 from TransactionReportInstruction: <"Spread currency - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "56" field "Spread currency - Leg 1"
        provision "The currency code for the currency in which Spread - Leg 1 (item 53 above) is determined."]
    filter IsAllowableActionForASIC
    then extract common.price.SpreadCurrencyLeg1
        as "1.56 Spread currency - Leg 1"

reporting rule SpreadCurrencyLeg2 from TransactionReportInstruction: <"Spread currency - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "56" field "Spread currency - Leg 2"
        provision "The currency code for the currency in which Spread - Leg 2 (item 55 above) is determined."]
    filter IsAllowableActionForASIC
    then extract common.price.SpreadCurrencyLeg2
        as "1.57 Spread currency - Leg 2"

reporting rule StrikePriceNotation from TransactionReportInstruction: <"Strike price notation">
    [regulatoryReference ASIC Trade table "1" dataElement "58" field "Strike price notation"
        provision "An indicator of the type of units in which Strike price (item 59 below) is reported."]
    filter IsAllowableActionForASIC
    then extract common.price.StrikePriceNotation
        as "1.58 Strike price notation"

reporting rule StrikePriceMonetary from TransactionReportInstruction: <"Strike price">
    [regulatoryReference ASIC Trade table "1" dataElement "59" field "Strike price"
        provision "If the OTC Derivative the subject of the Reportable Transaction is an option, the value of the strike price of the option."]
    filter IsAllowableActionForASIC
    then extract common.price.StrikePriceMonetary
        as "1.59 Strike price (Monetary)"

reporting rule StrikePriceDecimal from TransactionReportInstruction: <"Strike price">
    [regulatoryReference ASIC Trade table "1" dataElement "59" field "Strike price"
        provision "If the OTC Derivative the subject of the Reportable Transaction is an option, the value of the strike price of the option."]
    filter IsAllowableActionForASIC
    then extract common.price.StrikePriceDecimal
        as "1.59 Strike price (Decimal)"

reporting rule StrikePriceCurrencyCurrencyPair from TransactionReportInstruction: <"Strike price currency/currency pair">
    [regulatoryReference ASIC Trade table "1" dataElement "60" field "Strike price currency/currency pair"
        provision "If Strike price (item 59 above) is denominated in terms of one currency, the currency code for the currency in which Strike price (item 59 above) is denominated.
        If Strike price (item 59 above) is denominated in terms of two currencies, the currency codes for the currencies in which Strike price (item 59 above) is expressed, in the order of the unit currency followed by 
        the quoted currency, where the quoted currency is the currency of the units in which Strike price (item 59 above) is expressed."]
    filter IsAllowableActionForASIC
    then common.price.StrikePriceCurrencyCurrencyPair
        as "1.60 Strike price currency/currency pair"

reporting rule SingleBarrierPriceNotation from TransactionReportInstruction: <"Lower or only barrier price notation">
    [regulatoryReference ASIC Trade table "1" dataElement "58a" field "Lower or only barrier price notation"
        provision "An indicator of the type of units in which Lower or only barrier price (item 59a below) is reported."]
    filter IsAllowableActionForASIC
    then common.price.SingleBarrierPriceNotation
        as "1.58a Single barrier price notation"

reporting rule LowerBarrierPriceNotation from TransactionReportInstruction: <"Lower or only barrier price notation">
    [regulatoryReference ASIC Trade table "1" dataElement "58a" field "Lower or only barrier price notation"
        provision "An indicator of the type of units in which Lower or only barrier price (item 59a below) is reported."]
    filter IsAllowableActionForASIC
    then common.price.LowerBarrierPriceNotation
        as "1.58a Lower barrier price notation"

reporting rule UpperBarrierPriceNotation from TransactionReportInstruction: <"Upper barrier price notation">
    [regulatoryReference ASIC Trade table "1" dataElement "58b" field "Upper barrier price notation"
        provision "An indicator of the type of units in which Upper barrier price (item 59b below) is reported."]
    filter IsAllowableActionForASIC
    then common.price.UpperBarrierPriceNotation
        as "1.58b Upper barrier price notation"

reporting rule SingleBarrierPriceMonetary from TransactionReportInstruction: <"Lower or only barrier price">
    [regulatoryReference ASIC Trade table "1" dataElement "59a" field "Lower or only barrier price"
        provision "If the OTC Derivative the subject of the Reportable Transaction is an option and the UPI that is reported for Unique product identifier (item 2 above) is a UPI for a barrier option, the value of the lower or only barrier price of the option."]
    filter IsAllowableActionForASIC
    then common.price.SingleBarrierPriceMonetary
        as "1.59a Single barrier price (monetary)"

reporting rule SingleBarrierPriceDecimal from TransactionReportInstruction: <"Lower or only barrier price">
    [regulatoryReference ASIC Trade table "1" dataElement "59a" field "Lower or only barrier price"
        provision "If the OTC Derivative the subject of the Reportable Transaction is an option and the UPI that is reported for Unique product identifier (item 2 above) is a UPI for a barrier option, the value of the lower or only barrier price of the option."]
    filter IsAllowableActionForASIC
    then common.price.SingleBarrierPriceDecimal
        as "1.59a Single barrier price (decimal)"

reporting rule LowerBarrierPriceMonetary from TransactionReportInstruction: <"Lower or only barrier price">
    [regulatoryReference ASIC Trade table "1" dataElement "59a" field "Lower or only barrier price"
        provision "If the OTC Derivative the subject of the Reportable Transaction is an option and the UPI that is reported for Unique product identifier (item 2 above) is a UPI for a barrier option, the value of the lower or only barrier price of the option."]
    filter IsAllowableActionForASIC
    then common.price.LowerBarrierPriceMonetary
        as "1.59a Lower barrier price (monetary)"

reporting rule LowerBarrierPriceDecimal from TransactionReportInstruction: <"Lower or only barrier price">
    [regulatoryReference ASIC Trade table "1" dataElement "59a" field "Lower or only barrier price"
        provision "If the OTC Derivative the subject of the Reportable Transaction is an option and the UPI that is reported for Unique product identifier (item 2 above) is a UPI for a barrier option, the value of the lower or only barrier price of the option."]
    filter IsAllowableActionForASIC
    then common.price.LowerBarrierPriceDecimal
        as "1.59a Lower barrier price (decimal)"

reporting rule UpperBarrierPriceMonetary from TransactionReportInstruction: <"Upper barrier price">
    [regulatoryReference ASIC Trade table "1" dataElement "59b" field "Upper barrier price"
        provision "If the OTC Derivative the subject of the Reportable Transaction is an option and the UPI that is reported for Unique product identifier (item 2 above) is a UPI for a barrier option, the value of the upper barrier price, if applicable, of the option."]
    filter IsAllowableActionForASIC
    then common.price.UpperBarrierPriceMonetary
        as "1.59b Upper barrier price (monetary)"

reporting rule UpperBarrierPriceDecimal from TransactionReportInstruction: <"Upper barrier price">
    [regulatoryReference ASIC Trade table "1" dataElement "59b" field "Upper barrier price"
        provision "If the OTC Derivative the subject of the Reportable Transaction is an option and the UPI that is reported for Unique product identifier (item 2 above) is a UPI for a barrier option, the value of the upper barrier price, if applicable, of the option."]
    filter IsAllowableActionForASIC
    then common.price.UpperBarrierPriceDecimal
        as "1.59b Upper barrier price (decimal)"

reporting rule SingleBarrierPriceCurrency from TransactionReportInstruction: <"Lower or Only barrier price currency">
    [regulatoryReference ASIC Trade dataElement "[Not in regulation]" field "Lower barrier price currency"
        provision "For equity options, commodity options, and similar products, currency in which the Single Barrier is denominated."]
    [regulatoryReference ISDA PeerReviewGroup date "20240410"
        provision "The modelling of this field is blocked until the CDM Trigger refactoring is available in DRR."]
    [regulatoryReference ISDA APACJFSAPeerReviewGroup date "20240828"
        provision "Modelling and extraction of barrier price currency fields to be revisited when DRR version is updated to use the newer CDM version 6 supporting currency at the trigger level."]
    filter IsAllowableActionForASIC
    then common.price.SingleBarrierPriceCurrency
        as "[Not in regulation] Single barrier price currency"

reporting rule LowerBarrierPriceCurrency from TransactionReportInstruction: <"Lower barrier price currency">
    [regulatoryReference ASIC Trade dataElement "[Not in regulation]" field "Lower barrier price currency"
        provision "For equity options, commodity options, and similar products, currency in which the Single Barrier is denominated."]
    [regulatoryReference ISDA PeerReviewGroup date "20240410"
        provision "The modelling of this field is blocked until the CDM Trigger refactoring is available in DRR."]
    [regulatoryReference ISDA APACJFSAPeerReviewGroup date "20240828"
        provision "Modelling and extraction of barrier price currency fields to be revisited when DRR version is updated to use the newer CDM version 6 supporting currency at the trigger level."]
    filter IsAllowableActionForASIC
    then common.price.LowerBarrierPriceCurrency
        as "[Not in regulation] Lower barrier price currency"

reporting rule UpperBarrierPriceCurrency from TransactionReportInstruction: <"Upper barrier price currency">
    [regulatoryReference ASIC Trade dataElement "[Not in regulation]" field "Upper barrier price currency"
        provision "For equity options, commodity options, and similar products, currency in which the Single Barrier is denominated."]
    [regulatoryReference ISDA PeerReviewGroup date "20240410"
        provision "The modelling of this field is blocked until the CDM Trigger refactoring is available in DRR."]
    [regulatoryReference ISDA APACJFSAPeerReviewGroup date "20240828"
        provision "Modelling and extraction of barrier price currency fields to be revisited when DRR version is updated to use the newer CDM version 6 supporting currency at the trigger level."]
    filter IsAllowableActionForASIC
    then common.price.UpperBarrierPriceCurrency
        as "[Not in regulation] Upper barrier price currency"

reporting rule OptionPremiumAmount from TransactionReportInstruction: <"Option premium amount">
    [regulatoryReference ASIC Trade table "1" dataElement "61" field "Option premium amount"
        provision "If the OTC Derivative the subject of the Reportable Transaction is an option, the monetary amount of the option premium paid, or due to be paid, by the option buyer."]
    filter IsAllowableActionForASIC
    then common.price.OptionPremiumAmount
        as "1.61 Option premium amount"

reporting rule OptionPremiumCurrency from TransactionReportInstruction: <"Option premium currency">
    [regulatoryReference ASIC Trade table "1" dataElement "62" field "Option premium currency"
        provision "The currency code for the currency in which the Option premium amount (item 61 above) is denominated."]
    filter IsAllowableActionForASIC
    then cde.price.OptionPremiumCurrency
        as "1.62 Option premium currency"

reporting rule OptionPremiumPaymentDate from TransactionReportInstruction: <"Option premium payment date">
    [regulatoryReference ASIC Trade table "1" dataElement "63" field "Option premium payment date"
        provision "The unadjusted date on which the Option premium amount (item 61 above) is due to be paid, or due to be first paid where the Option premium amount (item 61 above) is paid in instalments."]
    cde.price.OptionPremiumPaymentDate
        as "1.63 Option premium payment date"

reporting rule ExchangeRate from TransactionReportInstruction: <"Exchange rate">
    [regulatoryReference ASIC Trade table "1" dataElement "64" field "Exchange rate"
        provision "For foreign exchange derivatives that are not options:
        the exchange rate between Notional currencyLeg 1 (item 34 above) and Notional currencyLeg 2 (item 35 above) taken from the trade confirmation of the Reportable Transaction; or
        if no such exchange rate is specified in the trade confirmation of the Reportable Transaction, the exchange rate calculated by dividing the amount reported as Notional amountLeg 1 by Notional amountLeg 2."]
    filter IsAllowableActionForASIC
    then common.price.ExchangeRate
        as "1.64 Exchange rate"

reporting rule ExchangeRateBasis from TransactionReportInstruction: <"Exchange rate basis">
    [regulatoryReference ASIC Trade table "1" dataElement "65" field "Exchange rate basis"
        provision "The currency codes for the currencies in which exchange rate (item 64 above) is expressed, in the order of the unit currency followed by the quoted currency, where the quoted currency is the currency of the units in which exchange rate (item 64 above) is expressed."]
    filter IsAllowableActionForASIC
    then common.price.ExchangeRateBasis
        as "1.65 Exchange rate basis"

//here start the fixed-float fields
reporting rule PeriodicPaymentLeg1 from TransactionReportInstruction:
    filter IsAllowableActionForASIC
    then extract common.payment.PeriodicPaymentLeg1

reporting rule PeriodicPaymentLeg2 from TransactionReportInstruction:
    filter IsAllowableActionForASIC
    then extract common.payment.PeriodicPaymentLeg2

reporting rule DayCountConventionLeg1 from TransactionReportInstruction: <"Day count convention - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "66" field "Day count convention - Leg 1"
        provision "If applicable, an indicator of the day count for calculation of periodic payments of Leg 1 under the OTC Derivative the subject of the Reportable Transaction."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Equity products are implicitly filtered out by calling the function InterestRateLeg1, so no explicit filtering is needed."]
    empty
        as "1.66 Day count convention - Leg 1"

reporting rule DayCountConventionLeg2 from TransactionReportInstruction: <"Day count convention - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "67" field "Day count convention - Leg 2"
        provision "If applicable, an indicator of the day count for calculation of periodic payments of Leg 2 under the OTC Derivative the subject of the Reportable Transaction."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Credit products are implicitly filtered out by calling the function InterestRateLeg2, so no explicit filtering is needed."]
    empty
        as "1.67 Day count convention - Leg 2"

reporting rule PaymentFrequencyPeriodLeg1 from TransactionReportInstruction: <"Payment frequency period - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "68" field "Payment frequency period - Leg 1"
        provision "If applicable, the time unit associated with the frequency of payment(s) of Leg 1 of the OTC Derivative the subject of the Reportable Transaction."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Equity products are implicitly filtered out by calling the function InterestRateLeg1, so no explicit filtering is needed."]
    empty
        as "1.68 Payment frequency period - Leg 1"

reporting rule PaymentFrequencyPeriodLeg2 from TransactionReportInstruction: <"Payment frequency period - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "69" field "Payment frequency period - Leg 2"
        provision "If applicable, the time unit associated with the frequency of payment(s) of Leg 2 of the OTC Derivative the subject of the Reportable Transaction."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Credit products are implicitly filtered out by calling the function InterestRateLeg2, so no explicit filtering is needed."]
    empty
        as "1.69 Payment frequency period - Leg 2"

reporting rule PaymentFrequencyPeriodMultiplierLeg1 from TransactionReportInstruction: <"Payment frequency period multiplier - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "70" field "Payment frequency period multiplier - Leg 1"
        provision "The number of time units (as expressed by the Payment frequency
            period Leg 1 (item 68 above)) that determines the frequency of payments of Leg 1 of the OTC Derivative the subject of the Reportable Transaction."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Equity products are implicitly filtered out by calling the function InterestRateLeg1, so no explicit filtering is needed."]
    empty
        as "1.70 Payment frequency period multiplier - Leg 1"

reporting rule PaymentFrequencyPeriodMultiplierLeg2 from TransactionReportInstruction: <"Payment frequency period multiplier - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "71" field "Payment frequency period multiplier - Leg 2"
        provision "The number of time units (as expressed by the Payment frequency periodLeg 2 (item 69 above)) that determines the frequency of payments of Leg 2 of the OTC Derivative the subject of the Reportable Transaction."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Credit products are implicitly filtered out by calling the function InterestRateLeg2, so no explicit filtering is needed."]
    empty
        as "1.71 Payment frequency period multiplier - Leg 2"

//end of fixed-float fields
reporting rule SettlementCurrencyLeg1 from TransactionReportInstruction: <"Settlement currency - Leg 1">
    [regulatoryReference ASIC Trade table "1" dataElement "72" field "Settlement currency - Leg 1"
        provision "Other than for OTC Derivatives that are physically settled, the currency code of the currency for the cash settlement of Leg 1 of the OTC Derivative the subject of the Reportable Transaction."]
    filter IsAllowableActionForASIC
    then extract common.settlement.SettlementCurrencyLeg1
        as "1.72 Settlement currency - Leg 1"

reporting rule SettlementCurrencyLeg2 from TransactionReportInstruction: <"Settlement currency - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "73" field "Settlement currency - Leg 2"
        provision "Other than for OTC Derivatives that are physically settled, the currency code of the currency for the cash settlement of Leg 2 of the OTC Derivative the subject of the Reportable Transaction."]
    filter IsAllowableActionForASIC
    then extract common.settlement.SettlementCurrencyLeg2
        as "1.73 Settlement currency - Leg 2"

/* Other Payment Report */
reporting rule OtherPayment from TransactionReportInstruction:
    filter IsAllowableActionForASIC or IsActionTypeTERM
    then extract common.payment.OtherPayment

reporting rule OtherPaymentAmount from TransferState: <"Other payment amount">
    [regulatoryReference ASIC Trade table "1" dataElement "74" field "Other payment amount"
        provision "If applicable, the amounts of payment(s) paid or payable under the OTC Derivative the subject of the Reportable Transaction of the type reported as Other payment type (item 75 below)."]
    empty
        as "1.74 Other payment amount"

reporting rule OtherPaymentType from TransferState: <"Other payment type">
    [regulatoryReference ASIC Trade table "1" dataElement "75" field "Other payment type"
        provision "An indicator of whether the type of payment(s) reported as Other payment amount (item 74 above) is:
            an upfront payment that is not a payment of an option premium, notional amount or standard fees, taxes or commissions; or
            a payment made upon a partial or full termination of an OTC Derivative that is not a payment of an option premium, notional amount or standard fees, taxes or commissions"]
    empty
        as "1.75 Other payment type"

reporting rule OtherPaymentCurrency from TransferState: <"Other payment currency">
    [regulatoryReference ASIC Trade table "1" dataElement "76" field "Other payment currency"
        provision "The currency code(s) in which the Other payment amount (item 74 above) is denominated."]
    empty
        as "1.76 Other payment currency"

reporting rule OtherPaymentDate from TransferState: <"Other payment date">
    [regulatoryReference ASIC Trade table "1" dataElement "77" field "Other payment date"
        provision "The unadjusted date(s) on which the Other payment amount (item 74 above) is paid."]
    empty
        as "1.77 Other payment date"

reporting rule OtherPaymentPayer from TransferState: <"Other payment payer">
    [regulatoryReference ASIC Trade table "1" dataElement "78" field "Other payment payer"
        provision "The identifier of the payer of the Other payment amount (item 74 above), using:
            in the case of an entity who has an LEI, the LEI; or
            in the case of any other person, a Designated Business Identifier or Client Code."]
    empty // This rule is implemented within repeating rule OtherPayment.  This rule has been maintained so the regulatoryReference and "as" name can be specified.  DSL change request to allow easier modelling https://github.com/finos/rune-dsl/issues/852
        as "1.78 Other payment payer"

reporting rule OtherPaymentPayerFormat from TransferState: <"Other Payment Payer Format">
    empty
        as "1.78 Other payment payer format (non-reportable)"

reporting rule OtherPaymentReceiver from TransferState: <"Other payment receiver">
    [regulatoryReference ASIC Trade table "1" dataElement "79" field "Other payment receiver"
        provision "The identifier of the receiver of the Other payment amount (item 74 above), using:
            in the case of an entity who has an LEI, the LEI; or
            in the case of any other person, a Designated Business Identifier or Client Code."]
    empty // This rule is implemented within repeating rule OtherPayment.  This rule has been maintained so the regulatoryReference and "as" name can be specified.  DSL change request to allow easier modelling https://github.com/finos/rune-dsl/issues/852
        as "1.79 Other payment receiver"

reporting rule OtherPaymentReceiverFormat from TransferState: <"Other Payment Receiver Format">
    empty
        as "1.79 Other payment receiver format (non-reportable)"

/* Other Payment Report */
reporting rule CustomBasketCodeIdentifier from ReportableEvent: <"Custom Basket Code Identifier">
    [regulatoryReference ASIC Trade table "1" dataElement "80b" field "Custom basket code"
        provision "Where the UPI that is reported for Unique product identifier (item 2 above) is a UPI which identifies that the underlier a custom basket:
                   (a)   the unique code assigned by the structurer of the custom basket (the structurer) to link its constituents; or
                   (b)   if the structurer is not the Reporting Entity and the Reporting Entity does not receive the unique code from the structurer in sufficient time to enable the Reporting Entity to report that code in accordance with Rule 2.2.3:
                   (i)    a unique code assigned by the Reporting Entity; or
                   (ii)   if the Reporting Entity has not entered into, in the twelve months ending on the preceding quarter day, more than twenty OTC Derivatives that require the reporting of a Custom basket code, the value B."]
    filter IsAllowableActionForASIC
    then reportableInformation -> customBasket -> customBasketCode default cde.basket.CustomBasketCode
        as "1.80a Custom basket code"

reporting rule BasketStructurer from ReportableEvent: <"Basket Structurer">
    [regulatoryReference ASIC Trade table "1" dataElement "80b" field "Custom basket code"
        provision "Where the UPI that is reported for Unique product identifier (item 2 above) is a UPI which identifies that the underlier a custom basket:
                   (a)   the unique code assigned by the structurer of the custom basket (the structurer) to link its constituents; or
                   (b)   if the structurer is not the Reporting Entity and the Reporting Entity does not receive the unique code from the structurer in sufficient time to enable the Reporting Entity to report that code in accordance with Rule 2.2.3:
                   (i)    a unique code assigned by the Reporting Entity; or
                   (ii)   if the Reporting Entity has not entered into, in the twelve months ending on the preceding quarter day, more than twenty OTC Derivatives that require the reporting of a Custom basket code, the value B."]
    filter IsAllowableActionForASIC
    then extract reportableInformation -> customBasket -> basketStructurerLei
    then filter item -> identifierType = staticdata.party.PartyIdentifierTypeEnum -> LEI
    then extract item -> identifier
        as "1.80b Basket Structurer"

reporting rule BasketConstituents from TransactionReportInstruction:
    filter IsAllowableActionForASIC
    then extract common.basket.BasketConstituents

reporting rule BasketConstituentIdentifiers from staticdata.asset.common.ProductIdentifier: <"Basket constituent identifiers">
    [regulatoryReference ASIC Trade table "1" dataElement "81" field "Basket constituent identifiers"
        provision "Where an allowable value is reported for Custom basket code (item 80 above), the identifiers of the underliers that are the constituents of the custom basket."]
    empty
        as "1.81 Basket constituent identifiers"

reporting rule BasketConstituentIdentifierSource from staticdata.asset.common.ProductIdentifier: <"Basket constituent identifier source">
    [regulatoryReference ASIC Trade table "1" dataElement "82" field "Basket constituent identifier source"
        provision "The identifier(s) of the sources of the underliers identifiers that are reported as Basket constituent identifiers (item 81 above)."]
    empty
        as "1.82 Basket constituent identifier source"

reporting rule UnderlyingIdentification from TransactionReportInstruction: <"Underlying Identification">
    [regulatoryReference ASIC Trade table "1" dataElement "83" field "Underlying Identification"
        provision "Where the UPI that is reported for Unique product identifier (item 2 above) is a UPI which does not identify the specific underlier for the OTC Derivative and Custom basket code (item 80) does not apply, an identifier which identifies the specific underlier.
        Otherwise, the identifier of the specific underlier may be, but is not required to be, reported for this item."]
    filter IsAllowableActionForASIC
    then extract ProductForEvent
    then extract
        if (GetUnderlierProductIdentifier exists
                and GetUnderlierProductIdentifier -> source any = staticdata.asset.common.ProductIdTypeEnum -> ISIN)
        then GetUnderlierProductIdentifier first -> identifier
        else if EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId exists
        then EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId first
        else if EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId exists
        then EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId first
        else if IsFRA
        then EconomicTermsForProduct -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> rateOption -> indexReferenceInformation -> indexId first
        as "1.83 Underlying identification (DTCC)"

reporting rule UnderlyingIdentificationType from TransactionReportInstruction: <"Underlying Identification Type (DTCC)">
    [regulatoryReference ASIC Trade table "1" dataElement "84" field "Underlying Identification Type"
        provision "The identifier of the publisher of the rate, price or measure of the underlier reported as Underlier ID (Other) (item 83 above)."]
    [regulatoryReference ISDA PeerReviewGroup date "20230426"
        provision "Regarding test samples of Equity baskets with a single index or a single security with an ISIN, the view of Credit Suisse's representative is that those samples are valid because they illustrate an acceptable boundary condition."]
    filter IsAllowableActionForASIC
    then ProductForEvent
    then extract
        if (GetUnderlierProductIdentifier exists
                    and GetUnderlierProductIdentifier -> source any = staticdata.asset.common.ProductIdTypeEnum -> ISIN)
                or EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId exists
                or EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId exists
                or (IsFRA and EconomicTermsForProduct -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> rateOption -> indexReferenceInformation -> indexId exists)
        then "I"
        else if UnderlierForProduct -> basket exists
                or EconomicTermsForProduct -> payout -> performancePayout -> underlier -> basket exists
                or EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> basketReferenceInformation exists
                or EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> basketReferenceInformation exists
                    // Commodities: only for ETDs
                or (IsProductETD
                    and EconomicTermsForProduct -> payout -> commodityPayout -> underlier -> basket exists
                    and IsSingleCommodityPayoutProduct = False)
        then "B"
        else if (GetUnderlierProductIdentifier exists
                    and GetUnderlierProductIdentifier -> source all <> staticdata.asset.common.ProductIdTypeEnum -> ISIN)
                or (EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation exists
                    and EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId is absent
                    and EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexName exists)
                or (EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation exists
                    and EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId is absent
                    and EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexName exists)
                or (IsFRA
                    and EconomicTermsForProduct -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> rateOption -> indexReferenceInformation -> indexId is absent
                    and EconomicTermsForProduct -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> rateOption -> indexReferenceInformation -> indexName exists)
        then "O"
        as "1.84 Underlying Identification Type (DTCC)"

reporting rule UnderlyingIdOther from TransactionReportInstruction: <"Underlying ID (Other) (DTCC)">
    [regulatoryReference ASIC Trade table "1" dataElement "83" field "Underlier ID (Other)"
        provision "An identifier for the underlying thing to the contract, where applicable."]
    filter IsAllowableActionForASIC
    then extract ProductForEvent
    then extract
        if GetUnderlierProductIdentifier exists
                and GetUnderlierProductIdentifier -> source all <> staticdata.asset.common.ProductIdTypeEnum -> ISIN
        then GetUnderlierProductIdentifier first -> identifier
        else if (EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation exists
                and EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId is absent)
        then EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexName
        else if (EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation exists
                and EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId is absent)
        then EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexName
        else if (IsFRA and EconomicTermsForProduct -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> rateOption -> indexReferenceInformation -> indexId is absent)
        then EconomicTermsForProduct -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> rateOption -> indexReferenceInformation -> indexName only-element
        as "1.83a Underlying ID (Other) (DTCC)"

reporting rule UnderlyingIdOtherSource from TransactionReportInstruction: <"Underlying ID (Other) Source (DTCC)">
    [regulatoryReference ASIC Trade table "1" dataElement "84" field "Underlier ID (Other) source"
        provision "The identifier of the publisher of the rate, price or measure of the underlier reported as Underlier ID (Other) (item 83 above)."]
    filter IsAllowableActionForASIC
    then extract ProductForEvent
    then extract
        if GetUnderlierProductIdentifier exists
                and GetUnderlierProductIdentifier -> source all <> staticdata.asset.common.ProductIdTypeEnum -> ISIN
        then GetUnderlierProductIdentifier first -> source
        else if (EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation exists
                    and EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId is absent
                    and EconomicTermsForProduct -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexName exists)
                or (EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation exists
                    and EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexId is absent
                    and EconomicTermsForProduct(UnderlierForProduct) -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexName exists)
                or (IsFRA
                    and EconomicTermsForProduct -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> rateOption -> indexReferenceInformation -> indexId is absent
                    and EconomicTermsForProduct -> payout -> interestRatePayout -> rateSpecification -> floatingRate -> rateOption -> indexReferenceInformation -> indexName exists)
        then staticdata.asset.common.ProductIdTypeEnum -> Name
        as "1.84a Underlying ID (Other) Source (DTCC)"

reporting rule MaturityDateOfTheUnderlier from TransactionReportInstruction: <"Maturity date of the underlier">
    [regulatoryReference ASIC Trade table "1" dataElement "85" field "Maturity date of the underlier"
        provision "Where Contract type (item 4 above) is reported as SWPT, the unadjusted date of the expiration date of the swap that is the underlier to the option."]
    filter IsAllowableActionForASIC
    then extract ProductForEvent
    then extract
        if IsIRSwaption or IsCreditSwaption or IsCommoditySwaption
        then cde.datetime.ExpirationDate(UnderlierForProduct)
        as "1.85 Maturity date of the underlier"

reporting rule IndicatorOfTheFloatingRateLeg2 from TransactionReportInstruction: <"Indicator of the floating rate  Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "86" field "Indicator of the floating rate  Leg 2"
        provision "Other than for OTC Derivatives that are interest rate derivatives and if applicable, the indicator of the interest rate reference rate used to determine the interest payment amounts at predetermined intervals."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Credit products are implicitly filtered out by calling the function InterestRateLeg2, so no explicit filtering is needed."]
    filter IsAllowableActionForASIC
    then extract common.contract.FloatingRateIndicatorLeg2
        as "1.86 Indicator of the floating rate  Leg 2"

reporting rule FloatingRateReferencePeriodLeg2 from TransactionReportInstruction: <"Floating rate reference period - Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "87" field "Floating rate reference period - Leg 2"
        provision "Where an allowable value is reported for Identifier of the floating rateLeg 2 (item 86 above), the time unit associated with the term of item 86 that is the interest rate reference rate of Leg 2 of the OTC Derivative the subject of the Reportable Transaction."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Credit products are implicitly filtered out by calling the function InterestRateLeg2, so no explicit filtering is needed."]
    filter IsAllowableActionForASIC
    then common.contract.FloatingRateReferencePeriodLeg2
        as "1.87 Floating rate reference period - Leg 2"

reporting rule FloatingRateReferencePeriodMultiplierLeg2 from TransactionReportInstruction: <"Floating rate reference period muliplier- Leg 2">
    [regulatoryReference ASIC Trade table "1" dataElement "88" field "Floating rate reference period muliplier- Leg 2"
        provision "Where an allowable value is reported for Indicator of the floating rateLeg 2 (item 86 above), the number of time units (in the units reported for item 87 above) that determines the term of item 86 that is the interest rate reference rate of Leg 2 of the OTC Derivative the subject of the Reportable Transaction."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Credit products are implicitly filtered out by calling the function InterestRateLeg2, so no explicit filtering is needed."]
    filter IsAllowableActionForASIC
    then common.contract.FloatingRateReferencePeriodMultiplierLeg2
        as "1.88 Floating rate reference period muliplier- Leg 2"

reporting rule CDSIndexAttachmentPoint from TransactionReportInstruction: <"CDS index attachment point">
    [regulatoryReference ASIC Trade table "1" dataElement "89" field "CDS index attachment point"
        provision "If applicable, the defined lower point at which the level of losses:
            in the underlying portfolio of the CDS index;
            that is the underlier of the OTC Derivative the subject of the Reportable Transaction;
            reduces the notional of a tranche of the CDS index"]
    filter IsAllowableActionForASIC
    then cde.index.CDSIndexAttachmentPoint
        as "1.89 CDS index attachment point"

reporting rule CDSIndexDetachmentPoint from TransactionReportInstruction: <"CDS index detachment point">
    [regulatoryReference ASIC Trade table "1" dataElement "90" field "CDS index detachment point"
        provision "If applicable, the defined upper point at which the level of losses:
            in the underlying portfolio of the CDS index;
            that is the underlier of the OTC Derivative the subject of the Reportable Transaction;
            no longer reduces the notional of the tranche of the CDS index to which CDS index attachment point (item 89 above) applies."]
    filter IsAllowableActionForASIC
    then cde.index.CDSIndexDetachmentPoint
        as "1.90 CDS index detachment point"

reporting rule IndexFactor from TransactionReportInstruction: <"Index factor">
    [regulatoryReference ASIC Trade table "1" dataElement "91" field "Index factor"
        provision "If applicable, the index version factor or percentage of the CDS index that is the underlier of the OTC Derivative the subject of the Reportable Transaction that:
            multiplied by the Notional amountLeg 1 (item 26 above);
            equals the current notional amount covered by the seller of the OTC 
        Derivative the subject of the Reportable Transaction."]
    filter IsAllowableActionForASIC
    then extract TradeForEvent
    then extract
        if IsCreditDefaultSwapIndex
        then tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexFactor
        as "1.91 Index factor"

reporting rule PackageIdentifier from TransactionReportInstruction: <"Package identifier">
    [regulatoryReference ASIC Trade table "1" dataElement "92" field "Package identifier"
        provision "The identifier (determined by the Reporting Entity) in order to connect two or more Reportable Transactions that are reported separately.
        This data element is required for a Reportable Transaction which is one of two or more transactions that:
            are reported separately but entered into together as the product of a single economic arrangement;
            are reported separately because they are not able to be reported as a single report; or
            is the reporting of a foreign exchange swap derivative transaction entered into as a single economic arrangement but reported as two foreign exchange contracts with different expiration dates (item 18 above)"]
    filter IsAllowableActionForASIC
    then extract common.transaction.PackageIdentifier
        as "1.92 Package identifier"

reporting rule PackageTransactionPriceNotation from TransactionReportInstruction: <"Package transaction price notation">
    [regulatoryReference ASIC Trade table "1" dataElement "93" field "Package transaction price notation"
        provision "An indicator of the type of units in which Package transaction price (item 94 below) is reported"]
    filter IsAllowableActionForASIC
    then extract common.price.PackageTransactionPriceNotation
        as "1.93 Package transaction price notation"

reporting rule PackageTransactionPriceMonetary from TransactionReportInstruction: <"Package transaction price">
    [regulatoryReference ASIC Trade table "1" dataElement "94" field "Package transaction price"
        provision "Where an allowable value is reported for Package identifier (item 92 above) and a value is not reported for Package transaction spread (item 97 below), the traded price of the entire package in which the Reportable Transaction is a component."]
    filter IsAllowableActionForASIC
    then extract common.price.PackageTransactionPriceMonetary
        as "1.94 Package transaction price (Monetary)"

reporting rule PackageTransactionPriceDecimal from TransactionReportInstruction: <"Package transaction price">
    [regulatoryReference ASIC Trade table "1" dataElement "94" field "Package transaction price"
        provision "Where an allowable value is reported for Package identifier (item 92 above) and a value is not reported for Package transaction spread (item 97 below), the traded price of the entire package in which the Reportable Transaction is a component."]
    filter IsAllowableActionForASIC
    then extract common.price.PackageTransactionPriceDecimal
        as "1.94 Package transaction price (Decimal)"

reporting rule PackageTransactionPriceCurrency from TransactionReportInstruction: <"Package transaction price currency">
    [regulatoryReference ASIC Trade table "1" dataElement "95" field "Package transaction price currency"
        provision "The currency code of the currency in which Package transaction price (item 94 above) is denominated."]
    filter IsAllowableActionForASIC
    then extract common.price.PackageTransactionPriceCurrency
        as "1.95 Package transaction price currency"

reporting rule PackageTransactionSpreadNotation from TransactionReportInstruction: <"Package transaction spread notation">
    [regulatoryReference ASIC Trade table "1" dataElement "96" field "Package transaction spread notation"
        provision "An indicator of the type of units in which Package transaction spread (item 97 below) is reported."]
    filter IsAllowableActionForASIC
    then extract common.price.PackageTransactionSpreadNotation
        as "1.96 Package transaction spread notation"

reporting rule PackageTransactionSpreadMonetary from TransactionReportInstruction: <"Package transaction spread">
    [regulatoryReference ASIC Trade table "1" dataElement "97" field "Package transaction spread"
        provision "If a value is reported for Package identifier (item 92 above) and a value is not reported for Package transaction price (item 94 above),the traded price of the entire package in which the Reportable Transaction is a component, where the price is expressed as a spread or difference between two reference prices."]
    filter IsAllowableActionForASIC
    then extract common.price.PackageTransactionSpreadMonetary
        as "1.97 Package transaction spread (Monetary)"

reporting rule PackageTransactionSpreadDecimal from TransactionReportInstruction: <"Package transaction spread">
    [regulatoryReference ASIC Trade table "1" dataElement "97" field "Package transaction spread"
        provision "If a value is reported for Package identifier (item 92 above) and a value is not reported for Package transaction price (item 94 above),the traded price of the entire package in which the Reportable Transaction is a component, where the price is expressed as a spread or difference between two reference prices."]
    filter IsAllowableActionForASIC
    then extract common.price.PackageTransactionSpreadDecimal
        as "1.97 Package transaction spread (Decimal)"

reporting rule PackageTransactionSpreadBasis from TransactionReportInstruction: <"Package transaction spread">
    [regulatoryReference ASIC Trade table "1" dataElement "97" field "Package transaction spread"
        provision "If a value is reported for Package identifier (item 92 above) and a value is not reported for Package transaction price (item 94 above),the traded price of the entire package in which the Reportable Transaction is a component, where the price is expressed as a spread or difference between two reference prices."]
    filter IsAllowableActionForASIC
    then extract common.price.PackageTransactionSpreadBasis
        as "1.97 Package transaction spread (Basis)"

reporting rule PackageTransactionSpreadCurrency from TransactionReportInstruction: <"Package transaction spread currency">
    [regulatoryReference ASIC Trade table "1" dataElement "98" field "Package transaction spread currency"
        provision "The currency code of the currency in which Package transaction spread (item 97 above) is denominated"]
    filter IsAllowableActionForASIC
    then extract common.price.PackageTransactionSpreadCurrency
        as "1.98 Package transaction spread currency"

reporting rule PriorUTI from TransactionReportInstruction: <"Prior UTI">
    [regulatoryReference ASIC Trade table "1" dataElement "99" field "Prior UTI"
        provision "For a Reportable Transaction that arises due to a lifecycle event on a single predecessor OTC Derivative, and
        (a)Reporting Entity (item 5 above) was reported as Reporting Entity for that predecessor OTC Derivative;
        (b) Counterparty 1 (item 6 above) was reported as Counterparty 1 for that predecessor OTC Derivative; or
        (c) Event type (item 102 below) is reported as ALOC, the transaction identifier of that single predecessor OTC Derivative.
    For a report made under Rule 2.2.2 of the kind referred to in paragraph 2.2.2(2)(c), the first UTI reported for the OTC Derivative."]
    filter IsAllowableActionForASIC
    then common.transaction.GetPriorTransactionIdentifier(item, ASIC)
    then filter IsMax32UpperCaseAlphanumericText = True
        as "1.99 Prior UTI"

reporting rule PriorUTIProprietary from TransactionReportInstruction: <"Prior UTI">
    [regulatoryReference ASIC Trade table "1" dataElement "99" field "Prior UTI"
        provision "For a Reportable Transaction that arises due to a lifecycle event on a single predecessor OTC Derivative, and
            (a)Reporting Entity (item 5 above) was reported as Reporting Entity for that predecessor OTC Derivative;
            (b) Counterparty 1 (item 6 above) was reported as Counterparty 1 for that predecessor OTC Derivative; or
            (c) Event type (item 102 below) is reported as ALOC, the transaction identifier of that single predecessor OTC Derivative.
        For a report made under Rule 2.2.2 of the kind referred to in paragraph 2.2.2(2)(c), the first UTI reported for the OTC Derivative."]
    filter IsAllowableActionForASIC
    then common.transaction.GetPriorTransactionIdentifier(item, ASIC)
    then filter IsMax32UpperCaseAlphanumericText = False
        as "1.99 Prior UTI (Proprietary)"

reporting rule EventIdentifier from TransactionReportInstruction: <"Event identifier">
    [regulatoryReference ASIC Trade table "1" dataElement "100" field "Event identifier"
        provision "The unique identifier to connect Reportable Transactions resulting from an event (for example, a compression or credit event)."]
    filter IsAllowableActionForASIC or IsActionTypeTERM
    then extract cde.event.EventIdentifier
        as "1.100 Event identifier"

reporting rule ActionType from TransactionReportInstruction: <"Action type">
    [regulatoryReference ASIC Trade table "1" dataElement "101" field "Action type"
        provision "An indicator of whether the report being made relates to:
            a Reportable Transaction that is an entry into an OTC Derivative;
            a Reportable Transaction that is a modification of an OTC Derivative; or
            a Reportable Transaction that is a full termination of an OTC Derivative.
        For a report of a change under subrule 2.2.2(1), a notation to indicate whether the change relates to:
            a correction to information in a report previously made;
            a cancellation of a report previously made in error;
            the reinstatement of a Reportable Transaction that was cancelled, terminated, matured or expired in error; or
            the transfer of a Reportable Transaction from one Derivative Trade Repository to another Derivative Trade Repository."]
    extract cde.event.ActionType
        as "1.101 Action type"

reporting rule EventType from TransactionReportInstruction: <"Event type ">
    [regulatoryReference ASIC Trade table "1" dataElement "102" field "Event type "
        provision "An indicator of whether the kind of event associated with the value reported for Action type relates to:
            the entry into an OTC Derivative or renegotiation of the terms of a previously reported OTC Derivative that does not result in change of a counterparty;
            an assignment of an OTC Derivative;
            a compression or post-trade risk reduction exercise ;
            the full or partial termination of an OTC Derivative;
            the clearing of an OTC Derivative;
            the exercise  of an option;
            the allocation of an OTC Derivative by apportioning its notional amount or total notional quantity to new OTC Derivatives with different counterparties;
            an event that results in the modification or termination of a previously reported OTC Derivative that is a credit derivative;
            the transfer of a Reportable Transaction from one Derivative Trade Repository to another Derivative Trade Repository;
            a corporate action on an equity underlier that impacts the previously reported OTC Derivatives over that equity underlier; 
            the inclusion of an OTC Derivative into a position, where an existing OTC Derivative is terminated and either a new position is created or the Notional amount or Total notional quantity of an existing OTC Derivative is modified; or
            the re-reporting of a previously reported Reportable Transaction where the reported information about the OTC Derivative does not include all of the relevant Derivative Transaction Information set out in column 3 of this table or the reported information is not in accordance with the format and allowed values set out in columns 4-5 of this table."]
    cde.event.EventType
        as "1.102 Event type"

reporting rule ReportSubmittingEntity from TransactionReportInstruction: <"Report submitting entity">
    [regulatoryReference ASIC Trade table "1" dataElement "104" field "Report submitting entity"
        provision "The LEI of the person submitting the report of a Reportable Transaction."]
    extract common.party.ReportSubmittingEntity
        as "1.104 Report submitting entity"

reporting rule NewDerivativeTradeRepository from TransactionReportInstruction: <"New Derivative Trade Repository">
    [regulatoryReference ASIC Trade table "1" dataElement "105" field "New Derivative Trade Repository"
        provision "Where a value of PRTO is reported for Action type (item 101 above),
    the current LEI of the Derivative Trade Repository to which the Reportable Transaction is being transferred."]
    extract
        ExtractPartyFromRelatedPartyByRole(
                reportableInformation -> partyInformation -> relatedParty,
                staticdata.party.PartyRoleEnum -> TradeRepository
            )
    then extract PartyLei(partyId)
        as "1.105 New Derivative Trade Repository"

reporting rule SmallScaleBuySideEntityIndicator from TransactionReportInstruction: <"Small-scale buy-side Entity indicator">
    [regulatoryReference ASIC Trade table "2" dataElement "4" field "Small-scale buy-side Entity indicator"
        provision "If applicable, an indicator that the Reporting Entity is making the report as a Small-scale Buy-side Entity."]
    [regulatoryReference ISDA PeerReviewGroup date "20240207"
        provision "in FpML a small bank indicator exists in clearing exceptions (http://www.fpml.org/coding-scheme/cftc-clearing-exception-and-exemptions-1-1.xml), also http://www.fpml.org/coding-scheme/party-role-3-9.xml when value is ExecutionAgent is defined as 'The (generally buy-side) organization'  we could use this data as a base to define the indicator in CDM"]
    filter IsAllowableActionForASIC
    then extract reportInstruction [
        reportableInformation -> partyInformation
            then filter partyReference = reportInstruction -> reportingSide -> reportingParty
            then extract regimeInformation -> asicPartyInformation
            then flatten
            then only-element
            then extract
                if smallScaleBuySideIndicator exists and smallScaleBuySideIndicator = True
                then "SSBS"
    ]
        as "2.4 Small-scale buy-side Entity indicator"

reporting rule ValuationTimestamp from TransactionReportInstruction: <"Valuation Timestamp">
    [regulatoryReference ASIC Trade table "2" dataElement "6" field "Valuation timestamp"
        provision "The date, or date and time, that the amount reported as Valuation amount (item 7 below) was determined."]
    filter
        (IsActionTypeNEWT or IsActionTypeVALU or IsActionTypeCORR or IsActionTypeREVI or IsActionTypePOSC)
    then cde.valuation.ValuationTimestamp
        as "2.6 Valuation Timestamp"

reporting rule ValuationAmount from TransactionReportInstruction: <"Valuation amount">
    [regulatoryReference ASIC Trade table "2" dataElement "7" field "Valuation amount"
        provision "The unadjusted value of the OTC Derivative the subject of the Reportable Transaction, calculated as the amount that would be paid to terminate the OTC Derivative in an orderly market on the valuation date.
            A value greater than zero is reported if the amount would be paid by Counterparty 2 to Counterparty 1.
            A value less than zero is reported if the amount would be paid by Counterparty 1 to Counterparty 2.
            A value of zero is reported if no amount would be paid by either Counterparty 1 or Counterparty 2."]
    filter
        (IsActionTypeNEWT or IsActionTypeVALU or IsActionTypeCORR or IsActionTypeREVI or IsActionTypePOSC)
    then cde.valuation.ValuationAmount
        as "2.7 Valuation amount"

reporting rule ValuationCurrency from TransactionReportInstruction: <"Valuation currency">
    [regulatoryReference ASIC Trade table "2" dataElement "8" field "Valuation currency"
        provision "The currency code for the currency in which the Valuation amount (item 7 above) is denominated."]
    filter
        (IsActionTypeNEWT or IsActionTypeVALU or IsActionTypeCORR or IsActionTypeREVI or IsActionTypePOSC)
    then cde.valuation.ValuationCurrency
        as "2.8 Valuation currency"

reporting rule ValuationMethod from TransactionReportInstruction: <"Valuation method">
    [regulatoryReference ASIC Trade table "2" dataElement "9" field "Valuation method"
        provision "An Indicator of the source and method used to determine the amount reported as Valuation amount (item 7 above). "]
    filter
        (IsActionTypeNEWT or IsActionTypeVALU or IsActionTypeCORR or IsActionTypeREVI or IsActionTypePOSC)
    then extract cde.valuation.ValuationMethod(GetValuation)
        as "2.9 Valuation method"

reporting rule Delta from TransactionReportInstruction: <"Delta">
    [regulatoryReference ASIC Trade table "2" dataElement "10" field "Delta"
        provision "For OTC Derivatives that are options, the ratio of the change in the price of the OTC Derivative to the change in the price of the underlier that is the underlier applicable to the ne1t time that the option may be exercised."]
    filter
        (IsActionTypeNEWT or IsActionTypeVALU or IsActionTypeCORR or IsActionTypeREVI or IsActionTypePOSC)
    then extract cde.quantity.Delta
        as "2.10 Delta"

reporting rule NextFloatingReferenceResetDateLeg1 from TransactionReportInstruction: <"Next floating reference reset date - Leg 1">
    [regulatoryReference ASIC Trade table "2" dataElement "11" field "Next floating reference reset date - Leg 1"
        provision "If applicable and other than for floating reference rates that reset on a daily frequency, the unadjusted nearest date in the future on which the interest rate reference rate of Leg 1 will be reset."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Equity products are implicitly filtered out by calling the function InterestRateLeg1, so no explicit filtering is needed."]
    filter IsAllowableActionForASIC
    then extract GetNextFloatingReferenceResetDate(item, InterestRateLeg1(ProductForEvent))
        as "2.11 Next floating reference reset date - Leg 1"

reporting rule NextFloatingReferenceResetDateLeg2 from TransactionReportInstruction: <"Next floating reference reset date - Leg 2">
    [regulatoryReference ASIC Trade table "2" dataElement "12" field "Next floating reference reset date - Leg 2"
        provision "If applicable and other than for floating reference rates that reset on a daily frequency, the unadjusted nearest date in the future on which the interest rate reference rate of Leg 2 will be reset."]
    [regulatoryReference ISDA TechnicalExecutionGroup date "20240418"
        provision "Credit products are implicitly filtered out by calling the function InterestRateLeg2, so no explicit filtering is needed."]
    filter IsAllowableActionForASIC
    then extract GetNextFloatingReferenceResetDate(item, InterestRateLeg2(ProductForEvent))
        as "2.12 Next floating reference reset date - Leg 2"

reporting rule TechnicalRecordId from TransactionReportInstruction: <"Technical Record Id (ISO)">
    [regulatoryReference ASIC Trade dataElement "[Internal]" field "Technical Record Id (ISO)"
        provision "Unique technical identification of the original data for which the status is provided for the BDR."]
    extract reportableInformation -> partyInformation -> regimeInformation
    then filter
        reportingRole = ReportingRoleEnum -> ReportingParty
            and regimeName = RegimeNameEnum -> ASIC
    then extract technicalRecordId
    then distinct only-element
        as "[Internal] Technical Record Id (ISO)"

reporting rule CollateralPortfolioIndicator from TransactionReportInstruction: <"Collateral Portfolio Indicator">
    [regulatoryReference ASIC Trade table "3" dataElement "8" field "Collateral Portfolio Indicator"
        provision "If the OTC Derivative the subject of the Reportable Transaction is collateralised, the True or False indicator specified in the applicable paragraph of column 5 of this item."]
    filter IsAllowableActionForASIC
    then extract cde.collateral.CollateralPortfolioIndicator
        as "3.8 Collateral Portfolio Indicator"

reporting rule CollateralPortfolioCodeInitialMargin from TransactionReportInstruction: <"Collateral portfolio code (initial margin)">
    [regulatoryReference ASIC Trade table "3" dataElement "10" field "Collateral portfolio code (initial margin)"
        provision "If the OTC Derivative the subject of the Reportable Transaction is collateralised and collateral is reported on a Portfolio Basis, a unique code, determined by the Reporting Entity to identify the collateral portfolio of amounts of initial margin, unless the collateralisation does not involve amounts of initial margin. This data element is not reported if there is only one collateral portfolio of amounts of margin that does not distinguish between margin that is initial margin and margin that is variation margin, and the collateral portfolio code of the collateral portfolio is reported as Collateral portfolio code (variation margin) (item 11 below)."]
    filter IsAllowableActionForASIC
    then extract TradeForEvent -> collateral -> collateralPortfolio
    then filter
        legalAgreement -> legalAgreementIdentification -> agreementName -> creditSupportAgreementMarginType = product.collateral.CollateralMarginTypeEnum -> InitialMargin
    then only-element
    then portfolioIdentifier -> assignedIdentifier -> identifier last
        as "3.10 Collateral portfolio code (initial margin)"

reporting rule CollateralPortfolioCodeVariationMargin from TransactionReportInstruction: <"Collateral portfolio code (variation margin)">
    [regulatoryReference ASIC Trade table "3" dataElement "11" field "Collateral portfolio code (variation margin)"
        provision "If the OTC Derivative the subject of the Reportable Transaction is collateralised and collateral is reported on a Portfolio Basis, a unique code, determined by the Reporting Entity to identify the collateral portfolio of amounts of variation margin, unless the collateralisation does not involve amounts of variation margin. If there is only one collateral portfolio of amounts of margin that does not distinguish between margin that is initial margin and margin that is variation margin, the unique code is of that portfolio. 
            This data element is reported as the same code as Collateral portfolio code (initial margin) (item 10 above) if there is only one collateral portfolio and the amounts of initial and variation margin are distinguished within that portfolio."]
    filter IsAllowableActionForASIC
    then extract
        if TradeForEvent -> collateral -> collateralPortfolio -> portfolioIdentifier exists
        then (TradeForEvent -> collateral -> collateralPortfolio
            then filter
                legalAgreement -> legalAgreementIdentification -> agreementName -> creditSupportAgreementMarginType = product.collateral.CollateralMarginTypeEnum -> VariationMargin
            then only-element
            then portfolioIdentifier -> assignedIdentifier -> identifier last)
        else if TradeForEvent -> collateral -> portfolioIdentifier exists
        then cde.collateral.CollateralPortfolioCode
        as "3.11 Collateral portfolio code (variation margin)"

reporting rule ReportingTimestamp from TransactionReportInstruction: <"Reporting timestamp">
    [regulatoryReference ASIC Trade dataElement "[Not in regulation]" field "Reporting timestamp"
        provision "The date and time of the submission of a  report of a Reportable Transaction to the Derivative Trade Repository."]
    cde.datetime.ReportingTimestamp
        as "[Not in regulation] Reporting timestamp"

reporting rule ExecutionAgentCounterparty2DTCC from TransactionReportInstruction: <"Execution Agent of Counterparty 2">
    [regulatoryReference ASIC Trade dataElement "[Not in Regulation]" field "Execution Agent of Counterparty 2"
        provision "The Execution agent of Counterparty 2"]
    filter
        IsAllowableActionForASIC or IsActionTypeTERM or IsActionTypeEROR or IsActionTypePRTO or IsActionTypeVALU
    then common.party.ExecutionAgentCounterparty2DTCC
        as "[Not in regulation] Execution Agent of Counterparty 2"

func IsAllowableActionForASIC:
    inputs:
        reportableEvent ReportableEvent (1..1)
    output:
        isAllowableAction boolean (1..1)

    set isAllowableAction:
        IsActionTypeNEWT(reportableEvent)
            or IsActionTypeMODI(reportableEvent)
            or IsActionTypePositionMODI(reportableEvent)
            or IsActionTypeCORR(reportableEvent)
            or IsActionTypeREVI(reportableEvent)
            or IsActionTypePOSC(reportableEvent)
