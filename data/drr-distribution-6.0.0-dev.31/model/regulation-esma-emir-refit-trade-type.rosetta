namespace drr.regulation.esma.emir.refit.trade
version "6.0.0-dev.31"

import cdm.base.*
import cdm.base.staticdata.asset.common.*

import drr.enrichment.common.*
import drr.enrichment.lei.*
import drr.regulation.common.*
import drr.regulation.common.util.*
import drr.regulation.esma.*
import drr.regulation.esma.emir.*
import drr.regulation.esma.emir.refit.*
import drr.standards.iso.*
import drr.enrichment.eic.*

type ESMAEMIRTransactionReport:
    [rootType]
    reportingTimestamp zonedDateTime (1..1)
        [ruleReference ReportingTimestamp]
    reportSubmittingEntityID string (1..1)
        [ruleReference ReportSubmittingEntityID]
    entityResponsibleForReporting LEIIdentifier (0..1)
        [ruleReference EntityResponsibleForReporting]
    counterparty1 LEIIdentifier (1..1)
        [ruleReference Counterparty1]
    natureOfCounterparty1 string (1..1)
        [ruleReference NatureOfCounterparty1]
    corporateSectorOfTheCounterparty1 string (0..*)
        [ruleReference CorporateSectorOfTheCounterparty1]
    clearingThresholdOfCounterparty1 boolean (0..1)
        [ruleReference ClearingThresholdOfCounterparty1]
    counterparty2 Min20Max72AlphaNumericText (0..1)
        [ruleReference Counterparty2]
    countryOfTheCounterParty2 ISOCountryCodeEnum (0..1)
        [ruleReference CountryOfTheCounterParty2]
    natureOfCounterparty2 string (0..1)
        [ruleReference NatureOfTheCounterparty2]
    corporateSectorOfTheCounterparty2 string (0..*)
        [ruleReference CorporateSectorOfTheCounterparty2]
    counterparty2IdentifierType boolean (1..1)
        [ruleReference Counterparty2IdentifierType]
    clearingMember LEIIdentifier (0..1)
        [ruleReference ClearingMember]
    clearingThresholdOfCounterparty2 boolean (0..1)
        [ruleReference ClearingThresholdOfCounterparty2]
    reportingObligationOfTheCounterparty2 boolean (1..1)
        [ruleReference ReportingObligationOfTheCounterparty2]
    brokerID LEIIdentifier (0..1)
        [ruleReference BrokerID]
    direction Direction1Enum (0..1)
	    [ruleReference Direction]
    directionOfLeg1 Direction2Enum (0..1)
	    [ruleReference DirectionOfLeg1]
    directionOfLeg2 Direction2Enum (0..1)
        [ruleReference DirectionOfLeg2]
    directlyLinkedToCommercialActivityOrTreasuryFinancing boolean (0..1)
        [ruleReference DirectlyLinkedToCommercialActivityOrTreasuryFinancing]
    uti UTIIdentifier (0..1)
        [ruleReference Uti]
    utiProprietary UTIIdentifierLegacy (0..1)
        [ruleReference UtiProprietary]
    reportTrackingNumber Max52AlphaNumericText (0..1)
        [ruleReference ReportTrackingNumber]
    priorUti UTIIdentifier (0..1)
        [ruleReference PriorUti]
    priorUtiProprietary UTIIdentifierLegacy (0..1)
        [ruleReference PriorUtiProprietary]
    ptrrId Max52UpperAlphaNumericText (0..1)
        [ruleReference PTRRID]
    packageIdentifier Max35AlphaNumericText (0..1)
        [ruleReference PackageIdentifier]
    subsequentPositionUti UTIIdentifierLegacy (0..1)
        [ruleReference SubsequentPositionUti]
    isin ISINOct2015Identifier (0..1)
        [ruleReference ISIN]
    upi string (0..1)
        [ruleReference UPI]
    productClassification CFIOct2015Identifier (1..1)
        [ruleReference ProductClassification]
    contractType string (1..1)
        [ruleReference ContractType]
    assetClass Max4Text (1..1)
        [ruleReference AssetClass]
    isCrypto boolean (1..1)
        [ruleReference DerivativeBasedOnCryptoAssets]
    underlyingIdentificationType Max1Text (0..1)
        [ruleReference UnderlyingIdentificationType]
    underlyingIdentification ISINOct2015Identifier (0..1)
        [ruleReference UnderlyingIdentification]
    nameOfTheUnderlyingIndex Max50AlphaNumericTextWithSplChars (0..*)
        [ruleReference NameOfTheUnderlyingIndex]
    indicatorOfTheUnderlyingIndex Max4Text (0..*)
        [ruleReference IndicatorOfTheUnderlyingIndex]
    identifierOfBasketConstituents ISINOct2015Identifier (0..*)
        [ruleReference IdentifierOfBasketConstituents]
    customBasketCode Min20Max72AlphaNumericText (0..1)
        [ruleReference CustomBasketCode]
    settlementCurrency1 ISOCurrencyCodeEnum (0..1)
        [ruleReference SettlementCurrency1]
    settlementCurrency2 ISOCurrencyCodeEnum (0..1)
        [ruleReference SettlementCurrency2]
    valuationAmount ShortFraction5DecimalNumber (0..1)
        [ruleReference ValuationAmount]
    valuationCurrency ISOCurrencyCodeEnum (0..1)
        [ruleReference ValuationCurrency]
    valuationMethod ValuationType1Code (0..1)
        [ruleReference ValuationMethod]
    delta ShortFraction5DecimalNumber (0..1)
        [ruleReference Delta]
    valuationTimestamp zonedDateTime (0..1)
        [ruleReference ValuationTimestamp]
    confirmationTimestamp zonedDateTime (0..1)
        [ruleReference ConfirmationTimestamp]
    confirmed string (0..1)
        [ruleReference Confirmed]
    clearingObligation string (0..1)
        [ruleReference ClearingObligation]
    cleared Max1Text (1..1)
        [ruleReference Cleared]
    clearingTimestamp zonedDateTime (0..1)
        [ruleReference ClearingTimestamp]
    centralCounterparty LEIIdentifier (0..1)
        [ruleReference CentralCounterparty]
    masterAgreementType string (1..1)
        [ruleReference MasterAgreementType]
    otherMasterAgreementType Max50AlphaNumericText (0..1)
        [ruleReference OtherMasterAgreementType]
    masterAgreementVersion int (0..1)
        [ruleReference MasterAgreementVersion]
    intragroup boolean (0..1)
        [ruleReference Intragroup]
    ptrr boolean (0..1)
        [ruleReference PTRR]
    typeOfPTRRTechnique string (0..1)
        [ruleReference TypeOfPTRRTechnique]
    ptrrServiceProvider LEIIdentifier (0..1)
        [ruleReference PTRRServiceProvider]
    venueOfExecution string (0..1)
        [ruleReference VenueOfExecution]
    executionTimestamp zonedDateTime (1..1)
        [ruleReference ExecutionTimestamp]
    effectiveDate ISODate (1..1)
        [ruleReference EffectiveDate]
    expirationDate ISODate (0..1)
        [ruleReference ExpirationDate]
    earlyTerminationDate date (0..1)
        [ruleReference EarlyTerminationDate]
    finalContractualSettlementDate date (0..1)
        [ruleReference FinalContractualSettlementDate]
    deliveryType string (1..1)
        [ruleReference DeliveryType]
    price PriceAndNotation (0..1)
    priceSchedule PriceScheduleReport (0..*)
        [ruleReference ContractPriceSchedule]
    packageTransactionPrice PackageTransactionPrice (0..1)
    notionalLeg1 ShortFraction5DecimalNumber (0..1)
        [ruleReference NotionalAmountOfLeg1]
    notionalCurrency1 ISOCurrencyCodeEnum (1..1)
        [ruleReference NotionalCurrency1]
    notionalAmountScheduleLeg1 NotionalAmountScheduleLeg1Report (0..*)
        [ruleReference NotionalAmountScheduleLeg1]
    totalNotionalQuantityLeg1 ShortFraction5DecimalNumber (0..1)
        [ruleReference TotalNotionalQuantityOfLeg1]
    notionalQuantityScheduleLeg1 NotionalQuantityScheduleLeg1Report (0..*)
        [ruleReference NotionalQuantityScheduleLeg1]
    totalNotionalQuantityLeg2 ShortFraction5DecimalNumber (0..1)
        [ruleReference TotalNotionalQuantityOfLeg2]
    notionalLeg2 ShortFraction5DecimalNumber (0..1)
        [ruleReference NotionalAmountOfLeg2]
    notionalCurrency2 ISOCurrencyCodeEnum (0..1)
        [ruleReference NotionalCurrency2]
    notionalAmountScheduleLeg2 NotionalAmountScheduleLeg2Report (0..*)
        [ruleReference NotionalAmountScheduleLeg2]
    notionalQuantityScheduleLeg2 NotionalQuantityScheduleLeg2Report (0..*)
        [ruleReference NotionalQuantityScheduleLeg2]
    otherPayment OtherPaymentReport (0..*)
		[ruleReference OtherPayment]
    fixedRateOfLeg1 Max11Number (0..1)
        [ruleReference FixedRateOfLeg1OrCoupon]
    fixedRateDayCountConventionLeg1 InterestComputationMethod4Code (0..1)
        [ruleReference FixedRateOrCouponDayCountConventionLeg1]
    fixedRatePaymentFrequencyPeriodLeg1 Frequency13Code__1 (0..1)
        [ruleReference FixedRateOrCouponPaymentFrequencyPeriodLeg1]
    fixedRatePaymentFrequencyPeriodMultiplierLeg1 Max3Number (0..1)
        [ruleReference FixedRateOrCouponPaymentFrequencyPeriodMultiplierLeg1]
    identifierOfFloatingRateOfLeg1 ISINOct2015Identifier (0..1)
        [ruleReference IdentifierOfFloatingRateOfLeg1]
    indicatorOfTheFloatingRateOfLeg1 Max4Text (0..1)
        [ruleReference IndicatorOfTheFloatingRateOfLeg1]
    nameOfTheFloatingRateOfLeg1 Max50AlphaNumericTextWithSplChars (0..1)
        [ruleReference NameOfTheFloatingRateOfLeg1]
    floatingRateDayCountConventionOfLeg1 InterestComputationMethod4Code (0..1)
        [ruleReference FloatingRateDayCountConventionOfLeg1]
    floatingRatePaymentFrequencyPeriodOfLeg1 Frequency13Code__1 (0..1)
        [ruleReference FloatingRatePaymentFrequencyPeriodOfLeg1]
    floatingRatePaymentFrequencyPeriodMultiplierOfLeg1 Max3Number (0..1)
        [ruleReference FloatingRatePaymentFrequencyPeriodMultiplierOfLeg1]
    floatingRateReferencePeriodOfLeg1TimePeriod Max4Text (0..1)
    	[ruleReference FloatingRateReferencePeriodOfLeg1TimePeriod]
    floatingRateReferencePeriodOfLeg1Multiplier Max3Number (0..1)
        [ruleReference FloatingRateReferencePeriodOfLeg1Multiplier]
    floatingRateResetFrequencyPeriodOfLeg1 Max4Text (0..1)
		[ruleReference FloatingRateResetFrequencyPeriodOfLeg1]
    floatingRateResetFrequencyPeriodMultiplierLeg1 Max3Number (0..1)
        [ruleReference FloatingRateResetFrequencyMultiplierOfLeg1]
    spreadOfLeg1 SpreadOfLeg1 (0..1)
    fixedRateOfLeg2 Max11Number (0..1)
        [ruleReference FixedRateOfLeg2]
    fixedRateDayCountConventionLeg2 InterestComputationMethod4Code (0..1)
        [ruleReference FixedRateDayCountConventionLeg2]
    fixedRatePaymentFrequencyPeriodLeg2 Frequency13Code__1 (0..1)
        [ruleReference FixedRatePaymentFrequencyPeriodLeg2]
    fixedRatePaymentFrequencyPeriodMultiplierLeg2 Max3Number (0..1)
        [ruleReference FixedRatePaymentFrequencyPeriodMultiplierLeg2]
    identifierOfFloatingRateOfLeg2 ISINOct2015Identifier (0..1)
        [ruleReference IdentifierOfFloatingRateOfLeg2]
    indicatorOfTheFloatingRateOfLeg2 Max4Text (0..1)
        [ruleReference IndicatorOfTheFloatingRateOfLeg2]
    nameOfTheFloatingRateOfLeg2 Max50AlphaNumericTextWithSplChars (0..1)
        [ruleReference NameOfTheFloatingRateOfLeg2]
    floatingRateDayCountConventionOfLeg2 InterestComputationMethod4Code (0..1)
        [ruleReference FloatingRateDayCountConventionOfLeg2]
    floatingRatePaymentFrequencyPeriodOfLeg2 Frequency13Code__1 (0..1)
        [ruleReference FloatingRatePaymentFrequencyPeriodOfLeg2]
    floatingRatePaymentFrequencyPeriodMultiplierOfLeg2 Max3Number (0..1)
        [ruleReference FloatingRatePaymentFrequencyPeriodMultiplierOfLeg2]
    floatingRateReferencePeriodOfLeg2TimePeriod Max4Text (0..1)
        [ruleReference FloatingRateReferencePeriodOfLeg2TimePeriod]
    floatingRateReferencePeriodOfLeg2Multiplier Max3Number (0..1)
        [ruleReference FloatingRateReferencePeriodOfLeg2Multiplier]
    floatingRateResetFrequencyPeriodOfLeg2 Max4Text (0..1)
		[ruleReference FloatingRateResetFrequencyPeriodOfLeg2]
    floatingRateResetFrequencyPeriodMultiplierLeg2 Max3Number (0..1)
        [ruleReference FloatingRateResetFrequencyMultiplierOfLeg2]
    spreadOfLeg2 SpreadOfLeg2 (0..1)
    packageTransactionSpread PackageTransactionSpread (0..1)
    exchangeRate Max18D13Number (0..1)
        [ruleReference ExchangeRate]
    forwardExchangeRate Max18D13Number (0..1)
        [ruleReference ForwardExchangeRate]
    exchangeRateBasis ExchangeRateBasisStringFormat (0..1)
        [ruleReference ExchangeRateBasis]
    baseProduct string (0..1)
        [ruleReference BaseProduct]
    subProduct string (0..1)
        [ruleReference SubProduct]
    furtherSubProduct string (0..1)
        [ruleReference FurtherSubProduct]
    deliveryPoint EICIdentifier (0..*)
        [ruleReference DeliveryPointOrZone]
    interconnectionPoint EICIdentifier (0..1)
        [ruleReference InterconnectionPoint]
    loadType EnergyLoadType1Code (0..1)
        [ruleReference LoadType]
    deliveryReport DeliveryReport (0..*)
       [ruleReference Delivery]
    optionType Max4Text (0..1)
        [ruleReference OptionType]
    optionStyle Max4Text (0..1)
        [ruleReference OptionStyle]
    strikePrice StrikePriceAndNotation (0..1)
    strikePriceSchedule StrikePriceScheduleReport (0..*)
        [ruleReference StrikePriceSchedule]
    optionPremiumAmount ShortFraction5DecimalNumber (0..1)
        [ruleReference OptionPremiumAmount]
    optionPremiumCurrency ISOCurrencyCodeEnum (0..1)
        [ruleReference OptionPremiumCurrency]
    optionPremiumPaymentDate date (0..1)
        [ruleReference OptionPremiumPaymentDate]
    maturityDateOfTheUnderlying date (0..1)
        [ruleReference MaturityDateOfTheUnderlying]
    seniority Max4Text (0..1)
        [ruleReference Seniority]
    referenceEntity string (0..1)
        [ruleReference ReferenceEntity]
    series Max5Int (0..1)
        [ruleReference Series]
    version Max5Int (0..1)
        [ruleReference Version]
    indexFactor ShortFraction10DecimalNumber (0..1)
        [ruleReference IndexFactor]
    tranche boolean (0..1)
        [ruleReference Tranche]
    cdSIndexAttachmentPoint ShortFraction10DecimalNumber (0..1)
        [ruleReference CDSIndexAttachmentPoint]
    cdSIndexDetachmentPoint ShortFraction10DecimalNumber (0..1)
        [ruleReference CDSIndexDetachmentPoint]
    collateralPortfolioIndicator boolean (0..1)
        [ruleReference CollateralPortfolioIndicator]
    collateralPortfolioCode Max52AlphaNumericText (0..1)
        [ruleReference CollateralPortfolioCode]
    actionType ActionTypeEnum (1..1)
        [ruleReference ActionType]
    eventType string (0..1)
        [ruleReference EventType]
    eventDate ISODate (1..1)
        [ruleReference EventDate]
    level string (1..1)
        [ruleReference Level]
    nonReportable ESMAEMIRNonReportable (0..1)

//Validation Rules
//Section 1 - Parties to the derivative
    condition EMIR_VR_1001_01: <"Reporting timestamp">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "1" validationRule "Transaction"
      provision "Common input format: YYYY-MM-DDThh:MM:SSZ"]
        True

    condition EMIR_VR_1001_02: <"Reporting timestamp">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "1" validationRule "Transaction"
      provision "The reporting timestamp should be equal or earlier than the timestamp of the receipt of the report by the TR."]
        True

    condition EMIR_VR_1001_03: <"Reporting timestamp">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "1" validationRule "Transaction"
      provision "The date part of the timestamp cannot be earlier than the day preceding the date of the receipt of the report by the TR. The receipt of the report should be understood as the moment the report enters a TRs system."]
        True

    condition EMIR_VR_1001_04: <"Reporting timestamp">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "1" validationRule "Transaction"
      provision "The reporting timestamp should be equal or later than the execution timestamp reported in the field 2.42."]
        reportingTimestamp >= executionTimestamp

    condition EMIR_VR_1001_05: <"Reporting timestamp">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "1" validationRule "Transaction"
      provision "The reporting timestamp should be equal or later than 2024-04-29"]
        CompareDateTo(reportingTimestamp -> date, 2024, 4, 29) >= 0

    condition EMIR_VR_1002_01: <"Report submitting entity ID - Condition 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "2" validationRule "Transaction"
      provision "For action types 'NEWT', 'MODI', 'VALU', 'CORR', 'REVI' and 'POSC': this field shall contain a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then GetOrFetchLeiData(
                nonReportable -> enrichment -> leiData,
                reportSubmittingEntityID
            )
            exists

    condition EMIR_VR_1002_02: <"Report submitting entity ID - Condition 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "2" validationRule "Transaction"
      provision "The status of the LEI for all the above action types shall be 'Issued', 'Lapsed', 'Pending transfer' or 'Pending archival'.
      Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> Lapsed, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival] contains GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    reportSubmittingEntityID
                ) -> registrationStatus

    condition EMIR_VR_1002_03: <"Report submitting entity ID - Condition 3">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "2" validationRule "Transaction"
      provision "For action types 'TERM' and 'EROR': This field shall contain an LEI included in the GLEIF database maintained by the Central Operating Unit, irrespective of the registration status of that LEI."]
        if [ActionTypeEnum -> TERM, ActionTypeEnum -> EROR] any = actionType
        then GetOrFetchLeiData(
                nonReportable -> enrichment -> leiData,
                reportSubmittingEntityID
            )
            exists

    condition EMIR_VR_1002_04: <"Report submitting entity ID - Condition 4">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "2" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch."]
        GetOrFetchLeiData(nonReportable -> enrichment -> leiData, reportSubmittingEntityID) -> entityCategory <> LeiCategoryEnum -> Branch

    condition EMIR_VR_1003_01: <"Entity responsible for reporting - Condition 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "3" validationRule "Transaction"
      provision "If field 2.41 is not populated with a MIC code of a trading venue that was a regulated market or a third-country market considered as equivalent to a regulated market at the time of the conclusion of the derivative, this field shall be populated. Otherwise this field shall be left blank."]
        if (GetOrFetchMicData(nonReportable -> enrichment -> micData, venueOfExecution)
            extract
                marketCategory = MicMarketCategoryEnum -> RMKT
                    or IsESMAThirdCountryEquivalentMarket(mic) = True)
        then entityResponsibleForReporting is absent
        else entityResponsibleForReporting exists

    condition EMIR_VR_1003_02: <"Entity responsible for reporting">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "3" validationRule "Transaction"
      provision "When populated, it shall contain for action types 'NEWT', 'MODI', 'VALU', 'CORR' and 'POSC': this field shall contain a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then GetOrFetchLeiData(
                nonReportable -> enrichment -> leiData,
                entityResponsibleForReporting
            )
            exists

    condition EMIR_VR_1003_03: <"Entity responsible for reporting">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "3" validationRule "Transaction"
      provision "When populated, it shall contain the status of the LEI for all the above action types shall be 'Issued', 'Pending transfer' or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then LeiRegistrationStatusIsValidForStatus(
                    nonReportable -> enrichment -> leiData,
                    entityResponsibleForReporting,
                    eventDate,
                    reportingTimestamp -> date,
                    [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival]
                )

    condition EMIR_VR_1003_04: <"Entity responsible for reporting">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "3" validationRule "Transaction"
      provision "When populated, it shall contain for action types 'TERM', 'REVI' and 'EROR': this field shall contain an LEI included in the GLEIF database maintained by the Central Operating Unit, irrespective of the registration status of that LEI."]
        if [ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> EROR] any = actionType
        then GetOrFetchLeiData(
                nonReportable -> enrichment -> leiData,
                entityResponsibleForReporting
            )
            exists

    condition EMIR_VR_1003_05: <"Entity responsible for reporting">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "3" validationRule "Transaction"
      provision "When populated, it shall contain: the LEI shall pertain to a legal entity and not a branch."]
        if entityResponsibleForReporting exists
        then (GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    entityResponsibleForReporting
                ) -> entityStatus exists
                and GetOrFetchLeiData(
                        nonReportable -> enrichment -> leiData,
                        entityResponsibleForReporting
                    ) -> entityCategory <> LeiCategoryEnum -> Branch)

    condition EMIR_VR_1004_01: <"Counterparty 1 (Reporting counterparty) - Condition 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "4" validationRule "Transaction"
      provision "For action types 'NEWT', 'MODI', 'VALU', 'CORR' and 'POSC': this field shall contain a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty1) exists

    condition EMIR_VR_1004_02: <"Counterparty 1 (Reporting counterparty) - Condition 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "4" validationRule "Transaction"
      provision "The status of the LEI for all the above action types shall be 'Issued', 'Pending transfer' or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
    [docReference ISDA TechnicalExecutionGroup 
        provision "'above action types' means 'NEWT', 'MODI', 'VALU', 'CORR' and 'POSC'"]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then LeiRegistrationStatusIsValidForStatus(
                    nonReportable -> enrichment -> leiData,
                    counterparty1,
                    eventDate,
                    reportingTimestamp -> date,
                    [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival]
                )

    condition EMIR_VR_1004_03: <"Counterparty 1 (Reporting counterparty) - Condition 3">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "4" validationRule "Transaction"
      provision "For action types 'TERM' , 'REVI' and 'EROR': This field shall contain an LEI included in the GLEIF database maintained by the Central Operating Unit, irrespective of the registration status of that LEI."]
        if [ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> EROR] any = actionType
        then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty1) exists

    condition EMIR_VR_1004_04: <"Counterparty 1 (Reporting counterparty) - Condition 4">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "4" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch."]
        GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty1) -> entityCategory <> LeiCategoryEnum -> Branch

    condition EMIR_VR_1004_05: <"Counterparty 1 (Reporting counterparty) - Condition 5">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "4" validationRule "Transaction"
      provision "The value populated in this field when the trade is reported for the first time, shall not be modified in the subsequent reports."]
    [docReference ISDA TechnicalExecutionGroup date "20230822"
        provision "DRR being stateless, this cannot be modelled"]
        True

    condition EMIR_VR_1005_01: <"Nature of the counterparty 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "5" validationRule "Transaction"
    provision "Shall contain only one of the following values: 'F', 'N', 'C' or 'O'. 1 alphabetical character."]
        if IsVRAllowedForActionType(actionType)
        then if ["F", "N", "C", "O"] any = natureOfCounterparty1
            then True
            else False

    condition EMIR_VR_1006_01: <"Corporate sector of the counterparty 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "6" validationRule "Transaction"
      provision "If field 1.5 is populated with 'F', at least one code pertaining to the classification of the financial counterparties shall be provided."]
        if IsVRAllowedForActionType(actionType)
        then if natureOfCounterparty1 = "F"
            then corporateSectorOfTheCounterparty1
                extract (["INVF", "CDTI", "INUN", "UCIT", "ORPI", "AIFD", "CSDS"] any = item)
            then all = True

    condition EMIR_VR_1006_02: <"Corporate sector of the counterparty 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "6" validationRule "Transaction"
    provision "If field 1.5 is populated with 'N', at least one code pertaining to the classification of the non-financial counterparties shall be provided."]
        if IsVRAllowedForActionType(actionType)
        then if natureOfCounterparty1 = "N"
            then corporateSectorOfTheCounterparty1
                extract
                    (["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U"] any = item)
            then all = True

    condition EMIR_VR_1006_03: <"Corporate sector of the counterparty 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "6" validationRule "Transaction"
    provision "If field 1.5 is populated with 'C' or 'O', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["C", "O"] any = natureOfCounterparty1
            then corporateSectorOfTheCounterparty1 is absent

    condition EMIR_VR_1007_01: <"Clearing Threshold of counterparty 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "7" validationRule "Transaction"
    provision "If field 1.5 is populated with 'N' or 'F', this field shall be populated and shall contain only one of the following values: 'TRUE' or 'FALSE'."]
        if IsVRAllowedForActionType(actionType)
        then if ["N", "F"] any = natureOfCounterparty1
            then clearingThresholdOfCounterparty1 exists

    condition EMIR_VR_1007_02: <"Clearing Threshold of counterparty 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "7" validationRule "Transaction"
      provision "If field 1.5 is populated with 'C' or 'O', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["C", "O"] any = natureOfCounterparty1
            then clearingThresholdOfCounterparty1 is absent

    condition EMIR_VR_1008_01: <"Counterparty 2 identifier type">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "8" validationRule "Transaction"
      provision "Shall only contain one of the following values: 'TRUE' or 'FALSE'."]
        counterparty2IdentifierType = True or counterparty2IdentifierType = False

    condition EMIR_VR_1008_02: <"Counterparty 2 identifier type">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "8" validationRule "Transaction"
      provision "The value populated in this field when the trade is reported for the first time, shall not be modified in the subsequent reports."]
        if True = False then True

    condition EMIR_VR_1009_01: <"Counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "If field 1.8 is populated with 'TRUE':
      For action types 'NEWT', 'MODI', 'VALU', 'CORR' and 'POSC': this field shall contain a
      valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if counterparty2IdentifierType = True
                and [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty2) exists

    condition EMIR_VR_1009_02: <"Counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "If field 1.8 is populated with 'TRUE': The status of the LEI for all the above action types shall be 'Issued', 'Lapsed', 'Pending transfer'or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        if counterparty2IdentifierType = True
                and [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then LeiRegistrationStatusIsValid(
                    nonReportable -> enrichment -> leiData,
                    counterparty2,
                    eventDate,
                    reportingTimestamp -> date
                )

    condition EMIR_VR_1009_03: <"Counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "If field 1.8 is populated with 'TRUE': For action types 'TERM', 'REVI' and 'EROR': This field shall contain an LEI included in the GLEIF database maintained by the Central Operating Unit, irrespective of the registration status of that LEI."]
        if counterparty2IdentifierType = True
                and [ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> EROR] any = actionType
        then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty2) exists

    condition EMIR_VR_1009_04: <"Counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 7. Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
            provision "EMIR_VR_1009_02 covers LEI status"]
        if counterparty2IdentifierType = True
        then (GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty2) -> entityStatus exists
                and GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty2) -> entityCategory <> LeiCategoryEnum -> Branch)

    condition EMIR_VR_1009_05: <"Counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "Fields 1.4 and 1.9 cannot contain the same LEI, unless this corresponds to the LEI of the CCP under field 2.33."]
        if centralCounterparty <> counterparty2
        then counterparty1 <> counterparty2

    condition EMIR_VR_1009_06: <"Counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "If field 1.8 is populated with 'FALSE', this field shall contain up to 72 alphanumeric characters."]
        if counterparty2IdentifierType = False
        then counterparty2 exists

    condition EMIR_VR_1009_07: <"Counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "If field 1.8 is populated with 'FALSE', For action types 'NEWT' and 'POSC', the first 20 characters of the client code should be equal to the LEI reported in the field 1.4 Counterparty 1 (Reporting counterparty)"]
        [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
            provision "False check ensures LEI is descoped from this validation rule."]
        if counterparty2IdentifierType = False
                and [ActionTypeEnum -> NEWT, ActionTypeEnum -> POSC] any = actionType
                and counterparty2 exists
        then SubString(counterparty2, 1, 20) = counterparty1

    condition EMIR_VR_1009_08: <"Counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "The value populated in this field when the trade is reported for the first time, shall not be modified in the subsequent reports."]
        [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
            provision "Not modelled. The condition cannot be executed in a stateless environment."]
        True

    condition EMIR_VR_1010_01: <"Country of the counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "10" validationRule "Transaction"
      provision "If field 1.8 is populated with 'FALSE', this field shall be populated and shall contain 2 alphabetical characters"]
        if IsVRAllowedForActionType(actionType)
        then if counterparty2IdentifierType = False
            then countryOfTheCounterParty2 exists

    condition EMIR_VR_1010_02: <"Country of the counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "10" validationRule "Transaction"
      provision "If field 1.8 is populated with 'TRUE', this field shall be left blank"]
        if IsVRAllowedForActionType(actionType)
        then if counterparty2IdentifierType
            then countryOfTheCounterParty2 is absent

    condition EMIR_VR_1011_01: <"Nature of the counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "11" validationRule "Transaction"
      provision "If field 1.8 is populated with 'TRUE', this field shall be populated and shall contain only one of the following values: 'F', 'N', 'C' or 'O'. 1 alphabetical character."]
        if IsVRAllowedForActionType(actionType)
        then if counterparty2IdentifierType and ["F", "N", "C", "O"] any = natureOfCounterparty2
            then True

    condition EMIR_VR_1011_02: <"Nature of the counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "11" validationRule "Transaction"
      provision "If field 1.8 is populated with 'FALSE', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if counterparty2IdentifierType = False
            then natureOfCounterparty2 is absent

    condition EMIR_VR_1012_01: <"Corporate sector of the counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "12" validationRule "Transaction"
      provision "If field 1.11 is populated with 'F', at least one code pertaining to the classification of the financial counterparties shall be provided."]
        if IsVRAllowedForActionType(actionType)
        then if natureOfCounterparty2 = "F"
            then corporateSectorOfTheCounterparty2
                extract (["INVF", "CDTI", "INUN", "UCIT", "ORPI", "AIFD", "CSDS"] any = item)
            then all = True

    condition EMIR_VR_1012_02: <"Corporate sector of the counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "12" validationRule "Transaction"
      provision "If field 1.11 is populated with 'N', at least one code pertaining to the classification of the non-financial counterparties shall be provided."]
        if IsVRAllowedForActionType(actionType)
        then if natureOfCounterparty2 = "N"
            then corporateSectorOfTheCounterparty2
                extract
                    (["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U"] any = item)
            then all = True

    condition EMIR_VR_1012_03: <"Corporate sector of the counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "12" validationRule "Transaction"
      provision "If field 1.11 is populated with 'C', 'O' or is blank, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["C", "O"] any = natureOfCounterparty2 or natureOfCounterparty2 is absent
            then corporateSectorOfTheCounterparty2 is absent

    condition EMIR_VR_1013_01: <"Clearing Threshold of counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "13" validationRule "Transaction"
      provision "If field 1.11 is populated with 'N' or 'F', this field shall be populated and shall contain only one of the following values: 'TRUE' or 'FALSE'."]
        if IsVRAllowedForActionType(actionType)
        then if ["N", "F"] any = natureOfCounterparty2
            then clearingThresholdOfCounterparty2 exists

    condition EMIR_VR_1013_02: <"Clearing Threshold of counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "13" validationRule "Transaction"
      provision "If field 1.11 is populated with 'C' or 'O', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["C", "O"] any = natureOfCounterparty2
            then clearingThresholdOfCounterparty2 is absent

    condition EMIR_VR_1014_01: <"Reporting obligation of the counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "14" validationRule "Transaction"
      provision "This field shall contain only one of the following values: 'TRUE' or 'FALSE'."]
        if IsVRAllowedForActionType(actionType)
        then [True, False] any = reportingObligationOfTheCounterparty2

    condition EMIR_VR_1014_02: <"Reporting obligation of the counterparty 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "14" validationRule "Transaction"
      provision "If the field 1.8 is populated with 'FALSE', this field shall be populated with 'FALSE'."]
        if IsVRAllowedForActionType(actionType)
        then if counterparty2IdentifierType = False
            then reportingObligationOfTheCounterparty2 = False

    condition EMIR_VR_1015_01: <"Broker ID">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "15" validationRule "Transaction"
    provision "When populated, shall contain a valid LEI included in the GLEIF database maintained by the Central Operating Unit. The status of the LEI shall be 'Issued', 'Lapsed', 'Pending transfer' or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in Reporting timestamp."]
        if IsVRAllowedForActionType(actionType)
        then if brokerID exists
            then LeiRegistrationStatusIsValid(
                        nonReportable -> enrichment -> leiData,
                        brokerID,
                        eventDate,
                        reportingTimestamp -> date
                    )

    condition EMIR_VR_1015_02: <"Broker ID">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "15" validationRule "Transaction"
    provision "The LEI shall pertain to a legal entity and not a branch."]
        if IsVRAllowedForActionType(actionType)
        then if GetOrFetchLeiData(nonReportable -> enrichment -> leiData, brokerID) exists
            then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, brokerID) -> entityCategory <> LeiCategoryEnum -> Branch

    condition EMIR_VR_1016_01: <"Clearing member Condition 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "If field 2.31 is populated with 'Y' this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if cleared = "Y" then clearingMember exists

    condition EMIR_VR_1016_02: <"Clearing member Condition 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "When populated, shall contain a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if IsVRAllowedForActionType(actionType)
        then if clearingMember exists
            then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, clearingMember) -> lei exists

    condition EMIR_VR_1016_03: <"Clearing member Condition 3">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "The status of the LEI shall be 'Issued', 'Lapsed', 'Pending transfer' or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp. "]
        if IsVRAllowedForActionType(actionType)
        then if clearingMember exists
            then LeiRegistrationStatusIsValid(
                        nonReportable -> enrichment -> leiData,
                        clearingMember,
                        eventDate,
                        reportingTimestamp -> date
                    )

    condition EMIR_VR_1016_04: <"Clearing member Condition 4">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "The LEI shall pertain to a legal entity and not a branch."]
        if IsVRAllowedForActionType(actionType)
        then if GetOrFetchLeiData(nonReportable -> enrichment -> leiData, clearingMember)
                exists
            then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, clearingMember) -> entityCategory <> LeiCategoryEnum -> Branch

    condition EMIR_VR_1016_05: <"Clearing member Condition 5">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "If field 2.31 is populated with 'N', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if cleared = "N" then clearingMember is absent

    condition EMIR_VR_1016_06: <"Clearing member Condition 6">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "Fields 1.16 and 2.33 cannot contain the same LEI"]
        if IsVRAllowedForActionType(actionType)
        then clearingMember <> centralCounterparty

    condition EMIR_VR_1016_07: <"Clearing member Condition 7">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
        provision "The LEI shall not pertain to an authorised or registered CCP."]
    [regulatoryReference ISDA PeerReviewGroup date "20231020"
        provision "Defaulted to 'True' due to the LEI API not featuring the CCP status."]
        True

    condition EMIR_VR_1017_01: <"Direction">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "17" validationRule "Transaction"
      provision "Either field 1.17 or both fields 1.18 and 1.19 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then (direction exists and directionOfLeg1 is absent and directionOfLeg2 is absent)
                or (direction is absent and directionOfLeg1 exists and directionOfLeg2 exists)

    condition EMIR_VR_1017_02: <"Direction">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "17" validationRule "Transaction"
      provision "If populated, this field shall contain only one of the following values: 'BYER' or 'SLLR'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if direction exists
            then (direction = BYER or direction = SLLR)

    condition EMIR_VR_1018_01: <"Direction of leg 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "18" validationRule "Transaction"
      provision "Either field 1.17 or both fields 1.18 and 1.19 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then (direction exists and directionOfLeg1 is absent and directionOfLeg2 is absent)
                or (direction is absent and directionOfLeg1 exists and directionOfLeg2 exists)

    condition EMIR_VR_1018_02: <"Direction of leg 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "18" validationRule "Transaction"
      provision "If populated, this field shall contain only one of the following values: 'MAKE' or 'TAKE'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if directionOfLeg1 exists
            then (directionOfLeg1 = MAKE or directionOfLeg1 = TAKE)

    condition EMIR_VR_1018_03: <"Direction of leg 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "18" validationRule "Transaction"
      provision "If populated, this field shall contain a different value than field 1.19."]
        if IsVRAllowedForActionType(actionType)
        then if directionOfLeg1 exists
            then directionOfLeg1 <> directionOfLeg2

    condition EMIR_VR_1019_01: <"Direction of leg 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "19" validationRule "Transaction"
      provision "Either field 1.17 or both fields 1.18 and 1.19 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then (direction exists and directionOfLeg1 is absent and directionOfLeg2 is absent)
                or (direction is absent and directionOfLeg1 exists and directionOfLeg2 exists)

    condition EMIR_VR_1019_02: <"Direction of leg 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "19" validationRule "Transaction"
      provision "If populated, this field shall contain only one of the following values: 'MAKE' or 'TAKE'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if directionOfLeg2 exists
            then (directionOfLeg2 = MAKE or directionOfLeg2 = TAKE)

    condition EMIR_VR_1019_03: <"Direction of leg 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "19" validationRule "Transaction"
      provision "If populated, this field shall contain a different value than field 1.18."]
        if IsVRAllowedForActionType(actionType)
        then if directionOfLeg2 exists
            then directionOfLeg2 <> directionOfLeg1

    condition EMIR_VR_1020_01: <"Directly linked to commercial activity or treasury financing Condition 1">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "20" validationRule "Transaction" provision "If field 1.5 is populated with 'N' and field 2.154 (Level) is populated with 'TCTN', this field shall be populated and shall contain only one of the following values: 'TRUE' or 'FALSE'. "]
        if IsVRAllowedForActionType(actionType)
        then if natureOfCounterparty1 = "N"
            then if level = "TCTN"
                then directlyLinkedToCommercialActivityOrTreasuryFinancing exists

    condition EMIR_VR_1020_02: <"Directly linked to commercial activity or treasury financing Condition 2">
        [docReference ESMA EMIR ValidationRules table "1" dataElement "20" validationRule "Transaction" provision "If field 1.5 is populated with 'F', 'C' or 'O' or if field 2.154 is populated with 'PSTN', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if level = "PSTN"
            then directlyLinkedToCommercialActivityOrTreasuryFinancing is absent
            else if level = "TCTN"
            then if ["F", "C", "O"] any = natureOfCounterparty1
                then directlyLinkedToCommercialActivityOrTreasuryFinancing is absent

//Section 2a - Identifiers and links
    condition EMIR_VR_2001_01: <"UTI">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "1" validationRule "Transaction"
      provision "Up to 52 alphanumerical characters. Four special characters are allowed ':', '.', '-', '_'. Special characters not allowed at the beginning or the end."]
        required choice uti, utiProprietary

    condition EMIR_VR_2001_02: <"UTI">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "1" validationRule "Transaction"
      provision "For action types 'NEWT' and 'POSC' only the upper-case alphabetic characters AZ and the digits 09 are allowed."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> POSC] any = actionType
        then uti exists

    condition EMIR_VR_2001_03: <"UTI">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "1" validationRule "Transaction"
      provision "Not allowed to change the content of this field once it is reported."]
        True

    condition EMIR_VR_2001_04: <"UTI">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "1" validationRule "Transaction"
      provision "The code reported in this field shall be different from the codes reported in fields 2.2, 2.3 or 2.4."]
        if uti exists
        then [reportTrackingNumber, subsequentPositionUti, priorUti, priorUtiProprietary] all <> uti
        else [reportTrackingNumber, subsequentPositionUti, priorUti, priorUtiProprietary] all <> utiProprietary

    condition EMIR_VR_2002_01: <"Report tracking number - Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "2" validationRule "Transaction"
      provision "If field 2.41 is populated with a MIC pertaining to a trading venue, this field shall be populated and shall contain up to 52 alphanumerical characters where any character is allowed."]
    [regulatoryReference ISDA EMEADataAndReporting date "20231207"
        provision "ESMA were asked about the application of field conditionality that RTN requires when field 2.41 (Venue of execution) is populated with a MIC of a trading venue, i.e. is RTN required for any MIC, or only for MICs of venues inside the Union. ESMA responded saying the RTN is only to be populated when field 2.41 is populated with the MIC of a venue in the Union. If a third-country MIC is populated, the RTN field (2.2) can be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if venueOfExecution exists
                    and GetOrFetchMicData(
                            nonReportable -> enrichment -> micData,
                            venueOfExecution
                        )
                        extract IsEU(countryCode) = True
            then reportTrackingNumber exists
            else reportTrackingNumber is absent

    condition EMIR_VR_2002_02: <"Report tracking number - Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "2" validationRule "Transaction"
      provision "When reported, the code reported in this field shall be different from the codes reported in fields 2.1, 2.3 or 2.4."]
        if IsVRAllowedForActionType(actionType)
        then if reportTrackingNumber exists
            then [uti, utiProprietary, subsequentPositionUti, priorUti, priorUtiProprietary] all <> reportTrackingNumber

    condition EMIR_VR_2002_03: <"Report tracking number - Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "2" validationRule "Transaction"
      provision "If field 2.41 is populated with a MIC that does not pertain to a trading venue (including XXXX and XOFF), this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ['XXXX', 'XOFF'] any = venueOfExecution or venueOfExecution is absent
            then reportTrackingNumber is absent
            else reportTrackingNumber exists

    condition EMIR_VR_2002_04: <"Report tracking number - Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "2" validationRule "Transaction"
      provision " If field 2.154 Level is populated with value PSTN, this field shall be left blank. "]
        if IsVRAllowedForActionType(actionType)
        then if level = 'PSTN' then reportTrackingNumber is absent

    condition EMIR_VR_2003_01: <"Prior UTI Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "3" validationRule "Transaction"
      provision "For action type 'NEWT': If field 2.152 is populated with 'NOVA', 'EXER' or 'ALOC', this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if actionType = ActionTypeEnum -> NEWT
                    and ["NOVA", "EXER", "ALOC"] any = eventType
            then required choice priorUti, priorUtiProprietary

    condition EMIR_VR_2003_02: <"Prior UTI Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "3" validationRule "Transaction"
      provision "For action type 'NEWT': If field 2.152 is populated with 'CLRG' or 'CORP', this field is optional."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2003_03: <"Prior UTI Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "3" validationRule "Transaction"
      provision "For action type 'NEWT' and other event types this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if actionType = ActionTypeEnum -> NEWT
                    and ["NOVA", "EXER", "ALOC", "CLRG", "CORP"] all <> eventType
            then priorUti is absent and priorUtiProprietary is absent

    condition EMIR_VR_2003_04: <"Prior UTI Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "3" validationRule "Transaction"
      provision "When populated, this field shall contain up to 52 alphanumerical characters. Four special characters are allowed ':', '.', '-', '_'. Special characters not allowed at the beginning or the end."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2003_05: <"Prior UTI Condition 5">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "3" validationRule "Transaction"
      provision "The code reported in this field shall be different from the codes reported in fields 2.1, 2.2 or 2.4."]
        if IsVRAllowedForActionType(actionType)
        then [uti, utiProprietary, reportTrackingNumber, subsequentPositionUti] all <> priorUti
                and [uti, utiProprietary, reportTrackingNumber, subsequentPositionUti] all <> priorUtiProprietary

    condition EMIR_VR_2004_01: <"Subsequent position UTI - Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "4" validationRule "Transaction"
      provision "For action type 'TERM': If field 2.152 is populated with 'INCP', this field shall be populated."]
        if [ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if actionType = ActionTypeEnum -> TERM and eventType = "INCP"
            then subsequentPositionUti exists

    condition EMIR_VR_2004_02: <"Subsequent position UTI - Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "4" validationRule "Transaction"
      provision "For action type 'TERM': If field 2.152 is populated with value other than 'INCP', this field is optional."]
        if [ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if actionType = ActionTypeEnum -> TERM
                    and eventType exists
                    and eventType <> "INCP"
            then True

    condition EMIR_VR_2004_03: <"Subsequent position UTI - Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "4" validationRule "Transaction"
      provision "For all relevant action types. When populated, this field shall contain up to 52 alphanumerical characters. Four special characters are allowed ':', '.',  '-', '_'. Special characters not allowed at the beginning or the end."]
        if [ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then True

    condition EMIR_VR_2004_04: <"Subsequent position UTI - Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "4" validationRule "Transaction"
      provision "For all relevant action types. The code reported in this field shall be different from the codes reported in fields 2.1, 2.2 or 2.3."]
        if [ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if subsequentPositionUti exists
            then [uti, reportTrackingNumber, priorUti] all <> subsequentPositionUti

    condition EMIR_VR_2005_01: <"PTRR ID Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "5" validationRule "Transaction"
    provision "For action types 'NEWT', 'MODI' and 'TERM': If field 2.152 is populated with 'COMP' and field 2.39 is populated with 'PWAS', 'PRBM' or 'OTHR', this field shall be populated."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
                    and eventType = "COMP"
                    and ["PWAS", "PRBM", "OTHR"] any = typeOfPTRRTechnique
            then ptrrId exists

    condition EMIR_VR_2005_02: <"PTRR ID Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "5" validationRule "Transaction"
    provision "For action types 'NEWT', 'MODI' and 'TERM': If field 2.152 is populated with 'COMP' and field 2.39 is populated with 'PWOS', or if field 2.152 is not populated with 'COMP',  this field shall be left blank."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
            then if (eventType = "COMP" and typeOfPTRRTechnique = "PWOS")
                        or eventType <> "COMP"
                then ptrrId is absent

    condition EMIR_VR_2005_03: <"PTRR ID Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "5" validationRule "Transaction"
    provision "When populated, this field shall contain up to 52 alphanumerical characters where only the the upper-case alphabetic characters A-Z and the digits 0-9 are allowed."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if ptrrId exists then True

    condition EMIR_VR_2005_04: <"PTRR ID Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "5" validationRule "Transaction"
    provision "The first 20 characters of the PTRR ID should be equal to the LEI reported in the field 2.40 PTRR service provider"]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if ptrrId exists
            then SubString(ptrrId, 1, 20) = ptrrServiceProvider

    condition EMIR_VR_2006_01: <"Package identifier">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "6" validationRule "Transaction"
      provision "Up to 35 alphanumerical characters."]
        if IsVRAllowedForActionType(actionType) then True

//Section 2b - Contract information
    condition EMIR_VR_2007_01: <"ISIN Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2b" dataElement "7" validationRule "Transaction"
      provision "If field 2.41 is populated with a MIC of a trading venue (RM, MTF or OTF) or of a systematic internaliser or with a MIC 'XOFF', this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if venueOfExecution exists
                    and (venueOfExecution = "XOFF"
                        or (GetOrFetchMicData(
                                nonReportable -> enrichment -> micData,
                                venueOfExecution
                            )
                            extract
                                marketCategory = MicMarketCategoryEnum -> RMKT
                                    or marketCategory = MicMarketCategoryEnum -> MLTF
                                    or marketCategory = MicMarketCategoryEnum -> OTFS)) = True
            then isin exists

    condition EMIR_VR_2007_02: <"ISIN Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2b" dataElement "7" validationRule "Transaction"
      provision "When populated, this field shall contain 12 alphanumerical characters, including a check digit."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2008_01: <"UPI Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2b" dataElement "8" validationRule "Transaction"
      provision "If the field 2.7 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if isin exists then upi is absent

    condition EMIR_VR_2008_02: <"UPI Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2b" dataElement "8" validationRule "Transaction"
      provision "If the field 2.7 is blank and the field 2.41 is not populated with a MIC of a third-country organised trading platform,  this field shall be populated"]
        if IsVRAllowedForActionType(actionType)
        then if isin is absent
                    and (venueOfExecution exists
                        and GetOrFetchMicData(
                                nonReportable -> enrichment -> micData,
                                venueOfExecution
                            )
                            extract
                                marketCategory = MicMarketCategoryEnum -> OTFS
                                    and IsEU(countryCode) = False) = False
            then upi exists

    condition EMIR_VR_2008_03: <"UPI Validation Condition 3">
        [docReference ESMA EMIR ValidationRules table "2b" dataElement "8" validationRule "Transaction"
      provision "If the field 2.7 is blank and the field 2.41 is populated with a MIC of a third-country organised trading platform,  this field is optional"]
        if IsVRAllowedForActionType(actionType)
        then if isin is absent
                    and (venueOfExecution exists
                        and GetOrFetchMicData(
                                nonReportable -> enrichment -> micData,
                                venueOfExecution
                            )
                            extract
                                marketCategory = MicMarketCategoryEnum -> OTFS
                                    and IsEU(countryCode) = False) = True
            then (upi exists or upi is absent)

    condition EMIR_VR_2008_04: <"UPI Validation Condition 4">
        [docReference ESMA EMIR ValidationRules table "2b" dataElement "8" validationRule "Transaction"
      provision "When populated, this field shall contain a valid UPI included in the UPI database maintained by the ANNA DSB.  12 alphanumerical characters, including a check digit."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2009_01: <"Product Classification Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "9" validationRule "Transaction"
    provision "This field shall be populated with CFI code composed of 6 characters and compliant with ISO 10962 Standard."]
        if IsVRAllowedForActionType(actionType)
        then [productClassification, empty] first exists

    condition EMIR_VR_2009_02: <"Product Classification Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "9" validationRule "Transaction"
    provision "At least the first  2 characters of the CFI code and the character representing asset class (if applicable for a given instrument) shall be provided (ie. these characters cannot be 'X',  which represents not applicable or undefined value)."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2010_01: <"Contract type Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "10" validationRule "Transaction"
        provision "This field shall only contain one of the following values: 'CFDS', 'FRAS', 'FUTR', 'FORW', 'OPTN', 'SPDB', 'SWAP', 'SWPT' or 'OTHR'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then (['CFDS', 'FRAS', 'FUTR', 'FORW', 'OPTN', 'SPDB', 'SWAP', 'SWPT', 'OTHR'] any = contractType)

    condition EMIR_VR_2011_01: <"Asset class Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "11" validationRule "Transaction"
        provision "This field shall only contain one of the following values: 'COMM', 'CRDT', 'CURR', 'EQUI' or 'INTR'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then (['COMM', 'CRDT', 'CURR', 'EQUI', 'INTR'] any = assetClass)

    condition EMIR_VR_2012_01: <"Derivative based on crypto-assets">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "12" validationRule "Transaction"
        provision "This field shall only contain one of the following values: 'TRUE', or 'FALSE'."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2013_01: <"Underlying Identification Type Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "13" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'EQUI', this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "EQUI"
            then underlyingIdentificationType exists

    condition EMIR_VR_2013_02: <"Underlying Identification Type Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "13" validationRule "Transaction"
      provision "If field 2.11 is populated with 'CRDT', one of the fields 2.13 or 2.144 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CRDT"
            then underlyingIdentificationType exists or referenceEntity exists

    condition EMIR_VR_2013_03: <"Underlying Identification Type Validation Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "13" validationRule "Transaction"
      provision "If field 2.11 is populated with 'INTR', at least one of the following fields shall be populated: 2.13, 2.79, 2.85."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "INTR"
            then underlyingIdentificationType exists
                    or fixedRateOfLeg1 exists
                    or nameOfTheFloatingRateOfLeg1 exists

    condition EMIR_VR_2013_04: <"Underlying Identification Type Validation Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "13" validationRule "Transaction"
      provision "If field 2.11 is populated with 'COMM' or 'CURR',  this field can be left blank."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2013_05: <"Underlying Identification Type Validation Condition 5">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "13" validationRule "Transaction"
      provision "When populated, this field shall contain one of the following values: 'I', 'B', 'X'. 1 alphabetical character."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType exists
            then ["I", "B", "X"] any = underlyingIdentificationType

    condition EMIR_VR_2014_01: <"Underlying identification Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "14" validationRule "Transaction"
    provision "If field 2.13 is populated with 'I', this field shall be populated and shall contain 12 alphanumerical including  a check digit."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType = "I"
            then underlyingIdentification exists

    condition EMIR_VR_2014_02: <"Underlying identification Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "14" validationRule "Transaction"
    provision "If field 2.13 is populated with 'X', and this field is populated, it shall contain 12 alphanumerical characters including a check digit. "]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType = "X" and underlyingIdentification exists
            then True

    condition EMIR_VR_2014_03: <"Underlying identification Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "14" validationRule "Transaction"
    provision "If field 2.13 is not populated with 'I' or 'X', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["I", "X"] all <> underlyingIdentificationType
            then underlyingIdentification is absent

    condition EMIR_VR_2015_01: <"Indicator of the underlying index Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "15" validationRule "Transaction"
    provision "When populated,  this field shall only contain one of the following values: 'ESTR', 'SONA', 'SOFR', 'EONA', 'EONS', 'EURI', 'EUUS', 'EUCH', 'GCFR', 'ISDA', 'LIBI', 'LIBO', 'MAAA', 'PFAN', 'TIBO', 'STBO', 'BBSW', 'JIBA', 'BUBO', 'CDOR', 'CIBO', 'MOSP', 'NIBO', 'PRBO', 'TLBO', 'WIBO', 'TREA', 'SWAP', 'FUSW', 'EFFR', 'OBFR', or 'CZNA'.  4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if indicatorOfTheUnderlyingIndex exists
            then (indicatorOfTheUnderlyingIndex
                extract
                    (["ESTR", "SONA", "SOFR", "EONA", "EONS", "EURI", "EUUS", "EUCH", "GCFR", "ISDA", "LIBI", "LIBO", "MAAA", "PFAN", "TIBO", "STBO", "BBSW", "JIBA", "BUBO", "CDOR", "CIBO", "MOSP", "NIBO", "PRBO", "TLBO", "WIBO", "TREA", "SWAP", "FUSW", "EFFR", "OBFR", "CZNA"] contains item)
                then all = True)

    condition EMIR_VR_2015_02: <"Indicator of the underlying index Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "15" validationRule "Transaction"
    provision "If field 2.13 is not populated with 'X', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType <> "X"
            then indicatorOfTheUnderlyingIndex is absent

    condition EMIR_VR_2016_01: <"Name of the underlying index Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "16" validationRule "Transaction"
    provision "If field 2.13 is populated with 'X', this field shall be populated and shall contain up to 50 alphanumerical characters. Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType = "X"
            then nameOfTheUnderlyingIndex exists
            else nameOfTheUnderlyingIndex is absent

    condition EMIR_VR_2017_01: <"Custom basket code">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "17" validationRule "Custom basket code"
    provision "If field 2.13 is populated with 'B', this field shall be populated and shall contain up to 72 alphanumeric characters."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType = "B"
            then customBasketCode exists
            else customBasketCode is absent

    condition EMIR_VR_2017_02: <"Custom basket code">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "17" validationRule "Custom basket code"
    provision "The first 20 characters of the custom basket code should be equal to an LEI code contained in GLEIF database."]
        if IsVRAllowedForActionType(actionType)
        then if customBasketCode exists
            then GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    SubString(customBasketCode, 1, 20)
                ) -> lei exists

    condition EMIR_VR_2017_03: <"Custom basket code">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "17" validationRule "Custom basket code"
    provision "Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType <> "B"
            then customBasketCode is absent
            else customBasketCode exists

    condition EMIR_VR_2018_01: <"Identifier of the baskets constituents Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "18" validationRule "Identifier of the baskets constituents"
    provision "If field 2.13 is populated with 'B', this field shall be populated and shall contain 12 alphanumeric characters, including a check digit. This field is repeatable. Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType = "B"
            then identifierOfBasketConstituents exists
            else identifierOfBasketConstituents is absent

    condition EMIR_VR_2019_01: <"Settlement currency 1 Validation Condition 1 ">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "19" validationRule "Contract information"
    provision "If field 2.47 is populated with 'CASH', this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if deliveryType = "CASH" then settlementCurrency1 exists

    condition EMIR_VR_2019_02: <"Settlement currency 1 Validation Condition 2 ">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "19" validationRule "Contract information"
    provision "If field 2.47 is populated with 'OPTL', this field is optional."]
        if IsVRAllowedForActionType(actionType)
        then if deliveryType = "OPTL" then True

    condition EMIR_VR_2019_04: <"Settlement currency 1 Validation Condition 4 ">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "19" validationRule "Contract information"
    provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType)
        then if settlementCurrency1 exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] any <> settlementCurrency1

    condition EMIR_VR_2019_05: <"Settlement currency 1 Validation Condition 5 ">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "19" validationRule "Contract information"
    provision "If field 2.47 is populated with 'PHYS' this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if deliveryType = "PHYS"
            then settlementCurrency1 is absent

    // condition EMIR_VR_2020_01:<"Settlement currency 2 Validation Condition 1 ">
    // [docReference ESMA EMIR ValidationRules table "2" dataElement "20" validationRule "Contract information"
    // provision "When populated, this field shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
    // if settlementCurrency2  exists then
    // ["AFN","EUR","ALL","DZD","USD","EUR","AOA","XCD","XCD","ARS","AMD","AWG","AUD","EUR","AZN","BSD","BHD","BDT","BBD","BYN","EUR","BZD","XOF","BMD","INR","BTN","BOB","BOV","USD","BAM","BWP","NOK","BRL","USD","BND","BGN","XOF","BIF","CVE","KHR","XAF","CAD","KYD","XAF","XAF","CLP","CLF","CNY","AUD","AUD","COP","COU","KMF","CDF","XAF","NZD","CRC","XOF","EUR","CUP","CUC","ANG","EUR","CZK","DKK","DJF","XCD","DOP","USD","EGP","SVC","USD","XAF","ERN","EUR","SZL","ETB","EUR","FKP","DKK","FJD","EUR","EUR","EUR","XPF","EUR","XAF","GMD","GEL","EUR","GHS","GIP","EUR","DKK","XCD","EUR","USD","GTQ","GBP","GNF","XOF","GYD","HTG","USD","AUD","EUR","HNL","HKD","HUF","ISK","INR","IDR","XDR","IRR","IQD","EUR","GBP","ILS","EUR","JMD","JPY","GBP","JOD","KZT","KES","AUD","KPW","KRW","KWD","KGS","LAK","EUR","LBP","LSL","ZAR","LRD","LYD","CHF","EUR","EUR","MOP","MKD","MGA","MWK","MYR","MVR","XOF","EUR","USD","EUR","MRU","MUR","EUR","XUA","MXN","MXV","USD","MDL","EUR","MNT","EUR","XCD","MAD","MZN","MMK","NAD","ZAR","AUD","NPR","EUR","XPF","NZD","NIO","XOF","NGN","NZD","AUD","USD","NOK","OMR","PKR","USD","PAB","USD","PGK","PYG","PEN","PHP","NZD","PLN","EUR","USD","QAR","EUR","RON","RUB","RWF","EUR","SHP","XCD","XCD","EUR","EUR","XCD","WST","EUR","STN","SAR","XOF","RSD","SCR","SLL","SLE","SGD","ANG","XSU","EUR","EUR","SBD","SOS","ZAR","SSP","EUR","LKR","SDG","SRD","NOK","SEK","CHF","CHE","CHW","SYP","TWD","TJS","TZS","THB","USD","XOF","NZD","TOP","TTD","TND","TRY","TMT","USD","AUD","UGX","UAH","AED","GBP","USD","USD","USN","UYU","UYI","UYW","UZS","VUV","VES","VED","VND","USD","USD","XPF","MAD","YER","ZMW","ZWL","XBA","XBB","XBC","XBD","XTS","XXX","XAU","XPD","XPT","XAG"] any = settlementCurrency2
    condition EMIR_VR_2020_02: <"Settlement currency 2 Validation Condition 2 ">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "20" validationRule "Contract information"
    provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType)
        then if settlementCurrency2 exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] any <> settlementCurrency2

    condition EMIR_VR_2020_03: <"Settlement currency 2 Validation Condition 3 ">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "20" validationRule "Contract information"
    provision "If field 2.47 is populated with 'PHYS' this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if deliveryType = "PHYS"
            then settlementCurrency2 is absent

//Section 2c - Valuation
    condition EMIR_VR_2021_01: <"Valuation amount Condition 1">
        [docReference ESMA EMIR Refit ValidationRules table "2" dataElement "21" validationRule "Valuation"
    provision "When populated, this field shall contain up to 25 numerical characters including up to 5 decimal places. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, shall not be counted as a numerical character."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists then True

    condition EMIR_VR_2022_01: <"Valuation currency Condition 1">
        [docReference ESMA EMIR Refit ValidationRules table "2" dataElement "22" validationRule "Valuation"
    provision "If field 2.21 is populated, this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists then valuationCurrency exists

    condition EMIR_VR_2022_02: <"Valuation currency Condition 2">
        [docReference ESMA EMIR Refit ValidationRules table "2" dataElement "22" validationRule "Valuation"
    provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationCurrency exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> valuationCurrency

    condition EMIR_VR_2022_03: <"Valuation currency Condition 3">
        [docReference ESMA EMIR Refit ValidationRules table "2" dataElement "22" validationRule "Valuation"
    provision "Otherwise, the field shall be left blank."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount is absent
            then valuationCurrency is absent

    condition EMIR_VR_2023_01: <"Valuation timestamp - Condition 1">
        [docReference ESMA EMIR Refit ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "If field 2.21 is populated, this field shall be populated in a common input format: YYYY-MM-DDThh:mm:ssZ."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists then valuationTimestamp exists

    condition EMIR_VR_2023_02: <"Valuation timestamp - Condition 2">
        [docReference ESMA EMIR Refit ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "The valuation timestamp shall be equal or later than 2014-02-12."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then CompareDateTo(executionTimestamp -> date, 2014, 2, 12) >= 0

    condition EMIR_VR_2023_03: <"Valuation timestamp - Condition 3">
        [docReference ESMA EMIR Refit ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "The valuation timestamp shall be equal or later than the execution timestamp."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists
            then valuationTimestamp >= executionTimestamp

    condition EMIR_VR_2023_04: <"Valuation timestamp - Condition 4">
        [docReference ESMA EMIR Refit ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "The valuation timestamp shall not be greater than the reporting timestamp."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists
            then valuationTimestamp <= reportingTimestamp

    condition EMIR_VR_2023_05: <"Valuation timestamp - Condition 5">
        [docReference ESMA EMIR Refit ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "The date part of the valuation timestamp shall not be greater than the expiration date or, where populated, the early termination date."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists
            then (if earlyTerminationDate exists
                then valuationTimestamp -> date <= earlyTerminationDate
                else valuationTimestamp -> date <= expirationDate)

    condition EMIR_VR_2023_06: <"Valuation timestamp - Condition 6">
        [docReference ESMA EMIR Refit ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "The date part of the valuation timestamp shall be equal to 2.153 Event date"]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists
            then valuationTimestamp -> date = eventDate

    condition EMIR_VR_2023_07: <"Valuation timestamp - Condition 7">
        [docReference ESMA EMIR Refit ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "Otherwise, the field shall be left blank."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount is absent
            then valuationTimestamp is absent

    condition EMIR_VR_2024_01: <"Valuation method">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "24" validationRule "Valuation"
      provision "If field 2.21 is populated and field 2.31 is populated with 'Y',  this field shall be populated with 'CCPV'."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists and cleared = "Y"
            then valuationMethod = ValuationType1Code -> CCPV

    condition EMIR_VR_2024_02: <"Valuation method">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "24" validationRule "Valuation"
      provision "If field 2.21 is populated and field 2.31 is populated with 'N', this field shall be populated with 'MTMA' or 'MTMO'.
                4 alphabetical characters."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists and cleared = "N"
            then [ValuationType1Code -> MTMA, ValuationType1Code -> MTMO] any = valuationMethod

    condition EMIR_VR_2024_03: <"Valuation method">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "24" validationRule "Valuation"
    provision "Otherwise, the field shall be left blank."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount is absent
            then valuationMethod is absent

    condition EMIR_VR_2025_01: <"Delta">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "25" validationRule "Valuation"
    provision "If field 2.21 is populated, field 2.10 is populated with 'OPTN' or 'SWPT' and field 2.13 is not populated with 'B', this field shall be populated."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists
                    and ["OPTN", "SWPT"] any = contractType
                    and underlyingIdentificationType = "B"
            then delta exists

    condition EMIR_VR_2025_02: <"Delta">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "25" validationRule "Valuation"
    provision "When populated, this field shall contain up to 25 numeric characters including up to 5 decimal places. Otherwise this field shall be left blank. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if delta exists then True else delta is absent

    condition EMIR_VR_2025_03: <"Delta">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "25" validationRule "Valuation"
    provision "Any value between -1 and 1 (including -1 and 1) is allowed.
                The negative symbol, if populated, shall not be counted as a numerical character."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if delta exists then delta >= -1 and delta <= 1

//Section 2d - Collateral
    condition EMIR_VR_2026_01: <"Collateral portfolio indicator">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "26" validationRule "Margin information"
    provision "This field shall contain only one of the following values: 'TRUE' or 'FALSE'."]
        if IsVRAllowedForActionType(actionType)
        then if collateralPortfolioIndicator exists then True

    condition EMIR_VR_2027_01: <"Collateral portfolio code">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "27" validationRule "Margin information"
    provision "If field 2.26 is populated with 'TRUE', this field shall be populated and shall contain up to 52 alphanumerical characters. Special characters are not allowed. Otherwise, the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if collateralPortfolioIndicator = True
            then collateralPortfolioCode exists
            else collateralPortfolioCode is absent

// Section 2e - Risk mitigation / Reporting
    condition EMIR_VR_2028_01: <"Confirmation timestamp">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "28" validationRule "Transaction"
    provision "If field 2.29 is populated with 'ECNF' or 'YCNF', this field shall be populated in a common input format: YYYY-MM-DDThh:mm:ssZ"]
        if IsVRAllowedForActionType(actionType)
        then if ['ECNF', 'YCNF'] any = confirmed and confirmationTimestamp exists
            then True

    condition EMIR_VR_2028_02: <"Confirmation timestamp">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "28" validationRule "Transaction"
    provision "The confirmation timestamp shall be greater than or equal to the Execution timestamp."]
        if IsVRAllowedForActionType(actionType)
        then if confirmationTimestamp exists
            then confirmationTimestamp >= executionTimestamp

    condition EMIR_VR_2028_03: <"Confirmation timestamp">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "28" validationRule "Transaction"
    provision "The confirmation timestamp shall not be greater than the reporting timestamp."]
        if IsVRAllowedForActionType(actionType)
        then if confirmationTimestamp exists
            then confirmationTimestamp <= reportingTimestamp

    condition EMIR_VR_2028_04: <"Confirmation timestamp">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "28" validationRule "Transaction"
    provision "The date part of the confirmation timestamp shall not be greater than the expiration date or, where populated, the early termination date"]
        if IsVRAllowedForActionType(actionType)
        then if confirmationTimestamp exists
            then if earlyTerminationDate exists
                then confirmationTimestamp -> date <= earlyTerminationDate
                else confirmationTimestamp -> date <= expirationDate

    condition EMIR_VR_2028_05: <"Confirmation timestamp">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "28" validationRule "Transaction"
    provision "If field 2.29 is populated with 'NCNF', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if confirmed = "NCNF"
            then confirmationTimestamp is absent

    condition EMIR_VR_2029_01: <"Confirmed">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "29" validationRule "Transaction"
      provision "If field 2.41 is not populated with a MIC code of a trading venue that was a regulated market or a third-country market considered as equivalent to a regulated market
      at the time of the conclusion of the derivative and field 2.31 is populated with 'N', this field shall be populated and shall contain only one of the following values: 'YCNF', 'NCNF' or 'ECNF'. 4 alphabetical characters. Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if (venueOfExecution exists
                        and GetOrFetchMicData(
                                nonReportable -> enrichment -> micData,
                                venueOfExecution
                            )
                            extract
                                (marketCategory = MicMarketCategoryEnum -> RMKT
                                    or IsESMAThirdCountryEquivalentMarket(mic) = True)) = False
                    and cleared = "N"
                    and ["YCNF", "NCNF", "ECNF"] any = confirmed
            then True
            else confirmed is absent

//Section 2f - Clearing
    condition EMIR_VR_2030_01: <"Clearing obligation Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "30" validationRule "Clearing"
    provision " If field 2.41 is not populated with a MIC code of a trading venue that was a regulated market or a third-country market considered as equivalent to a regulated market at the time of the conclusion of the derivative, this field shall be populated and shall contain one of the following values 'TRUE' , 'FLSE' or 'UKWN'."]
        if IsVRAllowedForActionType(actionType)
        then if (venueOfExecution exists
                    and GetOrFetchMicData(
                            nonReportable -> enrichment -> micData,
                            venueOfExecution
                        )
                        extract
                            (marketCategory = MicMarketCategoryEnum -> RMKT
                                or IsESMAThirdCountryEquivalentMarket(mic) = True)) = False
            then clearingObligation exists
                    and ["TRUE", "FLSE", "UKWN"] any = clearingObligation

    condition EMIR_VR_2030_02: <"Clearing obligation Validation Condition 2 ">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "30" validationRule "Clearing"
    provision "If field 2.31 is populated with 'Y', this field shall be populated with 'UKWN'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if cleared = "Y" then clearingObligation = "UKWN"

    condition EMIR_VR_2030_03: <"Clearing obligation Validation Condition 3 ">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "30" validationRule "Clearing"
    provision "Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if (venueOfExecution exists or cleared = "Y") = False
            then clearingObligation is absent

    condition EMIR_VR_2031_01: <"Cleared Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "31" validationRule "Transaction"
    provision "This field shall contain only one of the following values 'Y' or 'N'. 1 alphabetical character."]
        if IsVRAllowedForActionType(actionType)
        then cleared = "Y" or cleared = "N"

    condition EMIR_VR_2032_01: <"Clearing TimeStamp Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "32" validationRule "Transaction"
    provision "If field 2.31 is populated with 'Y', this field shall be populated in a common input format:  YYYY-MM-DDThh:mm:ssZ."]
        if IsVRAllowedForActionType(actionType)
        then if cleared = "Y" then clearingTimestamp exists

    condition EMIR_VR_2032_02: <"Clearing TimeStamp Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "32" validationRule "Transaction"
    provision "The clearing timestamp shall be greater than or equal to the Execution timestamp."]
        if IsVRAllowedForActionType(actionType)
        then if clearingTimestamp exists
            then clearingTimestamp >= executionTimestamp

    condition EMIR_VR_2032_03: <"Clearing TimeStamp Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "32" validationRule "Transaction"
    provision "The clearing timestamp shall not be greater than the reporting timestamp."]
        if IsVRAllowedForActionType(actionType)
        then if clearingTimestamp exists
            then clearingTimestamp <= reportingTimestamp

    condition EMIR_VR_2032_04: <"Clearing Timestamp Validation Condition 4 ">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "32" validationRule "Transaction"
    provision "The date part of the clearing timestamp shall not be greater than the expiration date or, where populated, the early termination date."]
        if IsVRAllowedForActionType(actionType)
        then if clearingTimestamp exists
            then if earlyTerminationDate exists
                then clearingTimestamp -> date <= earlyTerminationDate
                else clearingTimestamp -> date <= expirationDate

    condition EMIR_VR_2032_05: <"Clearing TimeStamp Condition 5">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "32" validationRule "Transaction"
    provision "If field 2.31 is populated with 'N', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if cleared = "N" then clearingTimestamp is absent

    condition EMIR_VR_2033_01: <"Central Counterparty Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "33" validationRule "Transaction"
    provision "If field 2.31 is populated with 'Y' this field shall be populated with a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if IsVRAllowedForActionType(actionType)
        then if cleared = "Y"
            then centralCounterparty exists
                    and GetOrFetchLeiData(
                            nonReportable -> enrichment -> leiData,
                            centralCounterparty
                        )
                        exists

    condition EMIR_VR_2033_02: <"Central Counterparty Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "33" validationRule "Transaction"
    provision "The status of the LEI shall be 'Issued', 'Lapsed',  'Pending transfer' or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp. "]
        if IsVRAllowedForActionType(actionType)
        then if centralCounterparty exists
            then LeiRegistrationStatusIsValid(
                        nonReportable -> enrichment -> leiData,
                        centralCounterparty,
                        eventDate,
                        reportingTimestamp -> date
                    )

    condition EMIR_VR_2033_03: <"Central Counterparty Validation Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "33" validationRule "Transaction"
    provision "The LEI shall pertain to a legal entity and not a branch."]
        if IsVRAllowedForActionType(actionType)
        then if GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    centralCounterparty
                )
                exists
            then GetOrFetchLeiData(
                        nonReportable -> enrichment -> leiData,
                        centralCounterparty
                    ) -> entityCategory <> LeiCategoryEnum -> Branch

    condition EMIR_VR_2033_04: <"Central Counterparty Validation Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "33" validationRule "Transaction"
    provision "If field 2.31 is populated with 'N', this field shall be left blank. "]
        if IsVRAllowedForActionType(actionType)
        then if cleared = "N" then centralCounterparty is absent

//Section 2g - Details on the transaction
    condition EMIR_VR_2034_01: <"Master Agreement Type Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "34" validationRule  "Transaction"
    provision "This field shall be populated and shall contain only one of the following values: 'ISDA', 'CDEA', 'EUMA', 'FPCA', 'FMAT', 'DERV', 'CMOP', 'CHMA', 'IDMA', 'EFMA', 'GMRA', 'GMSL', 'BIAG', 'OTHR'. 4 alphabetical characters. "]
        if IsVRAllowedForActionType(actionType)
        then (["ISDA", "CDEA", "EUMA", "FPCA", "FMAT", "DERV", "CMOP", "CHMA", "IDMA", "EFMA", "GMRA", "GMSL", "BIAG", "OTHR"] any = masterAgreementType)

    condition EMIR_VR_2035_01: <"Other Master Agreement Type Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "35" validationRule   "Transaction"
    provision "If field 2.34 is populated with 'OTHR', this field shall be populated and shall contain up to 50 alphanumerical characters. Otherwise, it shall be left blank. "]
        if IsVRAllowedForActionType(actionType)
        then if masterAgreementType = "OTHR"
            then otherMasterAgreementType exists
            else otherMasterAgreementType is absent

    condition EMIR_VR_2036_01: <"Master Agreement Version Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "36" validationRule   "Transaction"
    provision "If field 2.34 is populated with a value different from 'BIAG' or 'OTHR', this field shall be populated. "]
        if IsVRAllowedForActionType(actionType)
        then if masterAgreementType <> "BIAG" and masterAgreementType <> "OTHR"
            then masterAgreementVersion exists
            else masterAgreementVersion is absent

    condition EMIR_VR_2036_02: <"Master Agreement Version Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "36" validationRule "Transaction"
    provision "When populated, it shall be reported in a common input format: YYYY. First two digits shall be 19 or 20."]
        if IsVRAllowedForActionType(actionType)
        then if masterAgreementVersion exists
            then masterAgreementVersion >= 1900 and masterAgreementVersion <= 2099

    condition EMIR_VR_2037_01: <"Intragroup Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "37" validationRule   "Transaction"
    provision "If field 2.41 is not populated with a MIC code of a trading venue that was a regulated market or a third-country market considered as equivalent to a regulated market at the time of the conclusion of the derivative, this field shall be populated and shall contain only one of the following values: 'TRUE' or 'FALSE'. Otherwise, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if (venueOfExecution exists
                    and GetOrFetchMicData(
                            nonReportable -> enrichment -> micData,
                            venueOfExecution
                        )
                        extract
                            (marketCategory = MicMarketCategoryEnum -> RMKT
                                or IsESMAThirdCountryEquivalentMarket(mic) = True)) = False
            then intragroup exists
            else intragroup is absent

    condition EMIR_VR_2038_01: <"PTRR Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "38" validationRule "Transaction"
    provision "This field shall contain only one of the following values: 'TRUE' or 'FALSE'."]
        if IsVRAllowedForActionType(actionType)
        then [True, False] any = ptrr

    condition EMIR_VR_2038_02: <"PTRR Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "38" validationRule "Transaction"
    provision " If field 2.154 is populated with 'PSTN', this field shall be left blank. "]
        if IsVRAllowedForActionType(actionType)
        then if level = "PSTN" then ptrr is absent

    condition EMIR_VR_2039_01: <"Type of PTRR technique Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "39" validationRule "Transaction"
      provision "If: (i) field 2.38 is populated with 'TRUE', or (ii)  if field 2.151 is populated with 'TERM' or 'MODI' and field 2.152 is populated with 'COMP', this field shall be populated and shall contain only one of the following values: 'PWOS', 'PWAS', 'PRBM', or 'OTHR'."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then if ptrr = True
                    or ([ActionTypeEnum -> TERM, ActionTypeEnum -> MODI] any = actionType and eventType = "COMP")
            then ["PWOS", "PWAS", "PRBM", "OTHR"] any = typeOfPTRRTechnique

    condition EMIR_VR_2040_01: <"PTRR service provider Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "40" validationRule "Transaction"
      provision "If field 2.39 is populated with 'PWAS', 'PRBM' or 'OTHR', this field shall be populated with a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then if ["PWAS", "PRBM", "OTHR"] any = typeOfPTRRTechnique
            then GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    ptrrServiceProvider
                ) -> lei exists

    condition EMIR_VR_2040_02: <"PTRR service provider Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "40" validationRule "Transaction"
      provision "The status of the LEI shall be 'Issued', 'Lapsed',  'Pending transfer' or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then if ptrrServiceProvider exists
            then LeiRegistrationStatusIsValid(
                        nonReportable -> enrichment -> leiData,
                        ptrrServiceProvider,
                        eventDate,
                        reportingTimestamp -> date
                    )

    condition EMIR_VR_2040_03: <"PTRR service provider Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "40" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch"]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then if GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    ptrrServiceProvider
                )
                exists
            then GetOrFetchLeiData(
                        nonReportable -> enrichment -> leiData,
                        ptrrServiceProvider
                    ) -> entityCategory <> LeiCategoryEnum -> Branch

    condition EMIR_VR_2040_04: <"PTRR service provider Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "40" validationRule "Transaction"
      provision "If field 2.39 is populated with 'PWOS', then this field must be left blank."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then if typeOfPTRRTechnique = "PWOS"
            then ptrrServiceProvider is absent

    condition EMIR_VR_2041_01: <"Venue of Execution Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "41" validationRule "Transaction"
    provision "This field shall be populated with a  MIC code included in the list maintained and updated by ISO and published at: http://www.iso15022.org/MIC/homepageMIC.htm column 'MIC' in the worksheet 'ISO10383_MIC_NewFormat'."]
        if IsVRAllowedForActionType(actionType)
        then GetOrFetchMicData(nonReportable -> enrichment -> micData, venueOfExecution) -> mic exists

    condition EMIR_VR_2041_02: <"Venue of Execution Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "41" validationRule "Transaction"
    provision "Code 'BILT' is not allowed."]
        if IsVRAllowedForActionType(actionType)
        then if venueOfExecution exists
            then venueOfExecution <> 'BILT'

// Section 2c - Details on the transaction
    condition EMIR_VR_2042_01: <"Execution timestamp">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "42" validationRule "Transaction"
      provision "This field shall be populated in a common input format: YYYY-MM-DDThh:mm:ssZ."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2042_02: <"Execution timestamp">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "42" validationRule "Transaction"
    provision "The execution timestamp shall be equal or later than 1950-01-01."]
        if IsVRAllowedForActionType(actionType)
        then CompareDateTo(executionTimestamp -> date, 1950, 1, 1) >= 0

    condition EMIR_VR_2042_03: <"Execution timestamp">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "42" validationRule "Transaction"
    provision "The execution timestamp cannot be changed in a report with action type 'MODI'."]
        [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
            provision "Not modelled. The condition cannot be executed in a stateless environment."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2043_01: <"Effective date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "43" validationRule "Transaction"
      provision "This field shall be populated in a common input format: YYYY-MM-DD."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2043_02: <"Effective date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "43" validationRule "Transaction"
    provision "The effective date shall be equal or later than 1950-01-01."]
        if IsVRAllowedForActionType(actionType)
        then CompareDateTo(effectiveDate, 1950, 1, 1) >= 0

    condition EMIR_VR_2044_01: <"Expiration date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "44" validationRule "Transaction"
      provision "If field 2.10 is populated with a value different from 'CFDS', this field shall be populated in a common input format: YYYY-MM-DD."]
        if IsVRAllowedForActionType(actionType)
        then if (contractType <> "CFDS") then expirationDate exists

    condition EMIR_VR_2044_02: <"Expiration date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "44" validationRule "Transaction"
      provision "The value of this field shall be greater than or equal to  the value of the field 2.42 and 2.43."]
        if IsVRAllowedForActionType(actionType)
        then if expirationDate exists
            then (expirationDate >= (executionTimestamp -> date) and expirationDate >= effectiveDate)

    condition EMIR_VR_2044_03: <"Expiration date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "44" validationRule "Transaction"
      provision "The expiration date should be equal or later than 2014-02-12."]
        if IsVRAllowedForActionType(actionType)
        then CompareDateTo(expirationDate, 2014, 2, 12) >= 0

    condition EMIR_VR_2044_04: <"Expiration date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "44" validationRule "Transaction"
      provision "For action type 'REVI' and where the previous report was not 'EROR'; the expiration date shall be greater than or equal to the value of the date part of the field 1.1 Reporting timestamp."]
        [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
            provision "Not modelled. The condition cannot be executed in a stateless environment."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2044_05: <"Expiration date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "44" validationRule "Transaction"
    provision "If field 2.10 is populated with a value 'CFDS', this field can be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if (contractType = "CFDS") then expirationDate is absent

//Section 2g - Details on the transaction
    condition EMIR_VR_2045_01: <"Early termination date Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "When populated, this field shall be reported in a common input format: YYYY-MM-DD."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then True

    condition EMIR_VR_2045_02: <"Early termination date Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "The value of this field shall be greater than or equal to the value of the date part of the field 2.42 reported for the given UTI."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if earlyTerminationDate exists
            then earlyTerminationDate >= executionTimestamp -> date

    condition EMIR_VR_2045_03: <"Early termination date Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "If field 2.44 was previously reported for the given UTI, , the value of this field shall be less than the value of the field 2.44."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if earlyTerminationDate exists
            then earlyTerminationDate < expirationDate

    condition EMIR_VR_2045_04: <"Early termination date Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "The early termination date should be equal or later than 2014-02-12."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if earlyTerminationDate exists
            then CompareDateTo(earlyTerminationDate, 2014, 2, 12) >= 0

    condition EMIR_VR_2045_05: <"Early termination date Condition 5">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "The value of this field shall be earlier than or equal to the value of the date part of the field 1.1."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if earlyTerminationDate exists
            then earlyTerminationDate <= reportingTimestamp -> date

    condition EMIR_VR_2045_06: <"Early termination date Condition 6">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "For a given derivative this field can be reported for a first time only with the action type 'TERM'."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then True

    condition EMIR_VR_2045_07: <"Early termination date Condition 7">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "If the derivative was terminated (and not revived), this field must be populated in the subsequent reports with action type 'CORR'."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then True

    condition EMIR_VR_2045_08: <"Early termination date Condition 8">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
        provision "For action type 'REVI' and where the previous report was not 'EROR';  the early termination date shall be left blank."]
    [regulatoryReference ISDA PeerReviewGroup date "20231020"
        provision "Not modelled. The above condition cannot be executed in a stateless environment."]
        True

    condition EMIR_VR_2046_01: <"Final Contractual Settlement Date Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "46" validationRule "Transaction"
    provision "If field 2.10 is populated with a value different from 'CFDS', this field shall be populated in a common input format: YYYY-MM-DD"]
        if IsVRAllowedForActionType(actionType)
        then if contractType <> "CFDS"
            then finalContractualSettlementDate exists

    condition EMIR_VR_2046_02: <"Final Contractual Settlement Date Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "46" validationRule "Transaction"
    provision "The value of this field shall be greater than or equal to the value of the date part of the field 2.42"]
        if IsVRAllowedForActionType(actionType)
        then if finalContractualSettlementDate exists
            then finalContractualSettlementDate >= (executionTimestamp -> date)

    condition EMIR_VR_2046_03: <"Final Contractual Settlement Date Validation Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "46" validationRule "Transaction"
    provision "The settlement date should be equal or later than 2014-02-12"]
        if IsVRAllowedForActionType(actionType)
        then if finalContractualSettlementDate exists
            then CompareDateTo(finalContractualSettlementDate, 2014, 02, 12) >= 0

    condition EMIR_VR_2046_04: <"Final Contractual Settlement Date Validation Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "46" validationRule "Transaction"
    provision "If field 2.10  is populated with a value 'CFDS', this field can be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if contractType = "CFDS"
            then finalContractualSettlementDate is absent

    condition EMIR_VR_2047_01: <"Delivery Type Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "47" validationRule "Transaction"
    provision "This field shall contain only one of the following values: 'CASH', 'PHYS' or 'OPTL'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then (["CASH", "PHYS", "OPTL"] any = deliveryType)

// Section 2g - Details on the transaction
    condition EMIR_VR_2048_01: <"Price Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "48" validationRule "Transaction"
        provision "This field shall be populated: - If field 2.10 is populated with 'FORW' and field 2.11 is populated with 'COMM'; or - If field 2.10 is populated with 'FORW' or 'SWAP' and field 2.11 is populated with 'EQUI'; or - If field 2.10 is populated with 'CFDS' or 'FUTR'. Otherwise this field is optional"]
        if IsVRAllowedForActionType(actionType)
        then if ("FORW" = contractType and assetClass = "COMM")
                    or (["FORW", "SWAP"] any = contractType and assetClass = "EQUI")
                    or ["CFDS", "FUTR"] any = contractType
            then price exists

    condition EMIR_VR_2048_02: <"Price Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "48" validationRule "Transaction"
    provision "When  populated, this field shall contain: up to 18 numeric characters including up to 13 decimals if price is expressed as monetary value, the decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, is not counted as a numeric character. A default value  '999999999999999999' (for monetary values) or '99999999999' (for percentage values) is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if price -> priceNotation = PriceNotationEnum -> Monetary
            then price -> priceMonetary exists

    condition EMIR_VR_2048_03: <"Price Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "48" validationRule "Transaction"
    provision "When  populated, this field shall contain: up to 11 numeric characters including up to 10 decimals if price is expressed as percentage. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, is not counted as a numeric character. A default value  '999999999999999999' (for monetary values) or '99999999999' (for percentage values) is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if price -> priceNotation = PriceNotationEnum -> Percentage
            then price -> pricePercentage exists

    condition EMIR_VR_2049_01: <"Price Currency Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "49" validationRule "Transaction"
    provision "If field 2.48 is populated with a monetary value then the field 2.49 shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if price -> priceMonetary exists
            then price -> priceCurrency exists

    condition EMIR_VR_2049_02: <"Price Currency Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "49" validationRule "Transaction"
    provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType)
        then if price -> priceCurrency exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> price -> priceCurrency

    condition EMIR_VR_2049_03: <"Price Currency Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "49" validationRule "Transaction"
    provision "If field 2.48 is populated with a percentage or is left blank, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if price -> pricePercentage exists or price is absent
            then price -> priceCurrency is absent

    condition EMIR_VR_2050_01: <"Unadjusted effective date of the price Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "50" validationRule "Transaction"
      provision "If field 2.52 is populated, this field shall be populated  in a common input format: YYYY-MM-DD. Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (priceSchedule
            extract
                (if priceMonetary exists or pricePercentage exists
                then effectiveDate exists
                else effectiveDate is absent)
            then all = True)

    condition EMIR_VR_2051_01: <"Unadjusted end date of the price Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "51" validationRule "Transaction"
    provision "When populated, this field  shall be reported in a common input format: YYYY-MM-DD."]
        if IsVRAllowedForActionType(actionType)
        then if priceSchedule -> endDate exists then True

    condition EMIR_VR_2051_02: <"Unadjusted end date of the price Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "51" validationRule "Transaction"
    provision "If field 2.52 is not populated , this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (priceSchedule
            extract
                (if priceMonetary is absent and pricePercentage is absent then endDate is absent)
            then all = True)

    condition EMIR_VR_2052_01: <"Price in effect between the unadjusted effective and end date Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "52" validationRule "Transaction"
    provision "When populated, this field shall contain up to 18 numeric characters including up to 13 decimals if price is expressed as monetary value"]
        if IsVRAllowedForActionType(actionType)
        then if priceSchedule -> priceMonetary exists then True

    condition EMIR_VR_2052_02: <"Price in effect between the unadjusted effective and end date Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "52" validationRule "Transaction"
      provision "When populated, this field shall contain: up to 11 numeric characters including up to 10 decimals if price is expressed as percentage. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, is not counted as a numeric character. A default value  '999999999999999999' (for monetary values) or '99999999999' (for percentage values) is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if priceSchedule -> pricePercentage exists then True

    condition EMIR_VR_2053_01: <"Package Transaction Price Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "53" validationRule "Transaction"
      provision "If 2.6 Package identifier is populated and field 2.111 Package transaction spread is blank, this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if packageIdentifier exists and packageTransactionSpread is absent
            then packageTransactionPrice exists

    condition EMIR_VR_2053_02: <"Package Transaction Price Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "53" validationRule "Transaction"
      provision "When populated this field shall contain: up to 18 numeric characters including up to 13 decimals if price is expressed as monetary value"]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionPrice -> packageTransactionPriceMonetary exists
            then True

    condition EMIR_VR_2053_03: <"Package Transaction Price Validation Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "53" validationRule "Transaction"
      provision "When populated this field shall contain: up to 11 numeric characters including up to 10 decimals if price is expressed as percentage The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, is not counted as a numeric character."]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionPrice -> packageTransactionPricePercentage exists
            then True

    condition EMIR_VR_2053_04: <"Package Transaction Price Validation Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "53" validationRule "Transaction"
      provision "If field 2.6 Package identifier is not populated or if field 2.111 Package transaction spread is populated, this field shall be left blank. A default value  '999999999999999999' (for monetary values) or '99999999999' (for percentage values) is accepted"]
        if IsVRAllowedForActionType(actionType)
        then if packageIdentifier is absent or packageTransactionSpread exists
            then packageTransactionPrice is absent

    condition EMIR_VR_2054_01: <"Package Transaction Price Currency Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "54" validationRule "Transaction"
      provision "If field 2.53 is populated with a monetary value then the field 2.54 shall be populated with ISO 4217 Currency Code (official list only),  3 alphabetical characters. "]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionPrice -> packageTransactionPriceMonetary exists
            then packageTransactionPrice -> packageTransactionPriceCurrency exists

    condition EMIR_VR_2054_02: <"Package Transaction Price Currency Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "54" validationRule "Transaction"
      provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX. "]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionPrice -> packageTransactionPriceCurrency exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> packageTransactionPrice -> packageTransactionPriceCurrency

    condition EMIR_VR_2054_03: <"Package Transaction Price Currency Validation Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "54" validationRule "Transaction"
      provision "If field 2.53 is populated with a percentage or is left blank, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionPrice -> packageTransactionPricePercentage exists
                    or packageTransactionPrice is absent
            then packageTransactionPrice -> packageTransactionPriceCurrency is absent

    condition EMIR_VR_2055_01: <"Notional amount of leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "55" validationRule "Notional amount of leg 1"
        provision "This field shall contain any value greater than or equal to zero up to 25 numerical characters including up to 5 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a dot. A default value '9999999999999999999999999'  is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if notionalLeg1 >= 0 then True else False

    condition EMIR_VR_2056_01: <"Notional currency 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "56" validationRule "Notional currency 1"
        provision "This field shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
        if IsVRAllowedForActionType(actionType) then True

    condition EMIR_VR_2056_02: <"Notional currency 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "56" validationRule "Notional currency 1"
        provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType)
        then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> notionalCurrency1

    condition EMIR_VR_2057_01: <"Effective date of the notional amount of leg 1 Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "57" validationRule "Transaction"
         provision "If field 2.59 is populated, this field shall be populated in a common input format: YYYY-MM-DD. Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (notionalAmountScheduleLeg1
            extract
                (if amount exists
                then effectiveDate exists
                else effectiveDate is absent)
            then all = True)

    // condition EMIR_VR_2058_01:<"End date of the notional amount of leg 1">
    // [docReference ESMA EMIR ValidationRules table "2" dataElement "58" validationRule "Transaction"
    // provision "When populated this field shall be reported in a common input format: YYYY-MM-DD."]
    // //ToDo: format validation
    // True
    // condition EMIR_VR_2058_02:<"End date of the notional amount of leg 1">
    // [docReference ESMA EMIR ValidationRules table "2" dataElement "58" validationRule "Transaction"
    // provision "If field 2.59 is not populated this field shall be left blank."]
    // if notionalAmountScheduleLeg1 -> amount exists then notionalAmountScheduleLeg1 -> endDate is absent
    condition EMIR_VR_2059_01: <"Notional amount in effect on associated effective date of leg 1 Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "59" validationRule "Transaction"
      provision "When populated, this field shall contain any value greater than or equal to zero up to 25 numerical characters including up to 5 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a dot. A default value '9999999999999999999999999' is accepted."]
        if IsVRAllowedForActionType(actionType)
        then (notionalAmountScheduleLeg1
            extract (if amount exists then amount >= 0 else True)
            then all = True)

    condition EMIR_VR_2060_01: <"Total notional quantity leg 1 Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "60" validationRule "Transaction"
        provision "If field 2.11 (Asset class) is populated with 'EQUI' or 'COMM', this field shall be populated and shall contain  any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. A default value '9999999999999999999999999' is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if (assetClass = 'EQUI' or assetClass = 'COMM')
            then totalNotionalQuantityLeg1 >= 0

    condition EMIR_VR_2061_01: <"Effective date of the notional quantity of leg 1 Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "61" validationRule "Transaction"
    provision "If field 2.63 is populated, this field shall be populated  in a common input format: YYYY-MM-DD. Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (notionalQuantityScheduleLeg1
            extract
                (if value exists
                then effectiveDate exists
                else effectiveDate is absent)
            then all = True)

    condition EMIR_VR_2062_01: <"End date of the notional quantity of leg 1 Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "62" validationRule "Transaction"
    provision "When populated this field shall be reported in a common input format: YYYY-MM-DD."]
        if IsVRAllowedForActionType(actionType)
        then if notionalQuantityScheduleLeg1 -> endDate exists
            then True

    condition EMIR_VR_2062_02: <"End date of the notional quantity of leg 1 Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "62" validationRule "Transaction"
    provision "If field 2.63 is not populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (notionalQuantityScheduleLeg1
            extract (if value is absent then endDate is absent else True)
            then all = True)

    condition EMIR_VR_2063_01: <"Notional quantity leg 1 Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "63" validationRule "Transaction"
    provision "When populated ,this field shall contain any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. A default value '9999999999999999999999999'  is accepted."]
        if IsVRAllowedForActionType(actionType)
        then (notionalQuantityScheduleLeg1
            extract (if value exists then value >= 0 else True)
            then all = True)

    condition EMIR_VR_2064_01: <"Notional amount of leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "64" validationRule "Notional amount of leg 2"
    provision "When populated, this field shall contain any value greater than or equal to zero up to 25 numerical characters including up to 5 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a  dot. A default value '9999999999999999999999999'  is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if notionalLeg2 exists
            then if notionalLeg2 >= 0 then True else False

    condition EMIR_VR_2065_01: <"Notional currency 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "65" validationRule "Notional currency 2"
    provision "If field 2.64 is populated, this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters. Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if notionalLeg2 exists
            then True
            else notionalCurrency2 is absent

    condition EMIR_VR_2065_02: <"Notional currency 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "65" validationRule "Notional currency 2"
        provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX. Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if notionalCurrency2 exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> notionalCurrency2
            else notionalCurrency2 is absent

    condition EMIR_VR_2066_01: <"Effective date of the notional amount of leg 2 Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "66" validationRule "Transaction"
    provision "If field 2.68 is populated, this field shall be populated in a common input format: YYYY-MM-DD. Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (notionalAmountScheduleLeg2
            extract
                (if amount exists
                then effectiveDate exists
                else effectiveDate is absent)
            then all = True)

// condition EMIR_VR_2067_01:<"End date of the notional amount of leg 2">
//     [docReference ESMA EMIR ValidationRules table "2" dataElement "67" validationRule "Transaction"
//     provision "When populated, this field shall be reported in a common input format: YYYY-MM-DD."]
//     if IsVRAllowedForActionType(actionType) then
//         if notionalAmountScheduleLeg2 -> endDate exists
//         then True
// condition EMIR_VR_2067_02:<"End date of the notional amount of leg 2">
//     [docReference ESMA EMIR ValidationRules table "2" dataElement "67" validationRule "Transaction"
//     provision "If field 2.68 is not populated , this field shall be left blank."]
//     if IsVRAllowedForActionType(actionType) then (
//         notionalAmountScheduleLeg2
//         extract
//         (if amount is absent
//         then endDate is absent) then all = True )
    condition EMIR_VR_2068_01: <"Notional amount in effect on associated effective date of leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "68" validationRule "Transaction"
      provision "When populated, this field shall contain any value greater than or equal to zero up to 25 numerical characters including up to 5 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a dot. A default value '9999999999999999999999999' is accepted."]
        if IsVRAllowedForActionType(actionType)
        then (notionalAmountScheduleLeg2
            extract (if amount exists then amount >= 0 else True)
            then all = True)

    condition EMIR_VR_2069_01: <"Total notional quantity leg 2 Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "69" validationRule "Transaction"
    provision "When populated, this field shall contain any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. A default value '9999999999999999999999999'  is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if totalNotionalQuantityLeg2 exists
            then totalNotionalQuantityLeg2 >= 0

    condition EMIR_VR_2070_01: <"Effective date of the notional quantity of leg 2 Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "70" validationRule "Transaction"
    provision "If field 2.72 is populated, this field shall be populated in a common input format: YYYY-MM-DD. Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (notionalQuantityScheduleLeg2
            extract
                (if value exists
                then effectiveDate exists
                else effectiveDate is absent)
            then all = True)

    condition EMIR_VR_2071_01: <"End date of the notional quantity of leg 2 Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "71" validationRule "Transaction"
    provision "When populated this field shall be reported in a common input format: YYYY-MM-DD."]
        if IsVRAllowedForActionType(actionType)
        then if notionalQuantityScheduleLeg2 -> endDate exists
            then True

    condition EMIR_VR_2071_02: <"End date of the notional quantity of leg 2 Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "71" validationRule "Transaction"
    provision "If field 2.72 is not populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (notionalQuantityScheduleLeg2
            extract (if value is absent then endDate is absent else True)
            then all = True)

    condition EMIR_VR_2072_01: <"Notional quantity leg 2 Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "69" validationRule "Transaction"
    provision "When populated ,this field shall contain any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. A default value '9999999999999999999999999'  is accepted."]
        if IsVRAllowedForActionType(actionType)
        then (notionalQuantityScheduleLeg2
            extract (if value exists then value >= 0 else True)
            then all = True)

    condition EMIR_VR_2073_01: <"Other payment type">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "73" validationRule "Transaction"
      provision "When populated, this field shall contain only one of the following values: 'UFRO', 'UWIN', or 'PEXH'. 4 alphabetic characters."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if paymentType exists
                then ["UFRO", "UWIN", "PEXH"] contains paymentType
                else True)
            then all = True)

    condition EMIR_VR_2074_01: <"Other payment amount">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "74" validationRule "Transaction"
      provision "If field 2.73 is populated, this field shall be populated and shall contain any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. Otherwise it shall be left blank"]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if paymentType exists
                then amount >= 0
                else amount is absent)
            then all = True)

    condition EMIR_VR_2075_01: <"Other payment currency">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "75" validationRule "Transaction"
      provision "If field 2.73 is populated, this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters. Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if paymentType exists
                then currency exists
                else currency is absent)
            then all = True)

    condition EMIR_VR_2075_02: <"Other payment currency">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "75" validationRule "Transaction"
      provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                ([ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> item -> currency)
            then all = True)

    condition EMIR_VR_2076_01: <"Other payment date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "76" validationRule "Transaction"
      provision "If field 2.73 is populated, this field shall be populated in a common input format: YYYY-MM-DD. Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if paymentType exists and date exists
                then True
                else date is absent)
            then all = True)

    condition EMIR_VR_2077_01: <"Other payment payer">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "77" validationRule "Transaction"
      provision "If field 2.73 is populated, this field shall be populated with a valid LEI included in the GLEIF database maintained by the Central Operating Unit or up to 72 alphanumeric character code for natural persons who are acting as private individuals (not business entities). Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if paymentType exists
                then if payerFormat = PartyIdentifierFormatEnum -> Lei
                    then GetOrFetchLeiData(empty, payer) -> lei exists
                    else payer exists
                else payer is absent)
            then all = True)

    condition EMIR_VR_2077_02: <"Other payment payer">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "77" validationRule "Transaction"
      provision "The status of the LEI shall be 'Issued', 'Lapsed',  'Pending transfer' or 'Pending archival'. Up to 72 alphanumeric characters code. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if payerFormat = PartyIdentifierFormatEnum -> Lei
                then if GetOrFetchLeiData(empty, payer) exists
                    then [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> Lapsed, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival] any = GetOrFetchLeiData(
                                empty,
                                payer
                            ) -> registrationStatus
                    else True)
            then all = True)

    condition EMIR_VR_2077_03: <"Other payment payer">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "77" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if payerFormat = PartyIdentifierFormatEnum -> Lei
                then if GetOrFetchLeiData(empty, payer) exists
                    then GetOrFetchLeiData(empty, payer) -> entityCategory <> LeiCategoryEnum -> Branch
                    else True)
            then all = True)

    condition EMIR_VR_2077_04: <"Other payment payer">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "77" validationRule "Transaction"
      provision "The identifier provided in this field should be equal to the identifier reported in the field  1.4 or 1.9."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract payment [
                if payment -> payer exists
                then payment -> payer = counterparty1 or payment -> payer = counterparty2
                else payment -> payer is absent
            ]
            then all = True)

    condition EMIR_VR_2077_05: <"Other payment payer">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "77" validationRule "Transaction"
      provision "The identifier provided in this field should be different from the identifier reported in the field 2.78 unless it is equal to the identifier provided in the field 2.33."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract payment [
                (payment -> payer <> payment -> receiver)
                    or (payment -> payer = payment -> receiver and payment -> payer = centralCounterparty)
            ]
            then all = True)

    condition EMIR_VR_2078_01: <"Other payment receiver">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "78" validationRule "Transaction"
      provision "If field 2.73 is populated, this field shall be populated with a valid LEI included in the GLEIF database maintained by the Central Operating Unit or up to 72 alphanumeric character code for natural persons who are acting as private individuals (not business entities). Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if paymentType exists
                then if receiverFormat = PartyIdentifierFormatEnum -> Lei
                    then GetOrFetchLeiData(empty, receiver) -> lei exists
                    else receiver exists
                else receiver is absent)
            then all = True)

    condition EMIR_VR_2078_02: <"Other payment receiver">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "78" validationRule "Transaction"
      provision "The status of the LEI shall be 'Issued', 'Lapsed',  'Pending transfer' or 'Pending archival'. Up to 72 alphanumeric characters code. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if receiverFormat = PartyIdentifierFormatEnum -> Lei
                then if GetOrFetchLeiData(empty, receiver) exists
                    then [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> Lapsed, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival] any = GetOrFetchLeiData(
                                empty,
                                receiver
                            ) -> registrationStatus
                    else True)
            then all = True)

    condition EMIR_VR_2078_03: <"Other payment receiver">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "78" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if receiverFormat = PartyIdentifierFormatEnum -> Lei
                then if GetOrFetchLeiData(empty, receiver) exists
                    then GetOrFetchLeiData(empty, receiver) -> entityCategory <> LeiCategoryEnum -> Branch
                    else True)
            then all = True)

    condition EMIR_VR_2078_04: <"Other payment receiver">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "78" validationRule "Transaction"
      provision "The identifier provided in this field should be equal to the identifier reported in the field  1.4 or 1.9."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract payment [
                (if payment -> receiver exists then payment -> receiver = counterparty1 or payment -> receiver = counterparty2 else payment -> receiver is absent)
            ]
            then all = True)

    condition EMIR_VR_2078_05: <"Other payment receiver">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "78" validationRule "Transaction"
      provision "The identifier provided in this field should be different from the identifier reported in the field 2.77 unless it is equal to the identifier provided in the field 2.33."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract payment [
                (payment -> receiver <> payment -> payer)
                    or (payment -> receiver = payment -> payer and payment -> receiver = centralCounterparty)
            ]
            then all = True)

// Section 2h - Interest Rates
    condition EMIR_VR_2079_01: <"Fixed rate of leg 1 or coupon condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "79" validationRule "Interest Rates"
      provision "If field 2.11 (Asset class) is populated with 'INTR', at least one of the following fields shall be populated: 2.13, 2.79, 2.85."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = 'INTR'
            then underlyingIdentificationType exists
                    or nameOfTheFloatingRateOfLeg1 exists
                    or fixedRateOfLeg1 exists

    condition EMIR_VR_2079_02: <"Fixed rate of leg 1 or coupon condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "79" validationRule "Interest Rates"
    provision "Only one of the fields 2.79 and 2.85 can be populated."]
        if IsVRAllowedForActionType(actionType)
        then optional choice fixedRateOfLeg1, nameOfTheFloatingRateOfLeg1

    condition EMIR_VR_2080_01: <"Fixed rate or coupon day count convention leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "80" validationRule "Transaction"
    provision "If field 2.79 is populated, then this field shall be populated and shall contain only one of the following values: 'A001', 'A002', 'A003', 'A004','A005', 'A006', 'A007', 'A008', 'A009', 'A010', 'A011', 'A012', 'A013', 'A014', 'A015', 'A016', 'A017', 'A018', 'A019', 'A020' or 'NARR'.  4 alphanumerical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if fixedRateOfLeg1 exists and fixedRateDayCountConventionLeg1 exists
            then True
            else fixedRateDayCountConventionLeg1 is absent

    condition EMIR_VR_2081_01: <"Fixed rate or coupon payment frequency period leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "81" validationRule "Transaction"
    provision "If field 2.79 is populated, this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK', 'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if fixedRateOfLeg1 exists
                    and [Frequency13Code__1 -> YEAR, Frequency13Code__1 -> MNTH, Frequency13Code__1 -> WEEK, Frequency13Code__1 -> DAIL, Frequency13Code__1 -> ADHO, Frequency13Code__1 -> EXPI] any = fixedRatePaymentFrequencyPeriodLeg1
            then True
            else fixedRatePaymentFrequencyPeriodLeg1 is absent

    condition EMIR_VR_2082_01: <"Fixed rate or coupon payment frequency period multiplier leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "82" validationRule "Transaction"
    provision "If field 2.81 is populated with 'EXPI',  'YEAR', 'MNTH', 'WEEK' or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if fixedRateOfLeg1 exists
            then if [Frequency13Code__1 -> YEAR, Frequency13Code__1 -> MNTH, Frequency13Code__1 -> WEEK, Frequency13Code__1 -> DAIL, Frequency13Code__1 -> EXPI] any = fixedRatePaymentFrequencyPeriodLeg1 and fixedRatePaymentFrequencyPeriodMultiplierLeg1 >= 0
                then True
                else False
            else fixedRatePaymentFrequencyPeriodMultiplierLeg1 is absent

    condition EMIR_VR_2083_01: <"Identifier of the floating rate of leg 1 - Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "83" validationRule "Transaction"
    provision "When populated, this field shall contain 12 alphanumerical characters and a check digit."]
        if IsVRAllowedForActionType(actionType)
        then if identifierOfFloatingRateOfLeg1 exists then True

    condition EMIR_VR_2083_02: <"Identifier of the floating rate of leg 1 - Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "83" validationRule "Transaction"
    provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.14 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "INTR" and underlyingIdentification exists
            then identifierOfFloatingRateOfLeg1 is absent

    condition EMIR_VR_2084_01: <"Indicator of the floating rate of leg 1 Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "84" validationRule "Transaction"
    provision "When populated, this field shall only contain one of the following values: 'ESTR', 'SONA', 'SOFR', 'EONA, 'EONS', 'EURI', 'EUUS', 'EUCH', 'GCFR', 'ISDA', 'LIBI', 'LIBO', 'MAAA', 'PFAN, 'TIBO', 'STBO', 'BBSW', 'JIBA', 'BUBO', 'CDOR', 'CIBO', 'MOSP', 'NIBO', 'PRBO', 'TLBO', 'WIBO, 'TREA', 'SWAP', 'FUSW', 'EFFR', 'OBFR', or 'CZNA'.  4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if indicatorOfTheFloatingRateOfLeg1 exists
            then ["ESTR", "SONA", "SOFR", "EONA", "EONS", "EURI", "EUUS", "EUCH", "GCFR", "ISDA", "LIBI", "LIBO", "MAAA", "PFAN", "TIBO", "STBO", "BBSW", "JIBA", "BUBO", "CDOR", "CIBO", "MOSP", "NIBO", "PRBO", "TLBO", "WIBO", "TREA", "SWAP", "FUSW", "EFFR", "OBFR", "CZNA"] any = indicatorOfTheFloatingRateOfLeg1

    condition EMIR_VR_2084_02: <"Indicator of the floating rate of leg 1 Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "84" validationRule "Transaction"
    provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.15 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "INTR" and indicatorOfTheUnderlyingIndex exists
            then indicatorOfTheFloatingRateOfLeg1 is absent

    condition EMIR_VR_2085_01: <"Name of the floating rate of leg 1 Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "85" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'INTR', at least one of the following fields shall be populated: 2.13, 2.79, 2.85."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "INTR"
            then underlyingIdentificationType exists
                    or fixedRateOfLeg1 exists
                    or nameOfTheFloatingRateOfLeg1 exists

    condition EMIR_VR_2085_02: <"Name of the floating rate of leg 1 Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "85" validationRule "Transaction"
    provision "When populated, this field shall contain up to 50 alphanumerical characters."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg1 exists then True

    condition EMIR_VR_2086_01: <"Floating rate day count convention of leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "86" validationRule "Transaction"
    provision " If field 2.85 is populated, then this field shall be populated and shall contain only one of the following values: 'A001', 'A002', 'A003', 'A004', 'A005', 'A006', 'A007', 'A008', 'A009', 'A010', 'A011', 'A012', 'A013', 'A014', 'A015', 'A016', 'A017',  'A018', 'A019', 'A020' or 'NARR'.  4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg1 exists
            then floatingRateDayCountConventionOfLeg1 exists
                    and floatingRateDayCountConventionOfLeg1 exists
            else floatingRateDayCountConventionOfLeg1 is absent

    condition EMIR_VR_2087_01: <"Floating rate payment frequency period of leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "87" validationRule "Transaction"
    provision "If field 2.85 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK', 'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg1 exists
            then floatingRatePaymentFrequencyPeriodOfLeg1 exists
                    and [Frequency13Code__1 -> YEAR, Frequency13Code__1 -> MNTH, Frequency13Code__1 -> WEEK, Frequency13Code__1 -> DAIL, Frequency13Code__1 -> EXPI, Frequency13Code__1 -> ADHO] any = floatingRatePaymentFrequencyPeriodOfLeg1
            else floatingRatePaymentFrequencyPeriodOfLeg1 is absent

    condition EMIR_VR_2088_01: <"Floating rate payment frequency period multiplier of leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "104" validationRule "Transaction"
    provision "If field 2.87 is populated with 'EXPI',  'YEAR', 'MNTH', 'WEEK' or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [Frequency13Code__1 -> YEAR, Frequency13Code__1 -> MNTH, Frequency13Code__1 -> WEEK, Frequency13Code__1 -> DAIL, Frequency13Code__1 -> EXPI] any = floatingRatePaymentFrequencyPeriodOfLeg1
            then floatingRatePaymentFrequencyPeriodMultiplierOfLeg1 exists and floatingRatePaymentFrequencyPeriodMultiplierOfLeg1 >= 0
            else floatingRatePaymentFrequencyPeriodMultiplierOfLeg1 is absent

    condition EMIR_VR_2089_01: <"Floating rate reference period of leg 1 - time period">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "89" validationRule "Transaction"
    provision "If field 2.85 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK' ,'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg1 exists
            then floatingRateReferencePeriodOfLeg1TimePeriod exists
                    and ["EXPI", "YEAR", "MNTH", "WEEK", "DAIL"] any = floatingRateReferencePeriodOfLeg1TimePeriod
            else floatingRateReferencePeriodOfLeg1TimePeriod is absent

    condition EMIR_VR_2090_01: <"Floating rate reference period of leg 1 - multiplier">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "90" validationRule "Transaction"
    provision "If field 2.89 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK'or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["EXPI", "YEAR", "MNTH", "WEEK", "DAIL"] any = floatingRateReferencePeriodOfLeg1TimePeriod
            then floatingRateReferencePeriodOfLeg1Multiplier exists and floatingRateReferencePeriodOfLeg1Multiplier < 1000 and floatingRateReferencePeriodOfLeg1Multiplier >= 0
            else floatingRateReferencePeriodOfLeg1Multiplier is absent

    condition EMIR_VR_2091_01: <"Floating rate reset frequency period of leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "91" validationRule "Transaction"
      provision "If field 2.85 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK' ,'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg1 exists
            then floatingRateResetFrequencyPeriodOfLeg1 exists
                    and ["YEAR", "MNTH", "WEEK", "DAIL", "ADHO", "EXPI"] any = floatingRateResetFrequencyPeriodOfLeg1
            else floatingRateResetFrequencyPeriodOfLeg1 is absent

    condition EMIR_VR_2092_01: <"Floating rate reset frequency multiplier of leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "92" validationRule "Transaction"
      provision "If field 2.91 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK' or 'DAIL' , then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank"]
        if IsVRAllowedForActionType(actionType)
        then if floatingRateResetFrequencyPeriodOfLeg1 exists
                    and ["YEAR", "MNTH", "WEEK", "DAIL", "EXPI"] any = floatingRateResetFrequencyPeriodOfLeg1
            then floatingRateResetFrequencyPeriodMultiplierLeg1 exists and floatingRateResetFrequencyPeriodMultiplierLeg1 >= 0 and floatingRateResetFrequencyPeriodMultiplierLeg1 < 1000
            else floatingRateResetFrequencyPeriodMultiplierLeg1 is absent

    condition EMIR_VR_2093_01: <"Spread of leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "93" validationRule "Transaction"
      provision "If field 2.15 or 2.85 is populated, then this field shall be populated and shall contain: up to 18 numeric characters including up to 13 decimals, if spread is expressed as monetary value. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if indicatorOfTheUnderlyingIndex exists or nameOfTheFloatingRateOfLeg1 exists
            then if spreadOfLeg1 -> spreadOfLeg1Notation = PriceNotationEnum -> Monetary
                then spreadOfLeg1 -> spreadOfLeg1Monetary exists

    condition EMIR_VR_2093_02: <"Spread of leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "93" validationRule "Transaction"
      provision "If field 2.15 or 2.85 is populated, then this field shall be populated and shall contain: up to 11 numeric characters including up to 10 decimals, if spread is expressed as percentage, the decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if indicatorOfTheUnderlyingIndex exists or nameOfTheFloatingRateOfLeg1 exists
            then if spreadOfLeg1 -> spreadOfLeg1Notation = PriceNotationEnum -> Percentage
                then spreadOfLeg1 -> spreadOfLeg1Percentage exists

    condition EMIR_VR_2093_03: <"Spread of leg 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "93" validationRule "Transaction"
      provision "If field 2.15 or 2.85 is populated, then this field shall be populated and shall contain: up to 5 numeric characters, if spread is expressed as basis points. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if (indicatorOfTheUnderlyingIndex exists or nameOfTheFloatingRateOfLeg1 exists)
            then if spreadOfLeg1 -> spreadOfLeg1Notation = PriceNotationEnum -> Basis
                then spreadOfLeg1 -> spreadOfLeg1Basis exists

    // TODO - Notation required for spread of leg to check if monetary
    // condition EMIR_VR_2094_01: <"Spread currency of leg 1 condition 1">
    // [docReference ESMA EMIR ValidationRules table "2" dataElement "94" validationRule "Interest Rates"
    // provision "If field 2.93 is populated with a monetary value, this field should be populated with ISO 4217 Currency Code (official list only), 3 alphabetical characters. [...] Otherwise the field shall be left blank."]
    // if spreadOfLeg1 exists then spreadCurrencyOfLeg1 exists else spreadCurrencyOfLeg1 is absent
    condition EMIR_VR_2094_02: <"Spread currency of leg 1 condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "94" validationRule "Interest Rates"
      provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType)
        then if spreadOfLeg1 -> spreadCurrencyOfLeg1 exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> spreadOfLeg1 -> spreadCurrencyOfLeg1

    condition EMIR_VR_2095_01: <"Fixed rate of leg 2 condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "95" validationRule "Interest Rates"
      provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.10 (Contract type) is populated with 'FRAS', 'SWAP' or 'SWPT', one of the following fields shall be populated: 2.95 or 2.101. The other field shall be left blank. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = 'INTR' and ["FRAS", "SWAP", "SWPT"] any = contractType
            then required choice fixedRateOfLeg2, nameOfTheFloatingRateOfLeg2
            else fixedRateOfLeg2 is absent

    condition EMIR_VR_2096_01: <"Fixed rate day count convention leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "96" validationRule "Transaction"
      provision "If field 2.95 is populated, then this field shall be populated and shall contain only one of the following values: 'A001', 'A002', 'A003', 'A004','A005', 'A006', 'A007', 'A008', 'A009', 'A010', 'A011', 'A012', 'A013', 'A014', 'A015', 'A016', 'A017', 'A018', 'A019', 'A020' or 'NARR'. 4 alphanumerical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if fixedRateOfLeg2 exists and fixedRateDayCountConventionLeg2 exists
            then True
            else fixedRateDayCountConventionLeg2 is absent

    condition EMIR_VR_2097_01: <"Fixed rate payment frequency period leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "97" validationRule "Transaction"
      provision "If field 2.95 is populated, this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK', 'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if fixedRateOfLeg2 exists
                    and [Frequency13Code__1 -> YEAR, Frequency13Code__1 -> MNTH, Frequency13Code__1 -> WEEK, Frequency13Code__1 -> DAIL, Frequency13Code__1 -> ADHO, Frequency13Code__1 -> EXPI] any = fixedRatePaymentFrequencyPeriodLeg2
            then True
            else fixedRatePaymentFrequencyPeriodLeg2 is absent

    condition EMIR_VR_2098_01: <"Fixed rate payment frequency period multiplier leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "98" validationRule "Transaction"
      provision "If field 2.97 is populated with 'EXPI',  'YEAR', 'MNTH', 'WEEK' or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if fixedRatePaymentFrequencyPeriodLeg2 exists
            then if [Frequency13Code__1 -> YEAR, Frequency13Code__1 -> MNTH, Frequency13Code__1 -> WEEK, Frequency13Code__1 -> DAIL, Frequency13Code__1 -> EXPI] any = fixedRatePaymentFrequencyPeriodLeg2 and fixedRatePaymentFrequencyPeriodMultiplierLeg2 >= 0
                then True
                else False
            else fixedRatePaymentFrequencyPeriodMultiplierLeg2 is absent

    condition EMIR_VR_2099_01: <"Identifier of the floating rate of leg 2 - Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "99" validationRule "Transaction"
      provision "When populated, this field shall contain 12 alphanumerical characters and a check digit."]
        if IsVRAllowedForActionType(actionType)
        then if identifierOfFloatingRateOfLeg2 exists then True

    condition EMIR_VR_2099_02: <"Identifier of the floating rate of leg 2 - Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "99" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.14 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "INTR" and underlyingIdentification exists
            then identifierOfFloatingRateOfLeg2 is absent

    condition EMIR_VR_2100_01: <"Indicator of the floating rate of leg 2 Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "100" validationRule "Transaction"
    provision "When populated, this field shall only contain one of the following values: 'ESTR', 'SONA', 'SOFR', 'EONA, 'EONS', 'EURI', 'EUUS', 'EUCH', 'GCFR', 'ISDA', 'LIBI', 'LIBO', 'MAAA', 'PFAN, 'TIBO', 'STBO', 'BBSW', 'JIBA', 'BUBO', 'CDOR', 'CIBO', 'MOSP', 'NIBO', 'PRBO', 'TLBO', 'WIBO, 'TREA', 'SWAP', 'FUSW', 'EFFR', 'OBFR', or 'CZNA'.  4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if indicatorOfTheFloatingRateOfLeg2 exists
            then ["ESTR", "SONA", "SOFR", "EONA", "EONS", "EURI", "EUUS", "EUCH", "GCFR", "ISDA", "LIBI", "LIBO", "MAAA", "PFAN", "TIBO", "STBO", "BBSW", "JIBA", "BUBO", "CDOR", "CIBO", "MOSP", "NIBO", "PRBO", "TLBO", "WIBO", "TREA", "SWAP", "FUSW", "EFFR", "OBFR", "CZNA"] any = indicatorOfTheFloatingRateOfLeg2

    condition EMIR_VR_2100_02: <"Indicator of the floating rate of leg 2 Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "100" validationRule "Transaction"
    provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.15 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "INTR" and indicatorOfTheUnderlyingIndex exists
            then indicatorOfTheFloatingRateOfLeg2 is absent

    condition EMIR_VR_2101_01: <"Name of the floating rate of leg 2 Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "101" validationRule "Transaction"
    provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.10 (Contract type) is populated with 'FRAS', 'SWAP' or 'SWPT', one of the following fields shall be populated: 2.95 or 2.101. The other field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "INTR" and ["FRAS", "SWAP", "SWPT"] any = contractType
            then required choice fixedRateOfLeg2, nameOfTheFloatingRateOfLeg2

    condition EMIR_VR_2101_02: <"Name of the floating rate of leg 2 Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "101" validationRule "Transaction"
    provision "When populated, this field shall contain up to 50 alphanumerical characters."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg2 exists then True

    condition EMIR_VR_2102_01: <"Floating rate day count convention of leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "102" validationRule "Transaction"
    provision " If field 2.101 is populated, then this field shall be populated and shall contain only one of the following values: 'A001', 'A002', 'A003', 'A004', 'A005', 'A006', 'A007', 'A008', 'A009', 'A010', 'A011', 'A012', 'A013', 'A014', 'A015', 'A016', 'A017',  'A018', 'A019', 'A020' or 'NARR'.  4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg2 exists
            then floatingRateDayCountConventionOfLeg2 exists
                    and floatingRateDayCountConventionOfLeg2 exists
            else floatingRateDayCountConventionOfLeg2 is absent

    condition EMIR_VR_2103_01: <"Floating rate payment frequency period of leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "103" validationRule "Transaction"
    provision "If field 2.101 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK', 'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg2 exists
            then floatingRatePaymentFrequencyPeriodOfLeg2 exists
                    and [Frequency13Code__1 -> YEAR, Frequency13Code__1 -> MNTH, Frequency13Code__1 -> WEEK, Frequency13Code__1 -> DAIL, Frequency13Code__1 -> ADHO, Frequency13Code__1 -> EXPI] any = floatingRatePaymentFrequencyPeriodOfLeg2
            else floatingRatePaymentFrequencyPeriodOfLeg2 is absent

    condition EMIR_VR_2104_01: <"Floating rate payment frequency period multiplier of leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "104" validationRule "Transaction"
    provision "If field 2.103 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK' or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [Frequency13Code__1 -> YEAR, Frequency13Code__1 -> MNTH, Frequency13Code__1 -> WEEK, Frequency13Code__1 -> DAIL, Frequency13Code__1 -> EXPI] any = floatingRatePaymentFrequencyPeriodOfLeg2
            then floatingRatePaymentFrequencyPeriodMultiplierOfLeg2 exists and floatingRatePaymentFrequencyPeriodMultiplierOfLeg2 >= 0
            else floatingRatePaymentFrequencyPeriodMultiplierOfLeg2 is absent

    condition EMIR_VR_2105_01: <"Floating rate reference period of leg 2 - time period">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "105" validationRule "Transaction"
    provision "If field 2.101 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK' ,'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg2 exists
            then floatingRateReferencePeriodOfLeg2TimePeriod exists
                    and ["YEAR", "MNTH", "WEEK", "DAIL"] any = floatingRateReferencePeriodOfLeg2TimePeriod
            else floatingRateReferencePeriodOfLeg2TimePeriod is absent

    condition EMIR_VR_2106_01: <"Floating rate reference period of leg 2 - multiplier">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "106" validationRule "Transaction"
    provision "If field 2.105 is populated with 'YEAR', 'MNTH', 'WEEK'or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if floatingRateReferencePeriodOfLeg2TimePeriod exists
            then floatingRateReferencePeriodOfLeg2Multiplier exists and floatingRateReferencePeriodOfLeg2Multiplier >= 0 and floatingRateReferencePeriodOfLeg2Multiplier < 1000
            else floatingRateReferencePeriodOfLeg2Multiplier is absent

    condition EMIR_VR_2107_01: <"Floating rate reset frequency period of leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "107" validationRule "Transaction"
      provision "If field 2.101 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK' ,'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg2 exists
            then floatingRateResetFrequencyPeriodOfLeg2 exists
                    and ["YEAR", "MNTH", "WEEK", "DAIL", "ADHO", "EXPI"] any = floatingRateResetFrequencyPeriodOfLeg2
            else floatingRateResetFrequencyPeriodOfLeg2 is absent

    condition EMIR_VR_2108_01: <"Floating rate reset frequency multiplier of leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "108" validationRule "Transaction"
      provision "If field 2.107 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK' or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["YEAR", "MNTH", "WEEK", "DAIL", "EXPI"] any = floatingRateResetFrequencyPeriodOfLeg2
            then floatingRateResetFrequencyPeriodMultiplierLeg2 exists and 0 <= floatingRateResetFrequencyPeriodMultiplierLeg2 and floatingRateResetFrequencyPeriodMultiplierLeg2 < 1000
            else floatingRateResetFrequencyPeriodMultiplierLeg2 is absent

    condition EMIR_VR_2109_01: <"Spread of leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "109" validationRule "Transaction"
      provision "If field 2.101 is populated, then this field shall be populated and shall contain: up to 18 numeric characters including up to 13 decimals, if spread is expressed as monetary value, the decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg2 exists
            then if spreadOfLeg2 -> spreadOfLeg2Notation = PriceNotationEnum -> Monetary
                then spreadOfLeg2 -> spreadOfLeg2Monetary exists

    condition EMIR_VR_2109_02: <"Spread of leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "109" validationRule "Transaction"
      provision "If field 2.101 is populated, then this field shall be populated and shall contain: up to 11 numeric characters including up to 10 decimals, if spread is expressed as percentage, the decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg2 exists
            then if spreadOfLeg2 -> spreadOfLeg2Notation = PriceNotationEnum -> Percentage
                then spreadOfLeg2 -> spreadOfLeg2Percentage exists

    condition EMIR_VR_2109_03: <"Spread of leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "109" validationRule "Transaction"
      provision "If field 2.101 is populated, then this field shall be populated and shall contain: up to 5 numeric characters, if spread is expressed as basis points. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if nameOfTheFloatingRateOfLeg2 exists
            then if spreadOfLeg2 -> spreadOfLeg2Notation = PriceNotationEnum -> Basis
                then spreadOfLeg2 -> spreadOfLeg2Basis exists

    condition EMIR_VR_2110_01: <"Spread currency of leg 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "110" validationRule "Interest Rates"
      provision "If field 2.109 is populated with a monetary value, this field should be populated with ISO 4217 Currency Code (official list only), 3 alphabetical characters. The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if spreadOfLeg2 -> spreadOfLeg2Monetary exists
            then spreadOfLeg2 -> spreadCurrencyOfLeg2 exists
                    and [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> spreadOfLeg2 -> spreadCurrencyOfLeg2
            else spreadOfLeg2 -> spreadCurrencyOfLeg2 is absent

    condition EMIR_VR_2111_01: <"Package transaction spread">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "111" validationRule "Transaction"
      provision "When populated, this field shall contain: up to 18 numeric characters including up to 13 decimals, if spread is expressed as monetary value, the decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> EROR
        then if packageTransactionSpread exists
            then if packageTransactionSpread -> packageTransactionSpreadNotation = PriceNotationEnum -> Monetary
                then packageTransactionSpread -> packageTransactionSpreadMonetary exists

    condition EMIR_VR_2111_02: <"Package transaction spread">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "111" validationRule "Transaction"
      provision "When populated, this field shall contain: up to 11 numeric characters including up to 10 decimals, if spread is expressed as percentage, the decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> EROR
        then if packageTransactionSpread exists
            then if packageTransactionSpread -> packageTransactionSpreadNotation = PriceNotationEnum -> Percentage
                then packageTransactionSpread -> packageTransactionSpreadPercentage exists

    condition EMIR_VR_2111_03: <"Package transaction spread">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "111" validationRule "Transaction"
      provision "When populated, this field shall contain: up to 5 numeric characters, if spread is expressed as basis points. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> EROR
        then if packageTransactionSpread exists
            then if packageTransactionSpread -> packageTransactionSpreadNotation = PriceNotationEnum -> Basis
                then packageTransactionSpread -> packageTransactionSpreadBasis exists

    condition EMIR_VR_2111_04: <"Package transaction spread">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "111" validationRule "Transaction"
      provision "If field 2.6 Package identifier is not populated or if field 2.53 Package transaction price is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> EROR
        then if packageIdentifier is absent or packageTransactionPrice exists
            then packageTransactionSpread is absent

    condition EMIR_VR_2112_01: <"Package transaction spread currency">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "112" validationRule "Transaction"
      provision "If field 2.111 is populated with a monetary value, this field should be populated with ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionSpread exists
                    and packageTransactionSpread -> packageTransactionSpreadNotation = PriceNotationEnum -> Monetary
            then packageTransactionSpread -> packageTransactionSpreadCurrency exists
            else packageTransactionSpread -> packageTransactionSpreadCurrency is absent

    condition EMIR_VR_2112_02: <"Package transaction spread currency">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "112" validationRule "Transaction"
      provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionSpread -> packageTransactionSpreadCurrency exists
            then if [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> packageTransactionSpread -> packageTransactionSpreadCurrency
                then True
                else False

//Section 2i - Foreign Exchange
    condition EMIR_VR_2113_01: <"Exchange rate 1 Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "113" validationRule "Transaction"
    provision "If field 2.11 (Asset class) is populated with 'CURR' then at least one field out of fields 2.113 and 2.114 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CURR"
            then exchangeRate exists or forwardExchangeRate exists

    condition EMIR_VR_2113_02: <"Exchange Rate 1 Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "113" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CURR' and 2.10 (Contract type) is populated with 'FORW' then only one field out of fields 2.113 and 2.114 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CURR" and contractType = "FORW"
            then (exchangeRate exists and forwardExchangeRate is absent)
                    or (exchangeRate is absent and forwardExchangeRate exists)

    condition EMIR_VR_2113_03: <"Exchange Rate 1 Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "113" validationRule "Transaction"
      provision "When populated, this field shall contain any value greater than zero up to 18 numeric digits including up to 13 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a  dot."]
        if IsVRAllowedForActionType(actionType)
        then if exchangeRate exists then exchangeRate > 0.0

    condition EMIR_VR_2114_01: <"Forward Exchange Rate Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "114" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CURR' then at least one field out of fields 2.113 and 2.114 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CURR"
            then exchangeRate exists or forwardExchangeRate exists

    condition EMIR_VR_2114_02: <"Forward Exchange Rate Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "114" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CURR' and 2.10 (Contract type) is populated with 'FORW' then only one field out of fields 2.113 and 2.114 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CURR" and contractType = "FORW"
            then (exchangeRate exists and forwardExchangeRate is absent)
                    or (exchangeRate is absent and forwardExchangeRate exists)

    condition EMIR_VR_2114_03: <"Forward Exchange Rate Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "114" validationRule "Transaction"
      provision "When populated, this field shall contain any value greater than zero up to 18 numeric digits including up to 13 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a  dot."]
        if IsVRAllowedForActionType(actionType)
        then if forwardExchangeRate exists
            then forwardExchangeRate > 0.0

    condition EMIR_VR_2115_01: <"Exchange Rate Basis Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "115" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CURR', this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CURR" then exchangeRateBasis exists

    condition EMIR_VR_2115_02: <"Exchange Rate Basis Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "115" validationRule "Transaction"
      provision "When populated, this field shall contain 7 characters representing two ISO 4217 currency codes separated by / ."]
        if IsVRAllowedForActionType(actionType)
        then if exchangeRateBasis exists then True

// Section 2j - Commodities and emission allowances (General)
    condition EMIR_VR_2116_01: <"Base product">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "116" validationRule "Transaction"
        provision "If field 2.11 is populated with 'COMM', this field shall be populated and shall contain only  one of the following values: 'AGRI', 'NRGY',  'ENVR', 'FRGT', 'FRTL', 'INDP', 'METL', 'MCEX', 'PAPR', 'POLY' , 'INFL' 'OEST', 'OTHC' or 'OTHR'. Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "COMM"
            then baseProduct exists
                    and ["AGRI", "NRGY", "ENVR", "FRGT", "FRTL", "INDP", "METL", "MCEX", "PAPR", "POLY", "INFL", "OEST", "OTHC", "OTHR"] any = baseProduct
            else baseProduct is absent

    condition EMIR_VR_2117_01: <"Sub product">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'AGRI', this field shall be populated and shall contain only one of the following values: 'GROS', 'SOFT', 'POTA', 'OOLI', 'DIRY', 'FRST', 'SEAF', 'LSTK', 'GRIN' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "AGRI"
            then subProduct exists
                    and ["GROS", "SOFT", "POTA", "OOLI", "DIRY", "FRST", "SEAF", "LSTK", "GRIN", "OTHR"] any = subProduct

    condition EMIR_VR_2117_02: <"Sub product">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'NRGY', this field shall be populated and shall contain only one of the following values: 'ELEC', 'NGAS', 'OILP', 'COAL', 'INRG', 'RNNG', 'LGHT', 'DIST' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "NRGY"
            then subProduct exists
                    and ["ELEC", "NGAS", "OILP", "COAL", "INRG", "RNNG", "LGHT", "DIST", "OTHR"] any = subProduct

    condition EMIR_VR_2117_03: <"Sub product">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'ENVR', this field shall be populated and shall contain only one of the following values: 'EMIS', 'WTHR', 'CRBR' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "ENVR"
            then subProduct exists and ["EMIS", "WTHR", "CRBR", "OTHR"] any = subProduct

    condition EMIR_VR_2117_04: <"Sub product">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'FRGT', this field shall be populated and shall contain only one of the following values: 'WETF', 'DRYF', 'CSHP' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "FRGT"
            then subProduct exists and ["WETF", "DRYF", "CSHP", "OTHR"] any = subProduct

    condition EMIR_VR_2117_05: <"Sub product">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
        provision "If field 2.116 is populated with 'FRTL', this field shall be populated and shall contain only one of the following values: 'AMMO', 'DAPH', 'PTSH', SLPH', 'UREA', 'UAAN' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "FRTL"
            then subProduct exists
                    and ["AMMO", "DAPH", "PTSH", "SLPH", "UREA", "UAAN", "OTHR"] any = subProduct

    condition EMIR_VR_2117_06: <"Sub product">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'INDP', this field shall be populated and shall contain only one of the following values: 'CSTR' or 'MFTG'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "INDP"
            then subProduct exists and ["CSTR", "MFTG"] any = subProduct

    condition EMIR_VR_2117_07: <"Sub product">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
    provision "If field 2.116 is populated with 'METL', this field shall be populated and shall contain only one of the following values: 'NPRM' or 'PRME'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "METL"
            then subProduct exists and ["NPRM", "PRME"] any = subProduct

    condition EMIR_VR_2117_08: <"Sub product">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
    provision "If field 2.116 is populated with 'PAPR', this field shall be populated and shall contain only one of the following values: 'CBRD', 'NSPT', 'PULP', 'RCVP' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "PAPR"
            then subProduct exists
                    and ["CBRD", "NSPT", "PULP", "RCVP", "OTHR"] any = subProduct

    condition EMIR_VR_2117_09: <"Sub product">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
    provision "If field 2.116 is populated with 'POLY', this field shall be populated and shall contain only one of the following values: 'PLST' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "POLY"
            then subProduct exists and ["PLST", "OTHR"] any = subProduct

    condition EMIR_VR_2117_10: <"Sub product">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'MCEX', 'INFL', 'OEST', 'OTHC' or 'OTHR', or if field 2.116 is blank, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct exists
                    and ["MCEX", "INFL", "OEST", "OTHC", "OTHR"] any = baseProduct
            then subProduct is absent

    condition EMIR_VR_2118_01: <"Further sub-product Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'GROS', this field shall be populated and shall contain only one of the following values: 'FWHT', 'SOYB', 'CORN', 'RPSD', 'RICE' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "GROS"
            then ["FWHT", "SOYB", "CORN", "RPSD", "RICE", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_02: <"Further sub-product Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'SOFT', this field shall be populated and shall contain only one of the following values: 'CCOA', 'ROBU', 'WHSG', 'BRWN' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "SOFT"
            then ["CCOA", "ROBU", "WHSG", "BRWN", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_03: <"Further sub-product Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'OOLI', this field shall be populated and shall contain only one of the following values: 'LAMP' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "OOLI"
            then ["LAMP", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_04: <"Further sub-product Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'GRIN', this field shall be populated and shall contain only one of the following values: 'MWHT' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "GRIN"
            then ["MWHT", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_05: <"Further sub-product Condition 5">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'ELEC', this field shall be populated and shall contain only one of the following values: 'BSLD', 'FITR', 'PKLD', 'OFFP' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "ELEC"
            then ["BLSD", "FITR", "PKLD", "OFFP", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_06: <"Further sub-product Condition 7">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'NGAS', this field shall be populated and shall contain only one of the following values: 'GASP', 'LNGG', 'NBPG', 'NCGG', 'TTFG' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "NGAS"
            then ["GASP", "LNGG", "NBPG", "NCGG", "TTFG", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_07: <"Further sub-product Condition 7">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'OILP', this field shall be populated and shall contain only one of the following values: 'BAKK', 'BDSL', 'BRNT', 'BRNX', 'CNDA', 'COND', 'DSEL', 'DUBA', 'ESPO', 'ETHA', 'FUEL', 'FOIL', 'GOIL', 'GSLN', 'HEAT', 'JTFL', 'KERO', 'LLSO', 'MARS', 'NAPH', 'NGLO', 'TAPI', 'URAL', 'WTIO' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "OIP"
            then ["BAKK", "BDSL", "BRNT", "BRNX", "CNDA", "COND", "DSEL", "DUBA", "ESPO", "ETHA", "FUEL", "FOIL", "GOIL", "GSLN", "HEAT", "JTFL", "KERO", "LLSO", "MARS", "NAPH", "NGLO", "TAPI", "URAL", "WTIO", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_08: <"Further sub-product Condition 8">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'EMIS', this field shall be populated and shall contain only one of the following values: 'CERE', 'ERUE', 'EUAE', 'EUAA' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "EMIS"
            then ["CERE", "ERUE", "EUAE", "EUAA", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_09: <"Further sub-product Condition 9">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'WETF', this field shall be populated and shall contain only one of the following values: 'TNKR' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "WETF"
            then ["TNKR", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_10: <"Further sub-product Condition 10">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'DRYF', this field shall be populated and shall contain only one of the following values: 'DBCR' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "DRYF"
            then ["DBCR", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_11: <"Further sub-product Condition 11">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'NPRM', this field shall be populated and shall contain only one of the following values: 'ALUM', 'ALUA', 'CBLT', 'COPR', 'IRON', 'LEAD', 'MOLY', 'NASC', 'NICK', 'STEL', 'TINN', 'ZINC' or OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "NPRM"
            then ["ALUM", "ALUA", "CBLT", "COPR", "IRON", "LEAD", "MOLY", "NASC", "NICK", "STEL", "TINN", "ZINC", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_12: <"Further sub-product Condition 12">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'PRME', this field shall be populated and shall contain only one of the following values: 'GOLD', 'SLVR', 'PTNM', 'PLDM' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "PRME"
            then ["GOLD", "SLVR", "PRNM", "PLDM", "OTHR"] any = furtherSubProduct

    condition EMIR_VR_2118_13: <"Further sub-product Condition 13">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'POTA', 'DIRY', 'FRST', 'SEAF', 'LSTK', 'COAL', 'INRG', 'RNNG', 'LGHT', 'DIST', 'WTHR', 'CRBR', 'CSHP', 'AMMO', 'DAPH', 'PTSH', 'SLPH', 'UREA', 'UAAN', 'CSTR', 'MFTG', 'CBRD', 'NSPT', 'PULP', 'RCVP', 'PLST'or 'OTHR', or if 2.117 is blank, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["POTA", "DIRY", "FRST", "SEAF", "LSTK", "COAL", "INRG", "RNNG", "LGHT", "DIST", "WTHR", "CRBR", "CSHP", "AMMO", "DAPH", "PTSH", "SLPH", "UREA", "UAAN", "CSTR", "MFTG", "CBRD", "NSPT", "PULP", "RCVP", "PLST", "OTHR"] any = subProduct
            then furtherSubProduct is absent

// Section 2k - Commodities and emission allowances (Energy)
    condition EMIR_VR_2119_01: <"Delivery point or zone Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "119" validationRule "Transaction"
        provision " If field 2.117 is populated with 'NGAS' or 'ELEC', this field shall be populated and shall contain an EIC code as specified in the EIC code list and pertaining to a delivery point within the European Union. or 16 alphanumerical characters XXXXXXXXXXXXXXXX if the delivery point is not within the European Union. Otherwise the field shall be left blank."]
    [regulatoryReference ISDA PeerReviewGroup date "20231020"
        provision " Format validation handled with type check EICIdentifier"]
        if IsVRAllowedForActionType(actionType)
        then if ["NGAS", "ELEC"] any = subProduct
            then (deliveryPoint
                extract (IsAcceptedEicCode(item) or item = "XXXXXXXXXXXXXXXX")
                then all = True)
            else deliveryPoint is absent

    condition EMIR_VR_2120_01: <"Interconnection Point Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "120" validationRule "Transaction"
        provision " If field 2.117  is populated with 'NGAS' or 'ELEC', this field  shall be populated and shall contain an EIC code as specified in the EIC Area Codes (Z) or (Y) code list and pertaining to a interconnection point within the European Union, or 16 alphanumerical characters XXXXXXXXXXXXXXXX if the interconnection point is not within the European Union."]
    [regulatoryReference ISDA PeerReviewGroup date "20231020"
        provision " Format validation handled with type check EICIdentifier"]
        if IsVRAllowedForActionType(actionType)
        then if ["NGAS", "ELEC"] any = subProduct
            then IsAcceptedEicCode(interconnectionPoint)
                    or interconnectionPoint = "XXXXXXXXXXXXXXXX"

    condition EMIR_VR_2121_01: <"Load Type Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "121" validationRule "Transaction"
        provision " If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain one of the following values: 'BSLD', 'PKLD', 'OFFP', 'HABH', 'SHPD', 'GASD' or 'OTHR'. 4 alphabetical characters. Otherwise the field shall be left blank."]
    [regulatoryReference ISDA PeerReviewGroup date "20231103"
        provision "The condition on the values are being performed via the enum EnergyLoadType1Code used to defined the type of field loadType"]
        if IsVRAllowedForActionType(actionType)
        then deliveryPoint
            extract dp [
                if IsAcceptedEicCode(dp) or IsAcceptedEicCode(interconnectionPoint)
                then loadType exists
                else loadType is absent
            ]
            then all = True

    condition EMIR_VR_2122_01: <"Delivery interval start time Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "122" validationRule "Transaction"
        provision " If field 2.119 or 2.120 is populated with EIC code, this field shall be populated in a common input format: hh:mm:ssZ. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> deliveryStartTime exists
                else dr -> deliveryStartTime is absent
            ]
            then all = True

    condition EMIR_VR_2123_01: <"Delivery interval end time Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "123" validationRule "Transaction"
        provision " If field 2.119 or 2.120 is populated with EIC code, this field shall be populated in a common input format: hh:mm:ssZ. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> deliveryEndTime exists
                else dr -> deliveryEndTime is absent
            ]
            then all = True

    condition EMIR_VR_2124_01: <" Delivery start date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "124" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated in a ISO 8601 common input format: YYYY-MM-DD. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> deliveryStartDate exists
                else dr -> deliveryStartDate is absent
            ]
            then all = True

    condition EMIR_VR_2125_01: <"Delivery end date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "125" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated in a ISO 8601 common input format: YYYY-MM-DD. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> deliveryEndDate exists
                else dr -> deliveryEndDate is absent
            ]
            then all = True

    condition EMIR_VR_2126_01: <"Duration Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "123" validationRule "Transaction"
        provision " If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain one of the following values: 'MNUT', 'HOUR', 'DASD', 'WEEK', 'MNTH', 'QURT', 'SEAS', 'YEAR' or 'OTHR'. 4 alphabetical characters. Otherwise the field shall be left blank."]
    [regulatoryReference ISDA PeerReviewGroup date "20231102"
        provision "The condition on the values are being performed via the enum DurationType1Code used to defined the type of field duration"]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> duration exists
                else dr -> duration is absent
            ]
            then all = True

    condition EMIR_VR_2127_01: <"Days of the week Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "127" validationRule "Transaction"
    provision " If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain  at least one of the following values: 'WDAY', 'WEND', 'MOND', 'TUED', 'WEDD', 'THUD', 'FRID', 'SATD', 'SUND', 'XBHL', 'IBHL'. 4 alphabetical characters. Otherwise the field shall be left blank."]
    [regulatoryReference ISDA PeerReviewGroup date "20231020"
        provision "Not fully modelled. The following EIC referentiel must be made available in some way to digitizers: https://data.europa.eu/data/datasets/acer-remit-list-of-accepted-delivery-point-or-zone-eic-codes/?locale=en"]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then ["WDAY", "WEND", "MOND", "TUED", "WEDD", "THUD", "FRID", "SATD", "SUND", "XBHL", "IBHL"] = dr -> daysOfTheWeek
                else dr -> daysOfTheWeek is absent
            ]
            then all = True

    condition EMIR_VR_2128_01: <"Delivery capacity">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "128" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain up to 20 numeric digits including up to 19 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. Negative values are allowed. The negative symbol, if populated, is not counted as a numerical character. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> deliveryCapacity exists
                else dr -> deliveryCapacity is absent
            ]
            then all = True

    condition EMIR_VR_2129_01: <"Quantity Unit">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "129" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain one of the following values: 'KWAT', 'KWHH', 'KWHD', 'MWAT', 'MWHH', 'MWHD', 'GWAT', 'GWHH', 'GWHD', 'THMD', 'KTMD', 'MTMD', 'CMPD', 'MCMD', 'BTUD', 'MBTD', 'MJDD', 'HMJD', 'MMJD', or 'GJDD'.Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> quantityUnit exists
                else dr -> quantityUnit is absent
            ]
            then all = True

    condition EMIR_VR_2130_01: <"Price/time interval quantity">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "130" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain up to 20 numeric characters including up to 19 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. Negative values are allowed. The negative symbol, if populated, is not counted as a numeric character. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> priceTimeIntervalQuantity exists
                else dr -> priceTimeIntervalQuantity is absent
            ]
            then all = True

    condition EMIR_VR_2131_01: <" Currency of the price/time interval quantity">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "131" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters. The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> currencyOfThePriceTimeIntervalQuantity exists
                else dr -> currencyOfThePriceTimeIntervalQuantity is absent
            ]
            then all = True

//Section 2L - Options
    condition EMIR_VR_2132_01: <"Option type">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "132" validationRule "Transaction"
    provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' this field shall be populated and shall contain one of the following values: 'PUTO', 'CALL' or 'OTHR'. 4 alphabetical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["OPTN", "SWPT"] any = contractType
            then optionType exists and ["PUTO", "CALL", "OTHR"] any = optionType
            else optionType is absent

    condition EMIR_VR_2133_01: <"Option style">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "133" validationRule "Transaction"
    provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' this field shall be populated and shall contain  one of the following values: 'AMER', 'BERM', or 'EURO'. Up to 4 alphabetical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["OPTN", "SWPT"] any = contractType
            then optionStyle exists and ["AMER", "BERM", "EURO"] any = optionStyle
            else optionStyle is absent

    condition EMIR_VR_2134_01: <"Strike price">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "134" validationRule "Transaction"
      provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' this field shall be populated"]
        if IsVRAllowedForActionType(actionType)
        then if ['OPTN', 'SWPT'] any = contractType
            then strikePrice exists

    condition EMIR_VR_2134_02: <"Strike price">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "134" validationRule "Transaction"
      provision "If field 2.10 (Contract type) is populated with 'SWAP' or 'CFDS' this field is optional"]
        if IsVRAllowedForActionType(actionType)
        then if ['SWAP', 'CFDS'] any = contractType
            then (strikePrice exists or strikePrice is absent)

    condition EMIR_VR_2134_03: <"Strike price">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "134" validationRule "Transaction"
      provision "Up to 18 numeric characters including up to 13 decimals, if Strike price is expressed as monetary amount"]
        if IsVRAllowedForActionType(actionType)
        then if strikePrice exists
                    and strikePrice -> strikePriceNotation = PriceNotationEnum -> Monetary
            then strikePrice -> strikePriceMonetary exists

    condition EMIR_VR_2134_04: <"Strike price">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "134" validationRule "Transaction"
      provision "Up to 11 numeric characters including up to 10 decimals if Strike price is expressed as percentage. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. Negative values are allowed. The negative symbol, if populated, is not counted as a numeric character. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if strikePrice exists
                    and strikePrice -> strikePriceNotation = PriceNotationEnum -> Percentage
            then strikePrice -> strikePricePercentage exists

    condition EMIR_VR_2135_01: <"Effective date of the strike price">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "135" validationRule "Transaction"
      provision "If field 2.137 is populated, this field shall be populated in a common input format: YYYY-MM-DD. Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (strikePriceSchedule
            extract
                (if strikePriceInEffectOnAssociatedEffectiveDateMonetary exists
                        or strikePriceInEffectOnAssociatedEffectiveDatePercentage exists
                then effectiveDateStrikePrice exists
                else effectiveDateStrikePrice is absent)
            then all = True)

    condition EMIR_VR_2136_01: <"End date of the strike price">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "136" validationRule "Transaction"
      provision "When populated, this field shall be reported in a common input format: YYYY-MM-DD."]
        if IsVRAllowedForActionType(actionType)
        then if strikePriceSchedule -> endDateStrikePrice exists
            then True

    condition EMIR_VR_2136_02: <"End date of the strike price">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "136" validationRule "Transaction"
      provision "If field 2.137 is not populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (strikePriceSchedule
            extract
                (if strikePriceInEffectOnAssociatedEffectiveDateMonetary is absent
                        and strikePriceInEffectOnAssociatedEffectiveDatePercentage is absent
                then endDateStrikePrice is absent
                else True)
            then all = True)

    condition EMIR_VR_2137_01: <"Strike price in effect on associated effective date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "137" validationRule "Transaction"
      provision "When populated, this field shall contain up to 18 numeric characters including up to 13 decimals, if Strike price is expressed as monetary amount. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. Negative values are allowed. The negative symbol, if populated, is not counted as a numeric character."]
        if IsVRAllowedForActionType(actionType)
        then (strikePriceSchedule
            extract
                (if strikePriceNotationInEffectOnAssociatedEffectiveDate = PriceNotationEnum -> Monetary
                then strikePriceInEffectOnAssociatedEffectiveDateMonetary exists)
            then all = True)

    condition EMIR_VR_2137_02: <"Strike price in effect on associated effective date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "137" validationRule "Transaction"
      provision "When populated, this field shall contain up to 11 numeric characters including up to 10 decimals, if Strike price is expressed as percentage. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. Negative values are allowed. The negative symbol, if populated, is not counted as a numeric character."]
        if IsVRAllowedForActionType(actionType)
        then (strikePriceSchedule
            extract
                (if strikePriceNotationInEffectOnAssociatedEffectiveDate = PriceNotationEnum -> Percentage
                then strikePriceInEffectOnAssociatedEffectiveDatePercentage exists)
            then all = True)

    condition EMIR_VR_2138_01: <"Strike price currency/currency pair">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "138" validationRule "Transaction"
      provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' and field 2.11 (Asset class) is populated with value different than 'CURR' or 'INTR', this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if ['OPTN', 'SWPT'] any = contractType and ['CURR', 'INTR'] disjoint assetClass
            then strikePrice -> strikePriceCurrency exists

    condition EMIR_VR_2138_02: <"Strike price currency/currency pair">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "138" validationRule "Transaction"
      provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' and field 2.11 (Asset class) is populated with 'CURR', this field shall be populated  and shall contain 7 characters representing two ISO 4217 currency codes separated by / ."]
        if IsVRAllowedForActionType(actionType)
        then if ['OPTN', 'SWPT'] any = contractType and assetClass = 'CURR'
            then strikePrice -> strikePriceCurrency exists

    condition EMIR_VR_2138_03: <"Strike price currency/currency pair">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "138" validationRule "Transaction"
      provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX. Otherwise this field shall be let blank."]
        if IsVRAllowedForActionType(actionType)
        then if strikePrice -> strikePriceCurrency exists
            then [
                    ISOCurrencyCodeEnum -> XAG to-string,
                    ISOCurrencyCodeEnum -> XAU to-string,
                    ISOCurrencyCodeEnum -> XBA to-string,
                    ISOCurrencyCodeEnum -> XBB to-string,
                    ISOCurrencyCodeEnum -> XBC to-string,
                    ISOCurrencyCodeEnum -> XBD to-string,
                    ISOCurrencyCodeEnum -> XDR to-string,
                    ISOCurrencyCodeEnum -> XPD to-string,
                    ISOCurrencyCodeEnum -> XPT to-string,
                    ISOCurrencyCodeEnum -> XXX to-string
                ] all <> strikePrice -> strikePriceCurrency
            else strikePrice -> strikePriceCurrency is absent

    condition EMIR_VR_2139_01: <"Option premium amount">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "139" validationRule "Transaction"
    provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' this field shall be populated and shall contain any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. Otherwise this field shall be let blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["OPTN", "SWPT"] any = contractType
            then optionPremiumAmount >= 0
            else optionPremiumAmount is absent

    condition EMIR_VR_2140_01: <"Option premium currency">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "140" validationRule "Transaction"
    provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters. Otherwise this field shall be let blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["OPTN", "SWPT"] any = contractType
            then optionPremiumCurrency exists
            else optionPremiumCurrency is absent

    condition EMIR_VR_2140_02: <"Option premium currency">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "140" validationRule "Transaction"
    provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType)
        then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> optionPremiumCurrency

    condition EMIR_VR_2141_01: <"Option premium payment date">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "141" validationRule "Transaction"
    provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT', this field shall be populated in a common input format: YYYY-MM-DD. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["OPTN", "SWPT"] any = contractType
            then optionPremiumPaymentDate exists
            else optionPremiumPaymentDate is absent

    condition EMIR_VR_2142_01: <"Maturity date of the underlying Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "142" validationRule "Transaction"
    provision "If field 2.10 (Contract type) is populated with 'SWPT' this field shall be populated in a common input format: YYYY-MM-DD. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if contractType = "SWPT"
            then maturityDateOfTheUnderlying exists
            else maturityDateOfTheUnderlying is absent

    condition EMIR_VR_2142_02: <"Maturity date of the underlying Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "142" validationRule "Transaction"
    provision "The maturity date of the underlying should be equal or later than 2014-02-12."]
        if IsVRAllowedForActionType(actionType)
        then if maturityDateOfTheUnderlying exists
            then CompareDateTo(maturityDateOfTheUnderlying, 2014, 2, 12) >= 0

//Section 2m - Credit derivatives
    condition EMIR_VR_2143_01: <"Seniority Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "143" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT', this field shall be populated and shall contain one of the following values: 'SNDB', 'SBOD' or 'OTHR'. 4 alphabetical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CRDT"
            then seniority exists and ["SNDB", "SBOD", "OTHR"] any = seniority
            else seniority is absent

    condition EMIR_VR_2144_01: <"Reference entity Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "144" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT', one of the fields 2.13 or 2.144 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CRDT"
            then referenceEntity exists or underlyingIdentificationType exists

    condition EMIR_VR_2144_02: <"Reference entity Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "144" validationRule "Transaction"
      provision "When populated, this field shall contain: valid ISO 3166 code - 2 alphabetical characters, or valid ISO 3166-2 code - 2 alphabetical characters followed by dash ('-'), followed by up to 3 alphanumerical characters, or a valid ISO 17442 (LEI) included in the GLEIF database maintained by the Central Operating Unit. The status of the LEI shall be 'Issued', 'Lapsed', 'Pending transfer' or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp. XXXXXXXXXXXXXXXXXX99 can be reported for non-EEA entities that do not have LEI."]
        if IsVRAllowedForActionType(actionType)
        then if referenceEntity exists
            then if GetOrFetchLeiData(empty, referenceEntity) exists
                then LeiRegistrationStatusIsValid(
                            nonReportable -> enrichment -> leiData,
                            referenceEntity,
                            eventDate,
                            reportingTimestamp -> date
                        )
                else if StringLength(referenceEntity) < 7 and IsValidRefEntity(
                            referenceEntity
                        ) = True
                then True
                else False

    condition EMIR_VR_2144_03: <"Reference entity Validation Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "144" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch."]
        if IsVRAllowedForActionType(actionType)
        then if referenceEntity exists and GetOrFetchLeiData(empty, referenceEntity) exists
            then GetOrFetchLeiData(empty, referenceEntity) -> entityCategory <> LeiCategoryEnum -> Branch

    condition EMIR_VR_2144_04: <"Reference entity Validation Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "144" validationRule "Transaction"
      provision "If field 2.11 is not populated with 'CRDT' or if field 2.13 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass <> "CRDT" or underlyingIdentificationType exists
            then referenceEntity is absent

    condition EMIR_VR_2145_01: <"Series Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "145" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT' and field, 2.13 (Underlying identification type) is populated with 'X', this field shall be populated with a positive integer value. Up to 5 numerical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CRDT" and underlyingIdentificationType = "X"
            then series exists and series >= 0
            else series is absent

    condition EMIR_VR_2146_01: <"Version Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "146" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT' and field 2.13 (Underlying identification type) is populated with 'X', this field shall be populated with a positive integer value. Up to 5 numerical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CRDT" and underlyingIdentificationType = "X"
            then version exists and version >= 0
            else version is absent

    condition EMIR_VR_2147_01: <"Index Factor Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "147" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT' and field 2.13 (Underlying identification type) is populated with 'X', this field shall be populated with any value between 0 and 1 (including 0 and 1). Up to 11 numeric characters, including up to 10 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CRDT" and underlyingIdentificationType = "X"
            then indexFactor exists and indexFactor >= 0 and indexFactor <= 1
            else indexFactor is absent

    condition EMIR_VR_2148_01: <"Tranche Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "148" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT', this field shall be populated and shall contain one of the following values: 'TRUE' or 'FALSE'. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = "CRDT"
            then tranche exists and [True, False] any = tranche
            else tranche is absent

    condition EMIR_VR_2149_01: <"CDS index attachment point Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "149" validationRule "Transaction"
      provision "If field 2.148 is populated with 'TRUE', this field shall be populated with any value between 0 and 1 (including 0 and 1) up to 11 numeric characters, including up to 10 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot."]
        if IsVRAllowedForActionType(actionType)
        then if tranche = True
            then cdSIndexAttachmentPoint exists and cdSIndexAttachmentPoint >= 0 and cdSIndexAttachmentPoint <= 1

    condition EMIR_VR_2149_02: <"CDS index attachment point Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "149" validationRule "Transaction"
      provision "If field 2.148 is populated with 'FALSE', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if tranche = False then cdSIndexAttachmentPoint is absent

    condition EMIR_VR_2150_01: <"CDS index detachment point Validation Condition">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "150" validationRule "Transaction"
      provision "If field 2.148 is populated with 'TRUE', this field shall be populated with any value between 0 and 1 (including 0 and 1) up to 11 numeric characters, including up to 10 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. If field 2.148 is populated with 'FALSE', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if tranche = True
            then cdSIndexDetachmentPoint exists and cdSIndexDetachmentPoint >= 0 and cdSIndexDetachmentPoint <= 1
            else if tranche = False
            then cdSIndexDetachmentPoint is absent

    condition EMIR_VR_2150_02: <"CDS index detachment point Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "150" validationRule "Transaction"
      provision "If field 2.148 is populated with 'FALSE', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if tranche = False then cdSIndexDetachmentPoint is absent

//Section 2n - Modifications to the derivative
    condition EMIR_VR_2151_01: <"Action type Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "This field shall contain one of the following values: 'NEWT', 'MODI', 'CORR', 'TERM', 'EROR', 'REVI', 'VALU', or 'POSC'. 4 alphabetical characters."]
        ([ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> EROR, ActionTypeEnum -> REVI, ActionTypeEnum -> VALU, ActionTypeEnum -> POSC] any = actionType)

    condition EMIR_VR_2151_02: <"Action type Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "The first report received for a given UTI by the reporting counterparty shall only contain value 'NEWT' or 'POSC' in this field."]
        True

    condition EMIR_VR_2151_03: <"Action type Validation Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "Only one report with the action type 'NEWT' or 'POSC' for a given combination of Counterparty ID-UTI shall be accepted. "]
        True

    condition EMIR_VR_2151_04: <"Action type Validation Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "After action type 'EROR' is reported by a counterparty, the only allowed action type to be submitted by that counterparty for the given UTI is 'REVI'. Only when 'REVI' is accepted, other action types can be reported for that UTI. "]
        True

    condition EMIR_VR_2151_05: <"Action type Validation Condition 5">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "Where a derivative is non-outstanding, the only action types allowed for that UTI are 'EROR', 'REVI', 'MODI', 'CORR' and 'VALU'."]
        True

    condition EMIR_VR_2151_06: <"Action type Validation Condition 6">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "Where a derivative is outstanding, 'REVI' is not allowed."]
        True

    condition EMIR_VR_2152_01: <"Event type Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "152" validationRule "Transaction"
      provision "This field shall contain one of the following values: 'TRAD', 'NOVA', 'COMP', 'ETRM', 'CLRG', 'EXER', 'ALOC', 'CREV', 'CORP', 'INCP', or 'UPDT'. 4 alphabetical characters."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then if eventType exists
            then ['TRAD', 'NOVA', 'COMP', 'ETRM', 'CLRG', 'EXER', 'ALOC', 'CREV', 'CORP', 'INCP', 'UPDT'] any = eventType

    condition EMIR_VR_2152_02: <"Event type Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "152" validationRule "Transaction"
      provision "If field 2.151 is populated with 'NEWT', this field shall be populated and shall contain only one of the following values: 'TRAD', 'NOVA', 'COMP', 'CLRG', 'EXER', 'ALOC', 'CORP' or 'INCP'."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then if actionType = ActionTypeEnum -> NEWT
            then ['TRAD', 'NOVA', 'COMP', 'CLRG', 'EXER', 'ALOC'] any = eventType

    condition EMIR_VR_2152_03: <"Event type Validation Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "152" validationRule "Transaction"
      provision "If field 2.151 is populated with 'MODI', this field, when populated, shall contain only one of the following values: 'TRAD', 'NOVA', 'COMP', 'ETRM', 'EXER', 'ALOC', 'CREV', 'CORP', 'INCP' or 'UPDT'."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then if actionType = ActionTypeEnum -> MODI
            then ['TRAD', 'NOVA', 'COMP', 'ETRM', 'EXER', 'ALOC', 'CREV', 'CORP', 'INCP', 'UPDT'] any = eventType

    condition EMIR_VR_2152_04: <"Event type Validation Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "152" validationRule "Transaction"
      provision "If field 2.151 is populated with 'TERM', this field shall contain only one of the following values: 'NOVA', 'COMP', 'ETRM', 'CLRG', 'EXER', 'ALOC', 'CREV', 'CORP 'or 'INCP'."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then if actionType = ActionTypeEnum -> TERM
            then ['NOVA', 'COMP', 'ETRM', 'CLRG', 'EXER', 'ALOC', 'CREV', 'CORP', 'INCP'] any = eventType

    condition EMIR_VR_2152_05: <"Event type Validation Condition 5">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "152" validationRule "Transaction"
      provision "If field 2.151 is populated with 'CORR', 'EROR', 'REVI', 'VALU' or 'POSC', this field shall be left blank."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then if [ActionTypeEnum -> CORR, ActionTypeEnum -> EROR, ActionTypeEnum -> REVI, ActionTypeEnum -> VALU, ActionTypeEnum -> POSC] any = actionType
            then eventType is absent

    condition EMIR_VR_2153_01: <"Event date Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "This field shall be populated in a common input format: YYYY-MM-DD."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then True

    condition EMIR_VR_2153_02: <"Event date Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "The value of this field shall be greater than or equal to the value of the field 2.42. For action types 'NEWT' and 'POSC', the value of this field should be equal to the date part of the field 2.42."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> POSC] any = actionType
        then eventDate = executionTimestamp -> date
        else eventDate >= executionTimestamp -> date

    condition EMIR_VR_2153_03: <"Event date Validation Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "The event date should be equal or later than 2014-02-12."]
        CompareDateTo(eventDate, 2014, 2, 12) >= 0

    condition EMIR_VR_2153_04: <"Event date Validation Condition 4">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "The event date should be equal or earlier than the date part of the reporting timestamp (field 1.1). "]
        eventDate <= reportingTimestamp -> date

    condition EMIR_VR_2153_05: <"Event date Validation Condition 5">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "For action types 'REVI' and 'EROR', the event date should be equal to the date part of the reporting timestamp (field 1.1)."]
        if [ActionTypeEnum -> REVI, ActionTypeEnum -> EROR] any = actionType
        then eventDate = reportingTimestamp -> date

    condition EMIR_VR_2153_06: <"Event date Validation Condition 6">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "For action type 'CORR', the event date should be equal or later than the date of the execution timestamp (field 2.42)."]
        if actionType = ActionTypeEnum -> CORR
        then eventDate >= executionTimestamp -> date

    condition EMIR_VR_2153_07: <"Event date Validation Condition 7">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "For action type 'TERM' the value of this field should be equal to the value of the field 2.45."]
        if actionType = ActionTypeEnum -> TERM
        then eventDate = earlyTerminationDate

    condition EMIR_VR_2153_08: <"Event date Validation Condition 8">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "For all action types except for 'REVI', the event date shall be prior or equal to the Expiration date 
      and -if populated- the Termination date reported for that UTI. "]
        if actionType <> ActionTypeEnum -> REVI
        then (if earlyTerminationDate is absent
            then eventDate <= expirationDate
            else eventDate <= expirationDate and eventDate <= earlyTerminationDate)

    condition EMIR_VR_2154_01: <"Level Validation Condition 1">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "154" validationRule "Transaction"
      provision "This field shall contain one of the following values: 'TCTN' or 'PSTN'. 4 alphabetical characters."]
        (['TCTN', 'PSTN'] any = level)

    condition EMIR_VR_2154_02: <"Level Validation Condition 2">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "154" validationRule "Transaction"
      provision "If field 2.151 is populated with 'POSC', this field shall be populated with 'TCTN'"]
        if actionType = ActionTypeEnum -> POSC then level = 'TCTN'

    condition EMIR_VR_2154_03: <"Level Validation Condition 3">
        [docReference ESMA EMIR ValidationRules table "2" dataElement "154" validationRule "Transaction"
      provision "The content of this field can be modified only with action type 'CORR' "]
        if actionType = ActionTypeEnum -> CORR then True

type NotionalAmountScheduleLeg1Report:
    amount ShortFraction5DecimalNumber (0..1)
        [ruleReference NotionalAmountInEffectOnAssociatedEffectiveDateOfLeg1]
    effectiveDate date (0..1)
        [ruleReference EffectiveDateOfTheNotionalAmountOfLeg1]
    endDate date (0..1) //TODO - Update to date or ISO Date for format validation
        [ruleReference EndDateOfTheNotionalAmountOfLeg1]

type NotionalAmountScheduleLeg2Report:
    amount ShortFraction5DecimalNumber (0..1)
        [ruleReference NotionalAmountInEffectOnAssociatedEffectiveDateOfLeg2]
    effectiveDate date (0..1)
        [ruleReference EffectiveDateOfTheNotionalAmountOfLeg2]
    endDate date (0..1) //TODO - Update to date or ISO Date for format validation
        [ruleReference EndDateOfTheNotionalAmountOfLeg2]

type OtherPaymentReport:
    paymentType string (0..1)
        [ruleReference OtherPaymentType]
    amount ShortFraction5DecimalNumber (0..1)
        [ruleReference OtherPaymentAmount]
    currency ISOCurrencyCodeEnum (0..1)
        [ruleReference OtherPaymentCurrency]
    date date (0..1)
        [ruleReference OtherPaymentDate]
    payer Min20Max72AlphaNumericText (0..1)
        [ruleReference OtherPaymentPayer]
    payerFormat PartyIdentifierFormatEnum (0..1)
        [nonReportable]
        [ruleReference OtherPaymentPayerFormat]
    receiver Min20Max72AlphaNumericText (0..1)
        [ruleReference OtherPaymentReceiver]
    receiverFormat PartyIdentifierFormatEnum (0..1)
        [nonReportable]
        [ruleReference OtherPaymentReceiverFormat]

type NotionalQuantityScheduleLeg1Report:
    effectiveDate date (0..1)
        [ruleReference EffectiveDateOfTheNotionalQuantityOfLeg1]
    endDate date (0..1)
        [ruleReference EndDateOfTheNotionalQuantityOfLeg1]
    value ShortFraction5DecimalNumber (0..1)
        [ruleReference NotionalQuantityInEffectOnAssociatedEffectiveDateOfLeg1]

type NotionalQuantityScheduleLeg2Report:
    effectiveDate date (0..1)
        [ruleReference EffectiveDateOfTheNotionalQuantityOfLeg2]
    endDate date (0..1)
        [ruleReference EndDateOfTheNotionalQuantityOfLeg2]
    value ShortFraction5DecimalNumber (0..1)
        [ruleReference NotionalQuantityInEffectOnAssociatedEffectiveDateOfLeg2]

type PriceScheduleReport:
    effectiveDate ISODate (0..1)
        [ruleReference UnadjustedEffectiveDateOfThePrice]
    endDate ISODate (0..1)
        [ruleReference UnadjustedEndDateOfThePrice]
    priceMonetary BaseOne18Rate (0..1)
        [ruleReference PriceInEffectBetweenTheUnadjustedEffectiveAndEndDateFormatMonetary]
    pricePercentage BaseOneRate (0..1)
        [ruleReference PriceInEffectBetweenTheUnadjustedEffectiveAndEndDatePercentage]

    condition MonetaryOrPercentage:
        optional choice priceMonetary, pricePercentage

type PriceAndNotation:
    priceMonetary BaseOne18Rate (0..1)
        [ruleReference PriceFormatMonetary]
    pricePercentage BaseOneRate (0..1)
        [ruleReference PriceFormatPercentage]
    priceCurrency ISOCurrencyCodeEnum (0..1)
        [ruleReference PriceCurrency]
    priceNotation PriceNotationEnum (0..1)
        [nonReportable]
        [ruleReference PriceNotation]

    condition MonetaryOrPercentage:
        optional choice priceMonetary, pricePercentage

type StrikePriceAndNotation:
    strikePriceMonetary BaseOne18Rate (0..1)
        [ruleReference StrikePriceMonetary]
    strikePricePercentage BaseOneRate (0..1)
        [ruleReference StrikePricePercentage]
    strikePriceCurrency string (0..1)
        [ruleReference StrikePriceCurrencyCurrencyPair]
    strikePriceNotation PriceNotationEnum (0..1)
        [nonReportable]
        [ruleReference StrikePriceNotation]

    condition MonetaryOrPercentage:
        optional choice strikePriceMonetary, strikePricePercentage

type SpreadOfLeg1:
    spreadOfLeg1Monetary BaseOne18Rate (0..1)
        [ruleReference SpreadOfLeg1Monetary]
    spreadOfLeg1Percentage BaseOneRate (0..1)
        [ruleReference SpreadOfLeg1Percentage]
    spreadOfLeg1Basis BasisFormat (0..1)
        [ruleReference SpreadOfLeg1Basis]
    spreadCurrencyOfLeg1 ISOCurrencyCodeEnum (0..1)
        [ruleReference SpreadCurrencyOfLeg1]
    spreadOfLeg1Notation PriceNotationEnum (0..1)
        [nonReportable]
        [ruleReference SpreadOfLeg1Notation]

    condition MonetaryOrPercentageOrBasis:
        optional choice spreadOfLeg1Monetary, spreadOfLeg1Percentage, spreadOfLeg1Basis

type SpreadOfLeg2:
    spreadOfLeg2Monetary BaseOne18Rate (0..1)
        [ruleReference SpreadOfLeg2Monetary]
    spreadOfLeg2Percentage BaseOneRate (0..1)
        [ruleReference SpreadOfLeg2Percentage]
    spreadOfLeg2Basis BasisFormat (0..1)
        [ruleReference SpreadOfLeg2Basis]
    spreadCurrencyOfLeg2 ISOCurrencyCodeEnum (0..1)
        [ruleReference SpreadCurrencyOfLeg2]
    spreadOfLeg2Notation PriceNotationEnum (0..1)
        [nonReportable]
        [ruleReference SpreadOfLeg2Notation]

    condition MonetaryOrPercentageOrBasis:
        optional choice spreadOfLeg2Monetary, spreadOfLeg2Percentage, spreadOfLeg2Basis

type StrikePriceScheduleReport:
    effectiveDateStrikePrice ISODate (0..1)
        [ruleReference EffectiveDateOfTheStrikePrice]
    endDateStrikePrice ISODate (0..1)
        [ruleReference EndDateOfTheStrikePrice]
    strikePriceInEffectOnAssociatedEffectiveDateMonetary BaseOne18Rate (0..1)
        [ruleReference StrikePriceInEffectOnAssociatedEffectiveDateMonetary]
    strikePriceInEffectOnAssociatedEffectiveDatePercentage BaseOneRate (0..1)
        [ruleReference StrikePriceInEffectOnAssociatedEffectiveDatePercentage]
    strikePriceNotationInEffectOnAssociatedEffectiveDate PriceNotationEnum (0..1)
        [nonReportable]
        [ruleReference StrikePriceNotationInEffectOnAssociatedEffectiveDate]

    condition MonetaryOrPercentage:
        optional choice strikePriceInEffectOnAssociatedEffectiveDateMonetary, strikePriceInEffectOnAssociatedEffectiveDatePercentage

    condition Monetary:
        if strikePriceNotationInEffectOnAssociatedEffectiveDate = PriceNotationEnum -> Monetary
        then strikePriceInEffectOnAssociatedEffectiveDateMonetary exists

    condition Percentage:
        if strikePriceNotationInEffectOnAssociatedEffectiveDate = PriceNotationEnum -> Percentage
        then strikePriceInEffectOnAssociatedEffectiveDatePercentage exists

type PackageTransactionSpread:
    packageTransactionSpreadMonetary BaseOne18Rate (0..1)
        [ruleReference PackageTransactionSpreadMonetary]
    packageTransactionSpreadPercentage BaseOneRate (0..1)
        [ruleReference PackageTransactionSpreadPercentage]
    packageTransactionSpreadBasis BasisFormat (0..1)
        [ruleReference PackageTransactionSpreadBasis]
    packageTransactionSpreadNotation PriceNotationEnum (0..1)
        [nonReportable]
        [ruleReference PackageTransactionSpreadNotation]
    packageTransactionSpreadCurrency ISOCurrencyCodeEnum (0..1)
        [ruleReference PackageTransactionSpreadCurrency]

    condition MonetaryOrPercentageOrBasis:
        optional choice packageTransactionSpreadMonetary, packageTransactionSpreadPercentage, packageTransactionSpreadBasis

    condition MonetaryCurrency:
        if packageTransactionSpreadNotation = PriceNotationEnum -> Monetary
        then packageTransactionSpreadCurrency exists
                and packageTransactionSpreadMonetary exists

    condition Percentage:
        if packageTransactionSpreadNotation = PriceNotationEnum -> Percentage
        then packageTransactionSpreadPercentage exists

    condition Basis:
        if packageTransactionSpreadNotation = PriceNotationEnum -> Basis
        then packageTransactionSpreadBasis exists

type PackageTransactionPrice:
    packageTransactionPriceMonetary BaseOne18Rate (0..1)
        [ruleReference PackageTransactionPriceMonetary]
    packageTransactionPricePercentage BaseOneRate (0..1)
        [ruleReference PackageTransactionPricePercentage]
    packageTransactionPriceBasis BasisFormat (0..1)
        [ruleReference PackageTransactionPriceBasis]
    packageTransactionPriceNotation PriceNotationEnum (0..1)
        [nonReportable]
        [ruleReference PackageTransactionPriceNotation]
    packageTransactionPriceCurrency ISOCurrencyCodeEnum (0..1)
        [ruleReference PackageTransactionPriceCurrency]

    condition MonetaryOrPercentageOrBasis:
        optional choice packageTransactionPriceMonetary, packageTransactionPricePercentage, packageTransactionPriceBasis

type ESMAEMIRNonReportable:
    enrichment EnrichmentData (0..1) <"Populated by pre-enrichment process">
        [nonReportable]
        [ruleReference EnrichmentData]

type DeliveryReport:
    deliveryStartTime time (0..1)
        [ruleReference DeliveryIntervalStartTime]
    deliveryEndTime time (0..1)
        [ruleReference DeliveryIntervalEndTime]
    deliveryStartDate ISODate (0..1)
        [ruleReference DeliveryStartDate]
    deliveryEndDate ISODate (0..1)
        [ruleReference DeliveryEndDate]
    duration DurationType1Code (0..1)
        [ruleReference Duration]
    daysOfTheWeek string (0..*)
        [ruleReference DaysOfTheWeek]
    deliveryCapacity Max20D19Number (0..1)
        [ruleReference DeliveryCapacity]
    quantityUnit EnergyQuantityUnit2Code (0..1)
        [ruleReference QuantityUnit]
    priceTimeIntervalQuantity Max20D19Number (0..1)
        [ruleReference PriceTimeIntervalQuantity]
    currencyOfThePriceTimeIntervalQuantity ISOCurrencyCodeEnum (0..1)
        [ruleReference CurrencyOfThePriceTimeIntervalQuantity]

typeAlias Max25Number: <"Number (max 999) of objects represented as an integer.">
    number(digits: 25)

typeAlias Max52UpperAlphaNumericText: <"Specifies an alphanumeric string where only the the upper-case alphabetic characters AZ and the digits 09 are allowed.">
    string(minLength: 1, maxLength: 52, pattern: "[A-Z0-9]{1,52}")

typeAlias Max20D19Number: <"Represents as 20 digit number with support for 19 decimal">
    number(digits: 20, fractionalDigits: 19)
